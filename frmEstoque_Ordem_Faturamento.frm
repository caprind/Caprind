VERSION 5.00
Object = "{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0"; "COMDLG32.OCX"
Object = "{C932BA88-4374-101B-A56C-00AA003668DC}#1.1#0"; "MSMASK32.ocx"
Object = "{BDC217C8-ED16-11CD-956C-0000C04E4C0A}#1.1#0"; "tabctl32.ocx"
Object = "{935C9182-411B-4FFB-9512-97C8745743BC}#2.5#0"; "AResize.ocx"
Object = "{4F446E73-0578-46E4-81BC-6A88ADF59FEA}#2.3#0"; "DrawSuite2022.ocx"
Object = "{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}#2.2#0"; "MSCOMCTL.OCX"
Begin VB.Form frmEstoque_Ordem_Faturamento 
   BackColor       =   &H00E0E0E0&
   Caption         =   "Estoque - Ordem de faturamento"
   ClientHeight    =   10035
   ClientLeft      =   165
   ClientTop       =   -1575
   ClientWidth     =   15495
   ControlBox      =   0   'False
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   8.25
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "frmEstoque_Ordem_Faturamento.frx":0000
   KeyPreview      =   -1  'True
   LinkTopic       =   "Form1"
   MDIChild        =   -1  'True
   Moveable        =   0   'False
   NegotiateMenus  =   0   'False
   ScaleHeight     =   10035
   ScaleWidth      =   15495
   WindowState     =   2  'Maximized
   Begin ActiveResizeCtl.ActiveResize ActiveResize1 
      Left            =   1500
      Top             =   540
      _ExtentX        =   847
      _ExtentY        =   847
      Resolution      =   26
      ScreenHeight    =   1080
      ScreenWidth     =   1920
      ScreenHeightDT  =   1080
      ScreenWidthDT   =   1920
      AutoResizeOnLoad=   0   'False
      ApplicationName =   "Active Resize Control Professional"
      FormHeightDT    =   10500
      FormWidthDT     =   15615
      FormScaleHeightDT=   10035
      FormScaleWidthDT=   15495
      ResizeFormBackground=   -1  'True
      ResizePictureBoxContents=   -1  'True
   End
   Begin TabDlg.SSTab SSFaturamento 
      Height          =   10260
      Left            =   0
      TabIndex        =   65
      Top             =   0
      Width           =   15480
      _ExtentX        =   27305
      _ExtentY        =   18098
      _Version        =   393216
      Tabs            =   6
      Tab             =   2
      TabsPerRow      =   6
      TabHeight       =   520
      ShowFocusRect   =   0   'False
      BackColor       =   14737632
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Tahoma"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TabCaption(0)   =   "Carteira de pedidos"
      TabPicture(0)   =   "frmEstoque_Ordem_Faturamento.frx":1042
      Tab(0).ControlEnabled=   0   'False
      Tab(0).Control(0)=   "Frame1(27)"
      Tab(0).Control(1)=   "PBLista(5)"
      Tab(0).Control(2)=   "USToolBar7"
      Tab(0).Control(3)=   "Lista_carteira"
      Tab(0).ControlCount=   4
      TabCaption(1)   =   "Gestão de ordens"
      TabPicture(1)   =   "frmEstoque_Ordem_Faturamento.frx":105E
      Tab(1).ControlEnabled=   0   'False
      Tab(1).Control(0)=   "USToolBar1"
      Tab(1).Control(1)=   "Frame1(8)"
      Tab(1).Control(2)=   "Frame1(29)"
      Tab(1).Control(3)=   "txtID_cobranca"
      Tab(1).Control(4)=   "ListaNota"
      Tab(1).Control(5)=   "Frame1(7)"
      Tab(1).Control(6)=   "TabFiltro"
      Tab(1).Control(7)=   "Frame1(2)"
      Tab(1).Control(8)=   "Frame1(1)"
      Tab(1).Control(9)=   "Frame6"
      Tab(1).Control(10)=   "Frame1(6)"
      Tab(1).Control(11)=   "Frame1(5)"
      Tab(1).Control(12)=   "Frame1(0)"
      Tab(1).Control(13)=   "Frame1(4)"
      Tab(1).Control(14)=   "Frame1(3)"
      Tab(1).ControlCount=   15
      TabCaption(2)   =   "Produtos"
      TabPicture(2)   =   "frmEstoque_Ordem_Faturamento.frx":107A
      Tab(2).ControlEnabled=   -1  'True
      Tab(2).Control(0)=   "USToolBar2"
      Tab(2).Control(0).Enabled=   0   'False
      Tab(2).Control(1)=   "Txt_IDestoque"
      Tab(2).Control(1).Enabled=   0   'False
      Tab(2).Control(2)=   "txtidproduto"
      Tab(2).Control(2).Enabled=   0   'False
      Tab(2).Control(3)=   "Frame1(9)"
      Tab(2).Control(3).Enabled=   0   'False
      Tab(2).Control(4)=   "Frame1(11)"
      Tab(2).Control(4).Enabled=   0   'False
      Tab(2).Control(5)=   "Frame1(10)"
      Tab(2).Control(5).Enabled=   0   'False
      Tab(2).Control(6)=   "Frame2"
      Tab(2).Control(6).Enabled=   0   'False
      Tab(2).Control(7)=   "ListaProdutos"
      Tab(2).Control(7).Enabled=   0   'False
      Tab(2).Control(8)=   "Frame7"
      Tab(2).Control(8).Enabled=   0   'False
      Tab(2).ControlCount=   9
      TabCaption(3)   =   "Serviços"
      TabPicture(3)   =   "frmEstoque_Ordem_Faturamento.frx":1096
      Tab(3).ControlEnabled=   0   'False
      Tab(3).Control(0)=   "ListaServicos"
      Tab(3).Control(1)=   "PBLista(2)"
      Tab(3).Control(2)=   "txtidservico"
      Tab(3).Control(3)=   "Frame1(14)"
      Tab(3).Control(4)=   "USToolBar3"
      Tab(3).Control(5)=   "Frame1(12)"
      Tab(3).ControlCount=   6
      TabCaption(4)   =   "Dados transporte"
      TabPicture(4)   =   "frmEstoque_Ordem_Faturamento.frx":10B2
      Tab(4).ControlEnabled=   0   'False
      Tab(4).Control(0)=   "Frame5"
      Tab(4).Control(1)=   "Frame4"
      Tab(4).Control(2)=   "Frame3"
      Tab(4).Control(3)=   "Frame1(15)"
      Tab(4).Control(4)=   "USToolBar4"
      Tab(4).ControlCount=   5
      TabCaption(5)   =   "Duplicatas"
      TabPicture(5)   =   "frmEstoque_Ordem_Faturamento.frx":10CE
      Tab(5).ControlEnabled=   0   'False
      Tab(5).Control(0)=   "Txt_ID_duplicata"
      Tab(5).Control(1)=   "lst_Duplicata"
      Tab(5).Control(2)=   "USToolBar6"
      Tab(5).Control(3)=   "Frame1(18)"
      Tab(5).ControlCount=   4
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Status"
         ForeColor       =   &H00000000&
         Height          =   975
         Index           =   3
         Left            =   -64200
         TabIndex        =   174
         Top             =   1350
         Width           =   1220
         Begin VB.OptionButton opt_Cancelada 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Cancelada"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   90
            TabIndex        =   356
            Top             =   570
            Width           =   1005
         End
         Begin VB.OptionButton opt_Ativa 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Ativa"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   90
            TabIndex        =   355
            Top             =   300
            Value           =   -1  'True
            Width           =   855
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Tipo"
         Height          =   975
         Index           =   4
         Left            =   -62970
         TabIndex        =   173
         Top             =   1350
         Width           =   1040
         Begin VB.OptionButton opt_Entrada 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Entrada"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   120
            TabIndex        =   358
            Top             =   300
            Width           =   855
         End
         Begin VB.OptionButton opt_Saida 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Saida"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   120
            TabIndex        =   357
            Top             =   570
            Value           =   -1  'True
            Width           =   855
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Tipo ordem"
         ForeColor       =   &H00000000&
         Height          =   975
         Index           =   0
         Left            =   -61920
         TabIndex        =   175
         Top             =   1350
         Width           =   1190
         Begin VB.OptionButton optServico 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Serviços"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   150
            TabIndex        =   360
            Top             =   570
            Width           =   855
         End
         Begin VB.OptionButton optProduto 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Produtos"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   150
            TabIndex        =   359
            Top             =   300
            Value           =   -1  'True
            Width           =   855
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Enviada"
         ForeColor       =   &H00000000&
         Height          =   975
         Index           =   5
         Left            =   -60705
         TabIndex        =   172
         Top             =   1350
         Width           =   1110
         Begin VB.OptionButton Opt_nao 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Não"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   180
            TabIndex        =   362
            Top             =   570
            Value           =   -1  'True
            Width           =   675
         End
         Begin VB.OptionButton Opt_sim 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Sim"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   225
            Left            =   180
            TabIndex        =   361
            Top             =   330
            Width           =   675
         End
      End
      Begin VB.Frame Frame7 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados para faturamento"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   1215
         Left            =   60
         TabIndex        =   337
         Top             =   2910
         Width           =   13785
         Begin VB.TextBox Txt_inf_adicionais_prod 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3930
            MaxLength       =   500
            ScrollBars      =   2  'Vertical
            TabIndex        =   350
            ToolTipText     =   "Informações adicionais do produto."
            Top             =   555
            Width           =   6735
         End
         Begin VB.TextBox txtQTD 
            Alignment       =   1  'Right Justify
            BackColor       =   &H00C0C0FF&
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   12
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   405
            Left            =   12300
            TabIndex        =   343
            ToolTipText     =   "Quantidade."
            Top             =   480
            Width           =   1245
         End
         Begin VB.TextBox txtof 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   2700
            TabIndex        =   342
            ToolTipText     =   "Número da ordem/lote."
            Top             =   540
            Width           =   885
         End
         Begin VB.TextBox txt_pccliente 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   210
            MaxLength       =   60
            TabIndex        =   339
            ToolTipText     =   "Número do pedido de compra do cliente."
            Top             =   540
            Width           =   1245
         End
         Begin VB.TextBox Txt_n_item 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   1470
            MaxLength       =   6
            TabIndex        =   338
            ToolTipText     =   "Número do produto/item no pedido do cliente."
            Top             =   540
            Width           =   1215
         End
         Begin DrawSuite2022.USButton cmdFiltrarordem 
            Height          =   315
            Left            =   3600
            TabIndex        =   344
            ToolTipText     =   "Consultar OP ou lote"
            Top             =   540
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":10EA
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            PicSize         =   5
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btnNovo 
            Height          =   735
            Left            =   14550
            TabIndex        =   352
            ToolTipText     =   "Cadastrar novo item"
            Top             =   270
            Width           =   945
            _ExtentX        =   1667
            _ExtentY        =   1296
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":827D
            Caption         =   "Novo item"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   1154291
            BorderColorDisabled=   13160660
            BorderColorDown =   16576
            BorderColorOver =   8438015
            GradientColor1  =   1154291
            GradientColor2  =   1154291
            GradientColor3  =   1154291
            GradientColor4  =   1154291
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   8438015
            GradientColorOver2=   8438015
            GradientColorOver3=   8438015
            GradientColorOver4=   8438015
            GradientColorDown1=   16576
            GradientColorDown2=   16576
            GradientColorDown3=   16576
            GradientColorDown4=   16576
            PicAlign        =   8
            PicSize         =   2
            PicSizeH        =   24
            PicSizeW        =   24
            ShowFocusRect   =   0   'False
            Theme           =   5
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Informações adicionais"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   27
            Left            =   6480
            TabIndex        =   351
            Top             =   360
            Width           =   1635
         End
         Begin VB.Label Label1 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Qtde faturar :"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   12
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   285
            Index           =   70
            Left            =   10800
            TabIndex        =   346
            Top             =   510
            Width           =   1455
            WordWrap        =   -1  'True
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "N° Ordem"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   83
            Left            =   2790
            TabIndex        =   345
            Top             =   330
            Width           =   705
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   " Pedido Cliente"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   69
            Left            =   300
            TabIndex        =   341
            Top             =   330
            Width           =   1065
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "N° do item"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   44
            Left            =   1702
            TabIndex        =   340
            Top             =   330
            Width           =   750
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   825
         Index           =   18
         Left            =   -74970
         TabIndex        =   315
         Top             =   1260
         Width           =   15405
         Begin VB.TextBox txt_Agencia 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4650
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   327
            TabStop         =   0   'False
            Text            =   " "
            ToolTipText     =   "Número da agência."
            Top             =   900
            Width           =   705
         End
         Begin VB.ComboBox cmbtipo_conta 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":E561
            Left            =   4650
            List            =   "frmEstoque_Ordem_Faturamento.frx":E563
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   321
            ToolTipText     =   "Tipo do documento."
            Top             =   390
            Width           =   795
         End
         Begin VB.TextBox txt_Conta 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5790
            Locked          =   -1  'True
            MaxLength       =   10
            TabIndex        =   320
            TabStop         =   0   'False
            Text            =   " "
            ToolTipText     =   "Número da conta."
            Top             =   930
            Width           =   1185
         End
         Begin VB.TextBox txt_Cond_Recebimento 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7470
            MultiLine       =   -1  'True
            ScrollBars      =   2  'Vertical
            TabIndex        =   319
            ToolTipText     =   "Condições de pagamento/recebimento."
            Top             =   390
            Width           =   3255
         End
         Begin VB.ComboBox cmb_tipopagto 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":E565
            Left            =   5820
            List            =   "frmEstoque_Ordem_Faturamento.frx":E59F
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   318
            ToolTipText     =   "Forma de pagamento/recebimento."
            Top             =   390
            Width           =   1635
         End
         Begin VB.TextBox txtValorFatura 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   120
            MaxLength       =   50
            TabIndex        =   317
            ToolTipText     =   "Valor à receber."
            Top             =   390
            Width           =   1350
         End
         Begin VB.ComboBox cbo_PortBanco 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":E6AD
            Left            =   1860
            List            =   "frmEstoque_Ordem_Faturamento.frx":E6AF
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   316
            ToolTipText     =   "Banco."
            Top             =   390
            Width           =   2775
         End
         Begin DrawSuite2022.USButton Cmd_localizar_tipo_dcto 
            Height          =   315
            Left            =   5460
            TabIndex        =   322
            ToolTipText     =   "Consultar tipo documento"
            Top             =   390
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":E6B1
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton Cmdporcento 
            Height          =   615
            Left            =   10860
            TabIndex        =   323
            ToolTipText     =   "Parcelar em porcentagem"
            Top             =   150
            Width           =   1305
            _ExtentX        =   2302
            _ExtentY        =   1085
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":2C7B6
            Caption         =   "Calculadora"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            Theme           =   1
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btn_Gerar_Duplicatas 
            Height          =   615
            Left            =   12210
            TabIndex        =   324
            ToolTipText     =   "Gerar duplicata(s) da fatura"
            Top             =   150
            Width           =   1125
            _ExtentX        =   1984
            _ExtentY        =   1085
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":2CD17
            Caption         =   "Gerar"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            PicSize         =   2
            PicSizeH        =   24
            PicSizeW        =   24
            ShowFocusRect   =   0   'False
            Theme           =   1
            ToolTipCentered =   -1  'True
            ToolTipIcon     =   2
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btnCondicoesComerciais 
            Height          =   615
            Left            =   13380
            TabIndex        =   325
            ToolTipText     =   "Condições comerciais do pedido interno"
            Top             =   150
            Width           =   1335
            _ExtentX        =   2355
            _ExtentY        =   1085
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":36E3A
            Caption         =   "Condições comerciais"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            PicSize         =   2
            PicSizeH        =   24
            PicSizeW        =   24
            ShowFocusRect   =   0   'False
            Theme           =   1
            ToolTipIcon     =   1
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btnImpRetidos 
            Height          =   315
            Left            =   1470
            TabIndex        =   326
            ToolTipText     =   "Consultar impostos retidos"
            Top             =   390
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":3DFBA
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Docto.*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   19
            Left            =   4770
            TabIndex        =   332
            Top             =   210
            Width           =   570
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Instituição*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   18
            Left            =   2895
            MousePointer    =   1  'Arrow
            TabIndex        =   331
            Top             =   195
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor da Fatura*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   134
            Left            =   240
            MousePointer    =   1  'Arrow
            TabIndex        =   330
            Top             =   195
            Width           =   1200
         End
         Begin VB.Label Label1 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Forma recebimento*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   137
            Left            =   5925
            MousePointer    =   1  'Arrow
            TabIndex        =   329
            Top             =   195
            Width           =   1470
         End
         Begin VB.Label Label1 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Condições para parcelamento*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   138
            Left            =   8130
            TabIndex        =   328
            Top             =   195
            Width           =   2220
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados da ordem de faturamento"
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000007&
         Height          =   975
         Index           =   6
         Left            =   -74940
         TabIndex        =   103
         Top             =   1350
         Width           =   10725
         Begin VB.TextBox txt_nsNRec 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4590
            Locked          =   -1  'True
            MaxLength       =   44
            TabIndex        =   167
            ToolTipText     =   "Chave de acesso da NFe."
            Top             =   2625
            Width           =   1605
         End
         Begin VB.TextBox txtDtValidacao 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   8910
            Locked          =   -1  'True
            TabIndex        =   12
            TabStop         =   0   'False
            ToolTipText     =   "Data e hora da validação."
            Top             =   510
            Width           =   1545
         End
         Begin VB.TextBox txtRespValidacao 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   6690
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   13
            TabStop         =   0   'False
            ToolTipText     =   "Responsável pela validação."
            Top             =   510
            Width           =   2190
         End
         Begin VB.ComboBox txt_proposta 
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":3E97C
            Left            =   5790
            List            =   "frmEstoque_Ordem_Faturamento.frx":3E97E
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   9
            Top             =   510
            Width           =   885
         End
         Begin VB.TextBox txtVlrMoedaPrincipal 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   325
            Left            =   840
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   17
            TabStop         =   0   'False
            ToolTipText     =   "Tel./fax"
            Top             =   2595
            Width           =   570
         End
         Begin VB.TextBox txtMoedaPrincipal 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   325
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   16
            TabStop         =   0   'False
            ToolTipText     =   "Tel./fax"
            Top             =   2595
            Width           =   645
         End
         Begin MSMask.MaskEdBox mskHoraSaida 
            Height          =   315
            Left            =   4980
            TabIndex        =   15
            ToolTipText     =   "Hora de saída."
            Top             =   510
            Width           =   795
            _ExtentX        =   1402
            _ExtentY        =   556
            _Version        =   393216
            Appearance      =   0
            BackColor       =   14737632
            MaxLength       =   8
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##:##:##"
            PromptChar      =   "_"
         End
         Begin MSMask.MaskEdBox txt_EntSai 
            Height          =   315
            Left            =   3705
            TabIndex        =   14
            ToolTipText     =   "Data de saída/entrada."
            Top             =   510
            Width           =   930
            _ExtentX        =   1640
            _ExtentY        =   556
            _Version        =   393216
            Appearance      =   0
            BackColor       =   14737632
            MaxLength       =   10
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##/##/####"
            PromptChar      =   "_"
         End
         Begin MSMask.MaskEdBox Txt_hora_emissao 
            Height          =   315
            Left            =   2880
            TabIndex        =   11
            ToolTipText     =   "Hora da emissão."
            Top             =   510
            Width           =   795
            _ExtentX        =   1402
            _ExtentY        =   556
            _Version        =   393216
            Appearance      =   0
            BackColor       =   14737632
            MaxLength       =   8
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##:##:##"
            PromptChar      =   "_"
         End
         Begin DrawSuite2022.USButton cmdDataent 
            Height          =   315
            Left            =   4650
            TabIndex        =   234
            ToolTipText     =   "Consultar data de entrada ou saida"
            Top             =   510
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":3E980
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin MSMask.MaskEdBox txt_DtEmissao 
            Height          =   315
            Left            =   1590
            TabIndex        =   283
            ToolTipText     =   "Data de saída/entrada."
            Top             =   510
            Width           =   960
            _ExtentX        =   1693
            _ExtentY        =   556
            _Version        =   393216
            Appearance      =   0
            BackColor       =   14737632
            MaxLength       =   10
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Mask            =   "##/##/####"
            PromptChar      =   "_"
         End
         Begin DrawSuite2022.USButton cmdDataemi 
            Height          =   315
            Left            =   2550
            TabIndex        =   284
            ToolTipText     =   "Consultar data de entrada ou saida"
            Top             =   510
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":4574D
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.TextBox txtid 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            TabIndex        =   7
            TabStop         =   0   'False
            ToolTipText     =   "Ordem de faturamento."
            Top             =   510
            Width           =   1395
         End
         Begin VB.TextBox txt_rev 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6045
            Locked          =   -1  'True
            TabIndex        =   10
            ToolTipText     =   "Revisão do pedido interno."
            Top             =   510
            Width           =   465
         End
         Begin VB.TextBox txtNFiscal 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   9
            TabIndex        =   313
            ToolTipText     =   "Nº da nota."
            Top             =   510
            Visible         =   0   'False
            Width           =   945
         End
         Begin VB.TextBox txtSerie 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1140
            MaxLength       =   3
            TabIndex        =   8
            TabStop         =   0   'False
            ToolTipText     =   "Série."
            Top             =   510
            Width           =   435
         End
         Begin VB.Label lbldtEntSaid 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Data saida"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   44
            Left            =   3795
            TabIndex        =   124
            Top             =   300
            Width           =   765
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Responsável validação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   43
            Left            =   7020
            TabIndex        =   123
            Top             =   300
            Width           =   1635
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Data/hora validação"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   42
            Left            =   8955
            TabIndex        =   122
            Top             =   300
            Width           =   1455
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Hora"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   41
            Left            =   3105
            TabIndex        =   121
            Top             =   300
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Data emissão"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   40
            Left            =   1650
            TabIndex        =   120
            Top             =   300
            Width           =   960
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Pedido(s)"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   38
            Left            =   5865
            TabIndex        =   119
            Top             =   300
            Width           =   675
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "N° Ordem"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   36
            Left            =   555
            TabIndex        =   118
            Top             =   300
            Width           =   705
         End
         Begin VB.Label lblhrEntsaid 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Hora saida"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   21
            Left            =   4995
            TabIndex        =   110
            Top             =   300
            Width           =   765
         End
      End
      Begin VB.Frame Frame6 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados do destinatário"
         Height          =   1335
         Left            =   -74940
         TabIndex        =   285
         Top             =   2280
         Width           =   15345
         Begin VB.TextBox cbo_UF 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   13260
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   354
            TabStop         =   0   'False
            ToolTipText     =   "Número."
            Top             =   345
            Width           =   585
         End
         Begin VB.ComboBox Cmb_consumidor 
            Appearance      =   0  'Flat
            ForeColor       =   &H00000000&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C51A
            Left            =   13710
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C524
            Style           =   2  'Dropdown List
            TabIndex        =   312
            ToolTipText     =   "Operação com consumidor final."
            Top             =   2070
            Visible         =   0   'False
            Width           =   1515
         End
         Begin VB.ComboBox cmbFinalidade_emissao 
            Appearance      =   0  'Flat
            ForeColor       =   &H00000000&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C53A
            Left            =   13710
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C54D
            Style           =   2  'Dropdown List
            TabIndex        =   311
            ToolTipText     =   "Finalidade de emissão."
            Top             =   1515
            Visible         =   0   'False
            Width           =   1515
         End
         Begin VB.TextBox txt_Municipio 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11010
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   306
            TabStop         =   0   'False
            ToolTipText     =   "Cidade."
            Top             =   900
            Width           =   4110
         End
         Begin VB.TextBox txt_Bairro 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6930
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   305
            TabStop         =   0   'False
            ToolTipText     =   "Bairro."
            Top             =   900
            Width           =   4065
         End
         Begin VB.TextBox txt_CNPJ_CPF 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8505
            Locked          =   -1  'True
            MaxLength       =   30
            TabIndex        =   294
            TabStop         =   0   'False
            ToolTipText     =   "CNPJ/CPF."
            Top             =   345
            Width           =   1440
         End
         Begin VB.TextBox txtNumero 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   6210
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   293
            TabStop         =   0   'False
            ToolTipText     =   "Número."
            Top             =   900
            Width           =   705
         End
         Begin VB.TextBox Txt_CEP 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13875
            Locked          =   -1  'True
            MaxLength       =   12
            TabIndex        =   292
            TabStop         =   0   'False
            ToolTipText     =   "CEP."
            Top             =   345
            Width           =   1245
         End
         Begin VB.TextBox txt_IE 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10980
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   291
            TabStop         =   0   'False
            ToolTipText     =   "Inscrição estadual."
            Top             =   345
            Width           =   1185
         End
         Begin VB.TextBox txt_Endereco 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   150
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   290
            TabStop         =   0   'False
            ToolTipText     =   "Endereço."
            Top             =   900
            Width           =   6030
         End
         Begin VB.TextBox txt_IEST 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12195
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   289
            TabStop         =   0   'False
            ToolTipText     =   "Inscrição estadual tributária."
            Top             =   345
            Width           =   1035
         End
         Begin VB.TextBox txtIDcliente 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   150
            Locked          =   -1  'True
            TabIndex        =   288
            TabStop         =   0   'False
            ToolTipText     =   "Código do cliente."
            Top             =   345
            Width           =   615
         End
         Begin VB.TextBox txt_Razao 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   780
            Locked          =   -1  'True
            MaxLength       =   60
            TabIndex        =   287
            TabStop         =   0   'False
            ToolTipText     =   "Destinatário."
            Top             =   345
            Width           =   7710
         End
         Begin VB.TextBox txt_FoneFAX 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9960
            Locked          =   -1  'True
            MaxLength       =   30
            TabIndex        =   286
            TabStop         =   0   'False
            ToolTipText     =   "N° telefone destinatário"
            Top             =   345
            Width           =   1005
         End
         Begin VB.TextBox txttipocliente 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1860
            Locked          =   -1  'True
            MaxLength       =   10
            TabIndex        =   302
            TabStop         =   0   'False
            ToolTipText     =   "Tipo do cliente."
            Top             =   1620
            Width           =   510
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Cidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   49
            Left            =   12630
            TabIndex        =   308
            Top             =   705
            Width           =   495
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Bairro"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   48
            Left            =   8745
            TabIndex        =   307
            Top             =   705
            Width           =   420
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Telefone"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   16
            Left            =   10140
            TabIndex        =   304
            Top             =   150
            Width           =   630
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "CNPJ"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   46
            Left            =   9060
            TabIndex        =   303
            Top             =   150
            Width           =   375
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Insc. estadual"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   3
            Left            =   11100
            TabIndex        =   301
            Top             =   150
            Width           =   1020
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Endereço"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   4
            Left            =   2828
            TabIndex        =   300
            Top             =   705
            Width           =   675
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Insc. est. ST"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   45
            Left            =   12270
            TabIndex        =   299
            Top             =   150
            Width           =   915
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "CEP"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   50
            Left            =   14355
            TabIndex        =   298
            Top             =   150
            Width           =   285
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Número"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   51
            Left            =   6285
            TabIndex        =   297
            Top             =   705
            Width           =   555
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "UF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   52
            Left            =   13455
            TabIndex        =   296
            Top             =   150
            Width           =   195
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Nome razão social"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   34
            Left            =   3825
            TabIndex        =   295
            Top             =   150
            Width           =   1290
         End
      End
      Begin VB.Frame Frame5 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Custo do frete por conta *"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000080&
         Height          =   915
         Left            =   -68370
         TabIndex        =   280
         Top             =   1290
         Width           =   8805
         Begin VB.ComboBox Cmb_frete_contratado 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C594
            Left            =   120
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C5AD
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   281
            ToolTipText     =   "Indicador da natureza do frete contratado."
            Top             =   360
            Width           =   8565
         End
      End
      Begin VB.Frame Frame4 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Frete por conta *"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000080&
         Height          =   915
         Left            =   -74940
         TabIndex        =   278
         Top             =   1290
         Width           =   6555
         Begin VB.ComboBox cmbFrete 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C7BE
            Left            =   150
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C7D4
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   279
            ToolTipText     =   "Indicador da natureza do frete contratado."
            Top             =   360
            Width           =   6225
         End
      End
      Begin VB.Frame Frame3 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados adicionais de transporte"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   6075
         Left            =   -74940
         TabIndex        =   255
         Top             =   3930
         Width           =   15375
         Begin VB.ComboBox cmbEntrega 
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C8FD
            Left            =   120
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C8FF
            Style           =   2  'Dropdown List
            TabIndex        =   309
            ToolTipText     =   "Endereço de entrega."
            Top             =   1200
            Width           =   7185
         End
         Begin VB.ComboBox Cmb_transp_especie 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            Left            =   120
            Style           =   2  'Dropdown List
            TabIndex        =   264
            ToolTipText     =   "Espécie."
            Top             =   465
            Width           =   2115
         End
         Begin VB.ComboBox Cmb_transp_marca 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   330
            Left            =   2580
            Style           =   2  'Dropdown List
            TabIndex        =   263
            ToolTipText     =   "Marca."
            Top             =   465
            Width           =   2040
         End
         Begin VB.ComboBox Cmb_via_transp 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C901
            Left            =   9450
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C91D
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   262
            ToolTipText     =   "Via de transporte."
            Top             =   465
            Width           =   1965
         End
         Begin VB.TextBox txtTransp_Placa 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            Left            =   11415
            MaxLength       =   7
            TabIndex        =   261
            ToolTipText     =   "Número da placa do veículo."
            Top             =   465
            Width           =   975
         End
         Begin VB.TextBox txtTransp_pesoBruto 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5910
            MaxLength       =   10
            TabIndex        =   260
            ToolTipText     =   "Peso bruto."
            Top             =   465
            Width           =   1020
         End
         Begin VB.TextBox txtTransp_pesoliquido 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7275
            MaxLength       =   10
            TabIndex        =   259
            ToolTipText     =   "Peso líquido."
            Top             =   465
            Width           =   990
         End
         Begin VB.ComboBox txtTransp_uf 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":4C99B
            Left            =   12405
            List            =   "frmEstoque_Ordem_Faturamento.frx":4C9F3
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   258
            ToolTipText     =   "UF."
            Top             =   465
            Width           =   600
         End
         Begin VB.TextBox Txt_numeracao 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4965
            MaxLength       =   50
            TabIndex        =   257
            Text            =   "0"
            ToolTipText     =   "Numeração."
            Top             =   465
            Width           =   930
         End
         Begin VB.TextBox txtTransp_qtd 
            Alignment       =   2  'Center
            Height          =   315
            Left            =   8280
            MaxLength       =   4
            TabIndex        =   256
            Text            =   "0"
            ToolTipText     =   "Quantidade de volumes na nota fiscal"
            Top             =   465
            Width           =   795
         End
         Begin DrawSuite2022.USButton btnPeso 
            Height          =   285
            Left            =   6930
            TabIndex        =   265
            ToolTipText     =   "Buscar peso dos itens da nota."
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   503
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":4CA67
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton BtnRedespacho 
            Height          =   555
            Left            =   13080
            TabIndex        =   266
            Top             =   240
            Width           =   2145
            _ExtentX        =   3784
            _ExtentY        =   979
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":5A27E
            Caption         =   "Informações adicionais"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   3
            ShowFocusRect   =   0   'False
            Theme           =   4
         End
         Begin DrawSuite2022.USButton cmdEspecie 
            Height          =   285
            Left            =   2250
            TabIndex        =   274
            ToolTipText     =   "Consultar especie"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   503
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":5FCE3
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   0
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton cmdMarca 
            Height          =   285
            Left            =   4620
            TabIndex        =   275
            ToolTipText     =   "Consultar marca"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   503
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":7DDE8
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   0
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btnVolumes 
            Height          =   285
            Left            =   9090
            TabIndex        =   364
            ToolTipText     =   "Buscar volumes dos itens da nota."
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   503
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":9BEED
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.Label Label3 
            Alignment       =   2  'Center
            BackStyle       =   0  'Transparent
            Caption         =   "Volumes*"
            ForeColor       =   &H00000080&
            Height          =   255
            Left            =   8280
            TabIndex        =   363
            Top             =   270
            Width           =   945
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Local para entrega da mercadoria"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   2505
            TabIndex        =   310
            Top             =   990
            Width           =   2415
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Peso líquido*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   130
            Left            =   7350
            TabIndex        =   276
            Top             =   270
            Width           =   930
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Espécie"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   32
            Left            =   855
            TabIndex        =   273
            Top             =   270
            Width           =   540
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Placa veículo"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   123
            Left            =   11430
            TabIndex        =   272
            Top             =   270
            Width           =   915
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "UF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   124
            Left            =   12600
            TabIndex        =   271
            Top             =   270
            Width           =   195
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Marca*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   127
            Left            =   3285
            TabIndex        =   270
            Top             =   270
            Width           =   525
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Numeração*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   128
            Left            =   5025
            TabIndex        =   269
            Top             =   270
            Width           =   900
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Peso bruto*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   129
            Left            =   6045
            TabIndex        =   268
            Top             =   270
            Width           =   870
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Via transporte*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   131
            Left            =   9870
            TabIndex        =   267
            Top             =   270
            Width           =   1110
         End
      End
      Begin MSComctlLib.ListView ListaProdutos 
         Height          =   5010
         Left            =   90
         TabIndex        =   29
         Top             =   4155
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   8837
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   12
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   1411
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "T"
            Text            =   "Cod. interno"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "CFOP"
            Object.Width           =   1129
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "NCM"
            Object.Width           =   1887
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   7594
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Un. est."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   6
            Object.Tag             =   "T"
            Text            =   "Un. com."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   7
            Object.Tag             =   "N"
            Text            =   "Qtde."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   8
            Text            =   "vlrUnit"
            Object.Width           =   2540
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   9
            Text            =   "VlrTotal"
            Object.Width           =   2540
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   10
            Object.Tag             =   "T"
            Text            =   "Ped. cliente"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   11
            Object.Tag             =   "T"
            Text            =   "Empenhado"
            Object.Width           =   2117
         EndProperty
      End
      Begin VB.Frame Frame2 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Operação da lista"
         ForeColor       =   &H00000080&
         Height          =   1215
         Left            =   13860
         TabIndex        =   241
         Top             =   2910
         Width           =   1575
         Begin VB.ComboBox Cmb_opcao_lista_Produtos 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   300
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":9DB9A
            Left            =   150
            List            =   "frmEstoque_Ordem_Faturamento.frx":9DBA7
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   242
            TabStop         =   0   'False
            Top             =   510
            Width           =   1275
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Empresa emitente"
         ForeColor       =   &H00000080&
         Height          =   720
         Index           =   1
         Left            =   -74940
         TabIndex        =   176
         Top             =   1350
         Width           =   5610
         Begin VB.TextBox txtEmpresa 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   600
            Locked          =   -1  'True
            MaxLength       =   80
            TabIndex        =   246
            TabStop         =   0   'False
            ToolTipText     =   "Nome da empresa emitente da nota fiscal."
            Top             =   270
            Width           =   4530
         End
         Begin DrawSuite2022.USButton btnEmpresa 
            Height          =   315
            Left            =   5130
            TabIndex        =   245
            Top             =   270
            Width           =   345
            _ExtentX        =   609
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":9DBD0
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   8
         End
         Begin VB.TextBox txtIDEmpresa 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   150
            TabIndex        =   243
            TabStop         =   0   'False
            Top             =   270
            Width           =   435
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Modelo da nota fiscal eletrônica"
         ForeColor       =   &H00000000&
         Height          =   720
         Index           =   2
         Left            =   -69330
         TabIndex        =   177
         Top             =   1350
         Visible         =   0   'False
         Width           =   5130
         Begin VB.ComboBox Cmb_modelo 
            BackColor       =   &H00FFFFFF&
            ForeColor       =   &H00000000&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":A4D63
            Left            =   120
            List            =   "frmEstoque_Ordem_Faturamento.frx":A4DC7
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   178
            ToolTipText     =   "Modelo da nota fiscal."
            Top             =   255
            Width           =   4875
         End
      End
      Begin DrawSuite2022.USTab TabFiltro 
         Height          =   375
         Left            =   -68880
         TabIndex        =   171
         Top             =   3750
         Width           =   9045
         _ExtentX        =   15954
         _ExtentY        =   661
         TabCount        =   12
         TabCaption(0)   =   "Janeiro"
         TabCaption(1)   =   "Fevereiro"
         TabCaption(2)   =   "Março"
         TabCaption(3)   =   "Abril"
         TabCaption(4)   =   "Maio"
         TabCaption(5)   =   "Junho"
         TabCaption(6)   =   "Julho"
         TabCaption(7)   =   "Agosto"
         TabCaption(8)   =   "Setembro"
         TabCaption(9)   =   "Outubro"
         TabCaption(10)  =   "Novembro"
         TabCaption(11)  =   "Dezembro"
         ActiveTab       =   4
         ActiveTabBackStartColor=   16777215
         ActiveTabBackEndColor=   12632256
         BeginProperty ActiveTabFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ActiveTabForeColor=   128
         ActiveTabHeight =   25
         FocusedColor    =   12632319
         BeginProperty InActiveTabFont {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         InActiveTabForeColor=   0
         BorderColor     =   8421504
         ShowFocusRect   =   0   'False
         XRadius         =   20
         YRadius         =   20
         TabOffset       =   16570
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Height          =   555
         Index           =   7
         Left            =   -74940
         TabIndex        =   102
         Top             =   3600
         Width           =   15345
         Begin VB.ComboBox cmbAno 
            BackColor       =   &H00FFFFFF&
            ForeColor       =   &H00404040&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":A5308
            Left            =   210
            List            =   "frmEstoque_Ordem_Faturamento.frx":A530A
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   168
            ToolTipText     =   "Ano."
            Top             =   150
            Width           =   855
         End
         Begin VB.OptionButton OptDomes 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Do mês ou"
            ForeColor       =   &H00000080&
            Height          =   195
            Left            =   1470
            TabIndex        =   18
            Top             =   210
            Value           =   -1  'True
            Width           =   1065
         End
         Begin VB.OptionButton OptAteomes 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Até o mês de?"
            ForeColor       =   &H00000080&
            Height          =   195
            Left            =   2580
            TabIndex        =   19
            Top             =   210
            Width           =   1335
         End
      End
      Begin MSComctlLib.ListView ListaNota 
         Height          =   5250
         Left            =   -74940
         TabIndex        =   20
         Top             =   4140
         Width           =   15345
         _ExtentX        =   27067
         _ExtentY        =   9260
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   13
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   529
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   1
            Object.Tag             =   "D"
            Text            =   "Dt. emissão"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "N"
            Text            =   "Ordem fat."
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   3
            Object.Tag             =   "N"
            Text            =   "Nota fiscal"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Tipo"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Série"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Valor total"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   7
            Object.Tag             =   "T"
            Text            =   "Destinatário"
            Object.Width           =   13062
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   8
            Object.Tag             =   "T"
            Text            =   "Status"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   9
            Object.Tag             =   "T"
            Text            =   "Enviada"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   10
            Object.Tag             =   "T"
            Text            =   "Validada"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   11
            Object.Tag             =   "T"
            Text            =   "Status NFe"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   12
            Object.Tag             =   "N"
            Text            =   "IDempresa"
            Object.Width           =   0
         EndProperty
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Height          =   645
         Index           =   10
         Left            =   1605
         TabIndex        =   114
         Top             =   13170
         Width           =   13815
         Begin VB.TextBox txtBCICMSSN 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   6390
            MaxLength       =   20
            TabIndex        =   32
            ToolTipText     =   "Valor da base de cálculo do ICMS do simples nacional."
            Top             =   240
            Width           =   795
         End
         Begin VB.TextBox txtValorICMSSN 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10050
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   34
            TabStop         =   0   'False
            ToolTipText     =   "Valor do ICMS simples nacional."
            Top             =   240
            Width           =   915
         End
         Begin VB.TextBox txtICMSSN 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8820
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   33
            ToolTipText     =   "Alíquota do ICMS simples nacional."
            Top             =   240
            Width           =   645
         End
         Begin VB.TextBox txtVLRMOA 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3870
            MaxLength       =   20
            TabIndex        =   31
            ToolTipText     =   "Valor da mão de obra aplicada."
            Top             =   240
            Width           =   795
         End
         Begin VB.TextBox txtVLRMPA 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1470
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   30
            TabStop         =   0   'False
            ToolTipText     =   "Valor da matéria prima aplicada."
            Top             =   240
            Width           =   900
         End
         Begin DrawSuite2022.USButton Cmd_salvar_totais 
            Height          =   390
            Left            =   11400
            TabIndex        =   165
            ToolTipText     =   "Salvar alteração dos totais da nota (F10)"
            Top             =   180
            Width           =   1035
            _ExtentX        =   1826
            _ExtentY        =   688
            Caption         =   "Salvar (F10)"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   0
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            PicSizeH        =   48
            PicSizeW        =   48
            ShowFocusRect   =   0   'False
            Theme           =   1
         End
         Begin DrawSuite2022.USButton Cmd_cancelar_totais 
            Height          =   390
            Left            =   12450
            TabIndex        =   166
            ToolTipText     =   "Cancelar alteração dos totais da nota (F11)"
            Top             =   180
            Width           =   1245
            _ExtentX        =   2196
            _ExtentY        =   688
            Caption         =   "Cancelar (F11)"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   0
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            PicSizeH        =   48
            PicSizeW        =   48
            ShowFocusRect   =   0   'False
            Theme           =   1
         End
         Begin DrawSuite2022.USButton Cmd_salvar_ICMS_SN 
            Height          =   315
            Left            =   10980
            TabIndex        =   240
            ToolTipText     =   "Salvar Valor do ICMS simples nacional"
            Top             =   240
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":A530C
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            ShowFocusRect   =   0   'False
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "%"
            Height          =   195
            Index           =   87
            Left            =   9510
            TabIndex        =   128
            Top             =   270
            Width           =   165
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Aliquota ICMS do SN :"
            Height          =   195
            Index           =   86
            Left            =   7290
            TabIndex        =   127
            Top             =   270
            Width           =   1575
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Valor BC ICMS SN :"
            Height          =   195
            Index           =   85
            Left            =   5100
            TabIndex        =   126
            Top             =   270
            Width           =   1365
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Valor MO aplicada :"
            Height          =   195
            Index           =   84
            Left            =   2550
            TabIndex        =   125
            Top             =   270
            Width           =   1380
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Valor Mp aplicada :"
            Height          =   195
            Index           =   33
            Left            =   180
            TabIndex        =   115
            Top             =   270
            Width           =   1350
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Totais da ordem de faturamento"
         ForeColor       =   &H00000080&
         Height          =   855
         Index           =   11
         Left            =   45
         TabIndex        =   90
         Top             =   9180
         Width           =   15345
         Begin VB.TextBox txt_ValorNota 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   13590
            MaxLength       =   15
            TabIndex        =   46
            ToolTipText     =   "Valor total da nota."
            Top             =   435
            Width           =   1665
         End
         Begin VB.TextBox txt_vlrtotalprod 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   12150
            MaxLength       =   15
            TabIndex        =   39
            ToolTipText     =   "Valor total do(s) produto(s)."
            Top             =   435
            Width           =   1425
         End
         Begin VB.TextBox txt_TotalIPI 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   4440
            MaxLength       =   15
            TabIndex        =   43
            ToolTipText     =   "Valor total do IPI."
            Top             =   435
            Width           =   1245
         End
         Begin VB.TextBox txt_ICMSs 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3330
            MaxLength       =   15
            TabIndex        =   38
            ToolTipText     =   "Valor do ICMS substituto."
            Top             =   435
            Width           =   1095
         End
         Begin VB.TextBox txt_OutrasDisp 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9750
            MaxLength       =   15
            TabIndex        =   42
            ToolTipText     =   "Valor total das despesas acessórias."
            Top             =   435
            Width           =   1275
         End
         Begin VB.TextBox txt_baseICMSs 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2235
            MaxLength       =   15
            TabIndex        =   37
            ToolTipText     =   "Base de calculo ICMS substituto."
            Top             =   435
            Width           =   1065
         End
         Begin VB.TextBox txt_vlrSeguro 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8625
            MaxLength       =   15
            TabIndex        =   41
            ToolTipText     =   "Valor total do seguro."
            Top             =   435
            Width           =   1095
         End
         Begin VB.TextBox txt_vlrICMS 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1140
            MaxLength       =   15
            TabIndex        =   36
            ToolTipText     =   "Valor do ICMS."
            Top             =   435
            Width           =   1065
         End
         Begin VB.TextBox txt_BaseICMS 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   60
            MaxLength       =   15
            TabIndex        =   35
            ToolTipText     =   "Base de cálculo do ICMS."
            Top             =   435
            Width           =   1065
         End
         Begin VB.TextBox txt_VlrFrete 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   5700
            MaxLength       =   15
            TabIndex        =   40
            ToolTipText     =   "Valor total do frete."
            Top             =   435
            Width           =   1250
         End
         Begin VB.TextBox Txt_valor_total_desc 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7380
            MaxLength       =   15
            TabIndex        =   44
            ToolTipText     =   "Valor total do desconto."
            Top             =   435
            Width           =   1215
         End
         Begin VB.TextBox Txt_valor_total_desc_SUFRAMA 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11040
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   45
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do desconto SUFRAMA."
            Top             =   435
            Width           =   1095
         End
         Begin DrawSuite2022.USButton btnSalvarFrete 
            Height          =   315
            Left            =   6960
            TabIndex        =   239
            ToolTipText     =   "Salvar Valor do frete no(s) item(ns) da lista..."
            Top             =   435
            Width           =   405
            _ExtentX        =   714
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":A53D3
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            ShowFocusRect   =   0   'False
            Theme           =   4
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Total ordem fat."
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   97
            Left            =   13740
            TabIndex        =   138
            Top             =   210
            Width           =   1365
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Suframa"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   96
            Left            =   11325
            TabIndex        =   137
            Top             =   240
            Width           =   600
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor desconto"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   95
            Left            =   7485
            TabIndex        =   136
            Top             =   240
            Width           =   1065
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor IPI"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   94
            Left            =   4770
            TabIndex        =   135
            Top             =   240
            Width           =   615
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Desp. acessórias"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   93
            Left            =   9795
            TabIndex        =   134
            Top             =   240
            Width           =   1215
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor seguro"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   92
            Left            =   8745
            TabIndex        =   133
            Top             =   240
            Width           =   900
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total "
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   91
            Left            =   12412
            TabIndex        =   132
            Top             =   225
            Width           =   930
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "ICMS ST"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   90
            Left            =   3615
            TabIndex        =   131
            Top             =   255
            Width           =   600
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "BC ICMS ST"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   89
            Left            =   2385
            TabIndex        =   130
            Top             =   255
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Total ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   88
            Left            =   1260
            TabIndex        =   129
            Top             =   255
            Width           =   780
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "BC do ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   14
            Left            =   180
            TabIndex        =   92
            Top             =   255
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor frete"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   15
            Left            =   5910
            TabIndex        =   91
            Top             =   240
            Width           =   765
         End
      End
      Begin MSComctlLib.ListView ListaServicos 
         Height          =   6105
         Left            =   -74925
         TabIndex        =   62
         Top             =   2715
         Width           =   15345
         _ExtentX        =   27067
         _ExtentY        =   10769
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   -2147483641
         BackColor       =   16777215
         Appearance      =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   11
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   529
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "T"
            Text            =   "Cód. interno"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "CFOP"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   7152
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Un. est."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Un. com."
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Qtde."
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   7
            Object.Tag             =   "N"
            Text            =   "ISSQN"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   8
            Object.Tag             =   "N"
            Text            =   "Vlr. ISS"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   9
            Object.Tag             =   "N"
            Text            =   "Ordem"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   10
            Object.Tag             =   "T"
            Text            =   "Ped. cliente"
            Object.Width           =   2646
         EndProperty
      End
      Begin DrawSuite2022.USProgressBar PBLista 
         Height          =   255
         Index           =   2
         Left            =   -74925
         TabIndex        =   84
         Top             =   8835
         Width           =   15345
         _ExtentX        =   27067
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   ""
         Value           =   0
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         ForeColor       =   &H00000000&
         Height          =   615
         Index           =   27
         Left            =   -74925
         TabIndex        =   105
         Top             =   9090
         Width           =   15315
         Begin VB.TextBox txtPagIr 
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   0
            Left            =   9540
            TabIndex        =   1
            ToolTipText     =   "Número da página."
            Top             =   180
            Width           =   555
         End
         Begin VB.TextBox txtNreg 
            Alignment       =   2  'Center
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   0
            Left            =   3750
            TabIndex        =   0
            Text            =   "30"
            ToolTipText     =   "Número de registros por página."
            Top             =   180
            Width           =   555
         End
         Begin DrawSuite2022.USButton cmdPagProx 
            Height          =   315
            Index           =   0
            Left            =   11760
            TabIndex        =   5
            ToolTipText     =   "Próxima página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":A549A
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagAnt 
            Height          =   315
            Index           =   0
            Left            =   11220
            TabIndex        =   4
            ToolTipText     =   "Página anterior."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":A8C3E
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagIr 
            Height          =   315
            Index           =   0
            Left            =   10110
            TabIndex        =   2
            Top             =   180
            Width           =   465
            _ExtentX        =   820
            _ExtentY        =   556
            Caption         =   "Ir"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagPrim 
            Height          =   315
            Index           =   0
            Left            =   10680
            TabIndex        =   3
            ToolTipText     =   "Primeira página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":AC747
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagUlt 
            Height          =   315
            Index           =   0
            Left            =   12300
            TabIndex        =   6
            ToolTipText     =   "Última página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":B0836
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin VB.Label Label2 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "registros por página"
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   4380
            TabIndex        =   117
            Top             =   240
            Width           =   1440
         End
         Begin VB.Label lblPaginas 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Página: 0 de: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   13050
            TabIndex        =   108
            Top             =   240
            Width           =   1095
         End
         Begin VB.Label lblRegistros 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Nº de registros: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   0
            Left            =   180
            TabIndex        =   107
            Top             =   240
            Width           =   1275
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Carregar"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   22
            Left            =   3060
            TabIndex        =   106
            Top             =   240
            Width           =   645
         End
      End
      Begin VB.TextBox txtID_cobranca 
         BackColor       =   &H00FFFFFF&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Left            =   -72240
         TabIndex        =   101
         Text            =   "0"
         Top             =   6240
         Visible         =   0   'False
         Width           =   405
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         ForeColor       =   &H00000000&
         Height          =   615
         Index           =   29
         Left            =   -74940
         TabIndex        =   95
         Top             =   9390
         Width           =   15345
         Begin VB.TextBox txtPagIr 
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   1
            Left            =   9540
            TabIndex        =   23
            ToolTipText     =   "Número da página."
            Top             =   180
            Width           =   555
         End
         Begin VB.TextBox txtNreg 
            Alignment       =   2  'Center
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   1
            Left            =   2730
            TabIndex        =   21
            Text            =   "20"
            ToolTipText     =   "Número de registros por página."
            Top             =   180
            Width           =   555
         End
         Begin VB.ComboBox Cmb_opcao_lista 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   6.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   300
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":B40C2
            Left            =   6960
            List            =   "frmEstoque_Ordem_Faturamento.frx":B40CF
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   22
            TabStop         =   0   'False
            Top             =   187
            Width           =   1965
         End
         Begin DrawSuite2022.USButton cmdPagProx 
            Height          =   315
            Index           =   1
            Left            =   11760
            TabIndex        =   27
            ToolTipText     =   "Próxima página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":B40EF
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagAnt 
            Height          =   315
            Index           =   1
            Left            =   11220
            TabIndex        =   26
            ToolTipText     =   "Página anterior."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":B7893
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagIr 
            Height          =   315
            Index           =   1
            Left            =   10110
            TabIndex        =   24
            Top             =   180
            Width           =   465
            _ExtentX        =   820
            _ExtentY        =   556
            Caption         =   "Ir"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagPrim 
            Height          =   315
            Index           =   1
            Left            =   10680
            TabIndex        =   25
            ToolTipText     =   "Primeira página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":BB39C
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin DrawSuite2022.USButton cmdPagUlt 
            Height          =   315
            Index           =   1
            Left            =   12300
            TabIndex        =   28
            ToolTipText     =   "Última página."
            Top             =   180
            Width           =   525
            _ExtentX        =   926
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":BF48B
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   14404026
            BorderColorDown =   11632444
            BorderColorOver =   11632444
            GradientColor2  =   16777215
            GradientColor3  =   16777215
            GradientColorOver1=   16643560
            GradientColorOver2=   16576988
            GradientColorOver3=   16441780
            GradientColorOver4=   16178091
            GradientColorDown2=   16246986
            GradientColorDown3=   15189380
            GradientColorDown4=   14596208
            PicSizeH        =   19
            PicSizeW        =   19
         End
         Begin VB.Label Label15 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "registros por página"
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   3360
            TabIndex        =   116
            Top             =   240
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Carregar"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   30
            Left            =   2040
            TabIndex        =   112
            Top             =   240
            Width           =   645
         End
         Begin VB.Label lblRegistros 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Nº de registros: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   180
            TabIndex        =   98
            Top             =   240
            Width           =   1275
         End
         Begin VB.Label lblPaginas 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Página: 0 de: 0"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   1
            Left            =   13050
            TabIndex        =   97
            Top             =   240
            Width           =   1095
         End
         Begin VB.Label Label1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "Operação da lista"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   29
            Left            =   5610
            TabIndex        =   96
            Top             =   240
            Width           =   1260
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Informações do item"
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   1575
         Index           =   9
         Left            =   60
         TabIndex        =   93
         Top             =   1320
         Width           =   15375
         Begin VB.TextBox Txt_natureza_operacao_prod 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   4875
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   183
            TabStop         =   0   'False
            ToolTipText     =   "Natureza da operação."
            Top             =   480
            Width           =   6870
         End
         Begin VB.TextBox cmbReferencia 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   2130
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   353
            TabStop         =   0   'False
            ToolTipText     =   "Codigo de referência"
            Top             =   480
            Width           =   1545
         End
         Begin VB.TextBox Cmb_un_com 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   14580
            Locked          =   -1  'True
            TabIndex        =   348
            TabStop         =   0   'False
            ToolTipText     =   "ID da NCM."
            Top             =   480
            Width           =   615
         End
         Begin VB.TextBox txtUN 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   13920
            Locked          =   -1  'True
            TabIndex        =   347
            TabStop         =   0   'False
            ToolTipText     =   "ID da NCM."
            Top             =   480
            Width           =   615
         End
         Begin VB.TextBox txtvlrICMS 
            Alignment       =   1  'Right Justify
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   11760
            TabIndex        =   199
            TabStop         =   0   'False
            ToolTipText     =   "Valor do ICMS"
            Top             =   2955
            Width           =   950
         End
         Begin VB.TextBox txt_OutrasDisp_prod 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   2250
            MaxLength       =   15
            TabIndex        =   208
            ToolTipText     =   "Valor das despesas acessórias."
            Top             =   3555
            Width           =   1070
         End
         Begin VB.TextBox txt_VlrFrete_prod 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   180
            MaxLength       =   15
            TabIndex        =   204
            ToolTipText     =   "Valor do frete."
            Top             =   3555
            Width           =   990
         End
         Begin VB.TextBox txt_vlrSeguro_prod 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   1170
            MaxLength       =   15
            TabIndex        =   206
            ToolTipText     =   "Valor do seguro."
            Top             =   3555
            Width           =   1065
         End
         Begin VB.TextBox Txt_complemento_descricao 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   7230
            MaxLength       =   60
            TabIndex        =   210
            ToolTipText     =   "Complemento da descrição."
            Top             =   1065
            Width           =   7965
         End
         Begin VB.TextBox txtvDesc 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   9180
            MaxLength       =   14
            TabIndex        =   195
            TabStop         =   0   'False
            ToolTipText     =   "GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras."
            Top             =   2955
            Width           =   1095
         End
         Begin VB.CheckBox Chk_CFOP_prod 
            Appearance      =   0  'Flat
            BackColor       =   &H80000005&
            ForeColor       =   &H80000008&
            Height          =   195
            Left            =   7260
            TabIndex        =   229
            Top             =   -420
            Width           =   195
         End
         Begin VB.TextBox Txt_GTIN 
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   12990
            Locked          =   -1  'True
            MaxLength       =   14
            TabIndex        =   227
            TabStop         =   0   'False
            ToolTipText     =   "GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras."
            Top             =   2985
            Width           =   1065
         End
         Begin VB.TextBox txtCod_Produto 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   210
            MaxLength       =   50
            TabIndex        =   179
            ToolTipText     =   "Código interno."
            Top             =   480
            Width           =   1245
         End
         Begin VB.ComboBox txtCST_Cofins 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":C2D17
            Left            =   13650
            List            =   "frmEstoque_Ordem_Faturamento.frx":C2D81
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   191
            ToolTipText     =   "Situação tributária Cofins."
            Top             =   2850
            Width           =   540
         End
         Begin VB.ComboBox txtCST_PIS 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":C2E0B
            Left            =   13110
            List            =   "frmEstoque_Ordem_Faturamento.frx":C2E75
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   190
            ToolTipText     =   "Situação tributária PIS."
            Top             =   2850
            Width           =   540
         End
         Begin VB.ComboBox txtCST_IPI 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":C2EFF
            Left            =   12540
            List            =   "frmEstoque_Ordem_Faturamento.frx":C2F01
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   189
            ToolTipText     =   "Situação tributária IPI."
            Top             =   2850
            Width           =   570
         End
         Begin VB.ComboBox txtCST_ICMS 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            Height          =   315
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":C2F03
            Left            =   11850
            List            =   "frmEstoque_Ordem_Faturamento.frx":C2FBE
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   188
            ToolTipText     =   "Situação tributária ICMS."
            Top             =   2850
            Width           =   690
         End
         Begin VB.TextBox Txt_ID_CF 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   12090
            Locked          =   -1  'True
            TabIndex        =   185
            TabStop         =   0   'False
            ToolTipText     =   "ID da NCM."
            Top             =   480
            Width           =   465
         End
         Begin VB.TextBox Txt_CFOP_prod 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   4230
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   182
            TabStop         =   0   'False
            ToolTipText     =   "CFOP."
            Top             =   480
            Width           =   630
         End
         Begin VB.TextBox Txt_CF 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   12570
            Locked          =   -1  'True
            MaxLength       =   20
            TabIndex        =   186
            TabStop         =   0   'False
            ToolTipText     =   "Classificação fiscal."
            Top             =   480
            Width           =   1305
         End
         Begin VB.TextBox Txt_ID_CFOP_prod 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            Height          =   315
            Left            =   3690
            Locked          =   -1  'True
            TabIndex        =   196
            TabStop         =   0   'False
            ToolTipText     =   "ID da CFOP."
            Top             =   480
            Width           =   525
         End
         Begin VB.TextBox txtDescricao_Produto 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   120
            TabIndex        =   193
            TabStop         =   0   'False
            ToolTipText     =   "Descrição."
            Top             =   1065
            Width           =   7005
         End
         Begin VB.TextBox txtVLUnit 
            Alignment       =   1  'Right Justify
            BackColor       =   &H00FFFFFF&
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   7950
            TabIndex        =   194
            ToolTipText     =   "Valor unitário."
            Top             =   2955
            Width           =   1220
         End
         Begin VB.TextBox txtVLTotal 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   14025
            Locked          =   -1  'True
            TabIndex        =   202
            TabStop         =   0   'False
            ToolTipText     =   "Valor total."
            Top             =   2955
            Width           =   1170
         End
         Begin VB.TextBox txtValor_IPI 
            Alignment       =   1  'Right Justify
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   13140
            Locked          =   -1  'True
            TabIndex        =   201
            TabStop         =   0   'False
            ToolTipText     =   "Valor do IPI."
            Top             =   2955
            Width           =   870
         End
         Begin VB.TextBox txtICMS 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   11310
            TabIndex        =   198
            TabStop         =   0   'False
            ToolTipText     =   "ICMS."
            Top             =   2955
            Width           =   435
         End
         Begin VB.TextBox txtIPI 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   12720
            TabIndex        =   200
            TabStop         =   0   'False
            ToolTipText     =   "IPI."
            Top             =   2955
            Width           =   405
         End
         Begin VB.TextBox Txt_codigo_enq_IPI 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   14190
            MaxLength       =   3
            TabIndex        =   192
            TabStop         =   0   'False
            ToolTipText     =   "Código de enquadramento do IPI"
            Top             =   2850
            Width           =   675
         End
         Begin VB.TextBox Txt_valor_total_desc_prod 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Height          =   315
            Left            =   10290
            MaxLength       =   15
            TabIndex        =   197
            ToolTipText     =   "Valor do desconto."
            Top             =   2955
            Width           =   1005
         End
         Begin VB.TextBox txtnaovisualizarvalor 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   9780
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   162
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   2370
            Visible         =   0   'False
            Width           =   4680
         End
         Begin VB.TextBox txtnaovisualizarvalor1 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   163
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   2385
            Visible         =   0   'False
            Width           =   8010
         End
         Begin DrawSuite2022.USButton Cmd_localizar_CFOP_prod 
            Height          =   315
            Left            =   11760
            TabIndex        =   184
            ToolTipText     =   "Consultar natureza de operação"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":C310E
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton cmdproduto 
            Height          =   315
            Left            =   1800
            TabIndex        =   180
            ToolTipText     =   "Buscar item cadastrado ou vendido"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":CA2A1
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton cmdCF 
            Height          =   315
            Left            =   13560
            TabIndex        =   187
            ToolTipText     =   "Consultar NCM"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":CAE5D
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton Cmd_filtrar_prod 
            Height          =   315
            Left            =   1470
            TabIndex        =   232
            ToolTipText     =   "Consultar código interno"
            Top             =   480
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":D1FF0
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton btnImpostos 
            Height          =   315
            Left            =   14880
            TabIndex        =   244
            ToolTipText     =   "Consultar impostos relativos ao item"
            Top             =   2850
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":D9183
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColorDown =   15048022
            BorderColorOver =   15381630
            PicAlign        =   0
            ShowFocusRect   =   0   'False
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   2
            Left            =   11820
            TabIndex        =   247
            Top             =   2760
            Width           =   780
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Código interno"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   6
            Left            =   307
            TabIndex        =   233
            Top             =   270
            Width           =   1050
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Desc. unit."
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   28
            Left            =   9360
            TabIndex        =   231
            Top             =   2760
            Width           =   780
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   60
            Left            =   4320
            TabIndex        =   230
            Top             =   525
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Código GTIN"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   82
            Left            =   13065
            TabIndex        =   228
            Top             =   2790
            Width           =   900
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Código referência"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   59
            Left            =   2265
            TabIndex        =   226
            Top             =   270
            Width           =   1275
         End
         Begin VB.Label lblCST 
            Alignment       =   2  'Center
            AutoSize        =   -1  'True
            BackColor       =   &H00E0E0E0&
            Caption         =   "CST"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   195
            Left            =   13590
            TabIndex        =   225
            Top             =   2100
            Width           =   345
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "ICMS"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   10
            Left            =   11925
            TabIndex        =   224
            Top             =   2670
            Width           =   375
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "PIS"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   65
            Left            =   13200
            TabIndex        =   223
            Top             =   2670
            Width           =   240
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Cofins"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   66
            Left            =   13695
            TabIndex        =   222
            Top             =   2670
            Width           =   450
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "NCM"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   64
            Left            =   13057
            TabIndex        =   221
            Top             =   285
            Width           =   330
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Natureza de operação (CFOP)"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   62
            Left            =   7515
            TabIndex        =   220
            Top             =   285
            Width           =   2175
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "IPI"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   67
            Left            =   12720
            TabIndex        =   219
            Top             =   2670
            Width           =   210
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Enq.IPI"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   76
            Left            =   14265
            TabIndex        =   218
            Top             =   2670
            Width           =   540
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor IPI"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   75
            Left            =   13305
            TabIndex        =   217
            Top             =   2760
            Width           =   615
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "IPI"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   74
            Left            =   12825
            TabIndex        =   216
            Top             =   2760
            Width           =   210
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "ICMS"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   73
            Left            =   11340
            TabIndex        =   215
            Top             =   2760
            Width           =   375
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   72
            Left            =   14190
            TabIndex        =   214
            Top             =   2760
            Width           =   735
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor unitário"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   71
            Left            =   8100
            TabIndex        =   213
            Top             =   2760
            Width           =   945
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Un. est.  Un.com"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   68
            Left            =   13965
            TabIndex        =   212
            Top             =   270
            Width           =   1215
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Descrição"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   7
            Left            =   3337
            TabIndex        =   211
            Top             =   870
            Width           =   690
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor frete"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   8
            Left            =   300
            TabIndex        =   209
            Top             =   3360
            Width           =   765
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Complemento da descrição"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   9
            Left            =   10252
            TabIndex        =   207
            Top             =   870
            Width           =   1920
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor seguro"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   77
            Left            =   1275
            TabIndex        =   205
            Top             =   3360
            Width           =   900
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Desp. acess."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   78
            Left            =   2355
            TabIndex        =   203
            Top             =   3360
            Width           =   930
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Total  Desc."
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   79
            Left            =   10365
            TabIndex        =   181
            Top             =   2760
            Width           =   855
         End
      End
      Begin VB.TextBox txtidproduto 
         Alignment       =   2  'Center
         Height          =   335
         Left            =   870
         TabIndex        =   89
         Text            =   "0"
         ToolTipText     =   "ID do produto na tabela da NF."
         Top             =   5490
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.TextBox Txt_IDestoque 
         BackColor       =   &H00FFFFFF&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Left            =   2040
         TabIndex        =   88
         Text            =   "0"
         Top             =   5490
         Visible         =   0   'False
         Width           =   1425
      End
      Begin VB.TextBox txtidservico 
         Alignment       =   2  'Center
         Height          =   335
         Left            =   -74850
         TabIndex        =   82
         Text            =   "0"
         ToolTipText     =   "ID do serviço na tabela da NF."
         Top             =   3420
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000E&
         Height          =   945
         Index           =   14
         Left            =   -74925
         TabIndex        =   80
         ToolTipText     =   "Salvar alteração dos valores (F10) / Cancela alteração dos valores (F11)"
         Top             =   9090
         Width           =   15345
         Begin VB.TextBox txtTotal_Cofins 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2027
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   64
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do Cofins."
            Top             =   415
            Width           =   1830
         End
         Begin VB.TextBox txtTotal_INSS 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7598
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   67
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do INSS."
            Top             =   415
            Width           =   1830
         End
         Begin VB.TextBox txtTotal_CSLL 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   3874
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   109
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do CSLL."
            Top             =   415
            Width           =   1830
         End
         Begin VB.TextBox txt_ValorNota2 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   13110
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   70
            TabStop         =   0   'False
            ToolTipText     =   "Valor total da nota."
            Top             =   415
            Width           =   1890
         End
         Begin VB.TextBox Txt_valorISS 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   5721
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   66
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do ISSQN."
            Top             =   415
            Width           =   1890
         End
         Begin VB.TextBox txttotalservicos 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   11292
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   69
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do(s) serviço(s)."
            Top             =   415
            Width           =   1800
         End
         Begin VB.TextBox txtTotal_PIS 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   63
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do PIS."
            Top             =   415
            Width           =   1830
         End
         Begin VB.TextBox txtTotal_IRRF 
            Alignment       =   2  'Center
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   9445
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   68
            TabStop         =   0   'False
            ToolTipText     =   "Valor total do IRRF."
            Top             =   415
            Width           =   1830
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total nota"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   116
            Left            =   13426
            TabIndex        =   154
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total serviços"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   115
            Left            =   11375
            TabIndex        =   153
            Top             =   225
            Width           =   1635
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total IRRF"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   114
            Left            =   9663
            TabIndex        =   152
            Top             =   225
            Width           =   1335
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total INSS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   113
            Left            =   7823
            TabIndex        =   151
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total ISSQN"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   112
            Left            =   5901
            TabIndex        =   150
            Top             =   225
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total CSLL"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   111
            Left            =   4099
            TabIndex        =   149
            Top             =   225
            Width           =   1320
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total Cofins"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   110
            Left            =   2192
            TabIndex        =   148
            Top             =   225
            Width           =   1440
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total PIS"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   13
            Left            =   458
            TabIndex        =   81
            Top             =   225
            Width           =   1215
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Dados da transportadora"
         BeginProperty Font 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   1710
         Index           =   15
         Left            =   -74940
         MousePointer    =   1  'Arrow
         TabIndex        =   79
         Top             =   2220
         Width           =   15375
         Begin VB.TextBox txtTransp_uf_Transportadora 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7110
            TabIndex        =   277
            Top             =   1110
            Width           =   675
         End
         Begin VB.TextBox txtidinttransp 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2070
            TabIndex        =   254
            Top             =   510
            Width           =   435
         End
         Begin VB.ComboBox Cmb_tipo_transp 
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":E0316
            Left            =   180
            List            =   "frmEstoque_Ordem_Faturamento.frx":E0323
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   252
            ToolTipText     =   "Tipo da transportadora."
            Top             =   505
            Width           =   1875
         End
         Begin VB.TextBox txtTransp_numero 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   14295
            MaxLength       =   10
            TabIndex        =   73
            ToolTipText     =   "Número."
            Top             =   1110
            Width           =   945
         End
         Begin VB.TextBox txtTransp_IE 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11160
            Locked          =   -1  'True
            MaxLength       =   15
            TabIndex        =   76
            ToolTipText     =   "Número da inscrição estadual."
            Top             =   510
            Width           =   2130
         End
         Begin VB.TextBox txtTransp_municipio 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   150
            TabIndex        =   74
            ToolTipText     =   "Cidade."
            Top             =   1110
            Width           =   6915
         End
         Begin VB.TextBox txtTransp_cnpj 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   8955
            Locked          =   -1  'True
            MaxLength       =   30
            TabIndex        =   75
            ToolTipText     =   "Número do CNPJ/CPF."
            Top             =   510
            Width           =   2160
         End
         Begin VB.TextBox txtTransp_endereco 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   7800
            Locked          =   -1  'True
            MaxLength       =   255
            TabIndex        =   72
            ToolTipText     =   "Endereço."
            Top             =   1110
            Width           =   6465
         End
         Begin VB.TextBox TxtTransp_nome 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2550
            MaxLength       =   255
            TabIndex        =   71
            ToolTipText     =   "Nome da transportadora."
            Top             =   510
            Width           =   6045
         End
         Begin VB.TextBox Txt_codigo_ANTT 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   13305
            MaxLength       =   20
            TabIndex        =   77
            ToolTipText     =   "Registro nacional de transportador de carga (ANTT)"
            Top             =   510
            Width           =   1950
         End
         Begin DrawSuite2022.USButton btnTransp 
            Height          =   315
            Left            =   8610
            TabIndex        =   282
            ToolTipText     =   "Buscar transportadora"
            Top             =   510
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":E0345
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   0
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Tipo*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   1
            Left            =   960
            TabIndex        =   253
            Top             =   300
            Width           =   390
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Código ANTT"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   126
            Left            =   13815
            TabIndex        =   161
            Top             =   330
            Width           =   930
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Inscrição estadual*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   122
            Left            =   11490
            TabIndex        =   160
            Top             =   330
            Width           =   1395
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "CNPJ/CPF"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   121
            Left            =   9690
            TabIndex        =   159
            Top             =   330
            Width           =   720
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "UF*"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   120
            Left            =   7305
            TabIndex        =   158
            Top             =   900
            Width           =   285
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Número"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   119
            Left            =   14490
            TabIndex        =   157
            Top             =   915
            Width           =   555
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Endereço"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   118
            Left            =   10695
            TabIndex        =   156
            Top             =   915
            Width           =   675
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Transportadora"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   117
            Left            =   5040
            TabIndex        =   155
            Top             =   315
            Width           =   1155
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Cidade"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   31
            Left            =   3570
            TabIndex        =   113
            Top             =   900
            Width           =   495
         End
      End
      Begin DrawSuite2022.USToolBar USToolBar4 
         Height          =   945
         Left            =   -74925
         TabIndex        =   78
         Top             =   360
         Width           =   15330
         _ExtentX        =   27040
         _ExtentY        =   1667
         ButtonCount     =   8
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Salvar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Salvar (F3)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   38
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Excluir"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Excluir (F4)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   42
         ButtonTop2      =   2
         ButtonWidth2    =   39
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Pedido"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Buscar transportadora do cliente no pedido (F9)"
         ButtonKey3      =   "6"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   83
         ButtonTop3      =   2
         ButtonWidth3    =   40
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Cliente"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Buscar transportadora do cliente (F10)"
         ButtonKey4      =   "7"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   125
         ButtonTop4      =   2
         ButtonWidth4    =   41
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonAlignment5=   2
         ButtonType5     =   1
         ButtonStyle5    =   -1
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState5    =   -1
         ButtonLeft5     =   168
         ButtonTop5      =   4
         ButtonWidth5    =   2
         ButtonHeight5   =   52
         ButtonCaption6  =   "Ajuda"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Ajuda (F1)"
         ButtonKey6      =   "9"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   172
         ButtonTop6      =   2
         ButtonWidth6    =   36
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Sair"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Sair (Esc)"
         ButtonKey7      =   "10"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   210
         ButtonTop7      =   2
         ButtonWidth7    =   26
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonEnabled8  =   0   'False
         ButtonKey8      =   "11"
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState8    =   5
         ButtonLeft8     =   238
         ButtonTop8      =   2
         ButtonWidth8    =   24
         ButtonHeight8   =   24
         ButtonUseMaskColor8=   0   'False
         Begin DrawSuite2022.USImageList USImageList4 
            Left            =   10830
            Top             =   210
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":E3995
            Count           =   1
         End
      End
      Begin DrawSuite2022.USToolBar USToolBar3 
         Height          =   975
         Left            =   -74925
         TabIndex        =   83
         Top             =   360
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   1720
         ButtonCount     =   11
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Novo (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Salvar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Salvar (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   38
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Excluir"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Excluir (F4)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   77
         ButtonTop3      =   2
         ButtonWidth3    =   39
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Relatório"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Relatório (F5)"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   118
         ButtonTop4      =   2
         ButtonWidth4    =   51
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Anterior"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Registro anterior."
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   171
         ButtonTop5      =   2
         ButtonWidth5    =   47
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Próximo"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Próximo registro."
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   220
         ButtonTop6      =   2
         ButtonWidth6    =   46
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Impostos"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Impostos sobre serviço (F7)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   268
         ButtonTop7      =   2
         ButtonWidth7    =   52
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonEnabled8  =   0   'False
         ButtonIconSize8 =   32
         ButtonAlignment8=   2
         ButtonType8     =   1
         ButtonStyle8    =   -1
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState8    =   -1
         ButtonLeft8     =   322
         ButtonTop8      =   4
         ButtonWidth8    =   2
         ButtonHeight8   =   54
         ButtonCaption9  =   "Ajuda"
         ButtonEnabled9  =   0   'False
         ButtonIconSize9 =   32
         ButtonToolTipText9=   "Ajuda (F1)"
         ButtonKey9      =   "9"
         ButtonAlignment9=   2
         BeginProperty ButtonFont9 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft9     =   326
         ButtonTop9      =   2
         ButtonWidth9    =   36
         ButtonHeight9   =   21
         ButtonUseMaskColor9=   0   'False
         ButtonCaption10 =   "Sair"
         ButtonEnabled10 =   0   'False
         ButtonIconSize10=   32
         ButtonToolTipText10=   "Sair (Esc)"
         ButtonKey10     =   "10"
         ButtonAlignment10=   2
         BeginProperty ButtonFont10 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft10    =   364
         ButtonTop10     =   2
         ButtonWidth10   =   26
         ButtonHeight10  =   21
         ButtonUseMaskColor10=   0   'False
         ButtonEnabled11 =   0   'False
         ButtonIconSize11=   32
         ButtonKey11     =   "11"
         ButtonAlignment11=   2
         BeginProperty ButtonFont11 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState11   =   5
         ButtonLeft11    =   392
         ButtonTop11     =   2
         ButtonWidth11   =   24
         ButtonHeight11  =   24
         ButtonUseMaskColor11=   0   'False
         Begin DrawSuite2022.USImageList USImageList3 
            Left            =   12420
            Top             =   120
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":E74C2
            Count           =   1
         End
      End
      Begin DrawSuite2022.USProgressBar PBLista 
         Height          =   255
         Index           =   5
         Left            =   -74925
         TabIndex        =   104
         Top             =   9720
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   450
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor2      =   0
         SearchText      =   "Atualizando..."
         Value           =   0
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000005&
         Height          =   1365
         Index           =   12
         Left            =   -74925
         TabIndex        =   85
         Top             =   1350
         Width           =   15345
         Begin VB.ComboBox Cmb_CST_PIS_Serv 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":ED29E
            Left            =   9120
            List            =   "frmEstoque_Ordem_Faturamento.frx":ED305
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   50
            ToolTipText     =   "Situação tributária PIS."
            Top             =   960
            Width           =   660
         End
         Begin VB.ComboBox Cmb_CST_Cofins_Serv 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":ED38B
            Left            =   9810
            List            =   "frmEstoque_Ordem_Faturamento.frx":ED3F2
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   51
            ToolTipText     =   "Situação tributária Cofins."
            Top             =   960
            Width           =   660
         End
         Begin VB.TextBox Txt_ID_CFOP_serv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            TabIndex        =   52
            TabStop         =   0   'False
            ToolTipText     =   "ID da CFOP."
            Top             =   960
            Width           =   585
         End
         Begin VB.CheckBox Chk_CFOP_serv 
            BackColor       =   &H00E0E0E0&
            ForeColor       =   &H00000000&
            Height          =   195
            Left            =   510
            TabIndex        =   111
            Top             =   765
            Width           =   195
         End
         Begin VB.TextBox txtcodServ 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   180
            MaxLength       =   50
            TabIndex        =   47
            ToolTipText     =   "Código interno."
            Top             =   360
            Width           =   1695
         End
         Begin VB.TextBox txtDescserv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   2550
            Locked          =   -1  'True
            MaxLength       =   255
            TabIndex        =   58
            TabStop         =   0   'False
            ToolTipText     =   "Descrição."
            Top             =   360
            Width           =   7965
         End
         Begin VB.TextBox txtqtdserv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11340
            TabIndex        =   48
            ToolTipText     =   "Quantidade."
            Top             =   360
            Width           =   945
         End
         Begin VB.TextBox txtVlrunitserv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   12300
            TabIndex        =   49
            ToolTipText     =   "Valor unitário."
            Top             =   360
            Width           =   1410
         End
         Begin VB.TextBox txtVlrtotalserv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   315
            Left            =   13725
            Locked          =   -1  'True
            TabIndex        =   57
            TabStop         =   0   'False
            ToolTipText     =   "Valor total."
            Top             =   360
            Width           =   1530
         End
         Begin VB.TextBox txt_pcclienteserv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   11970
            MaxLength       =   60
            TabIndex        =   60
            ToolTipText     =   "Número do pedido de compra do cliente."
            Top             =   960
            Width           =   1365
         End
         Begin VB.TextBox txtof_servico 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   10650
            TabIndex        =   59
            ToolTipText     =   "Número da ordem/lote."
            Top             =   960
            Width           =   975
         End
         Begin VB.ComboBox txtunserv 
            Appearance      =   0  'Flat
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":ED478
            Left            =   12180
            List            =   "frmEstoque_Ordem_Faturamento.frx":ED4CD
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   55
            TabStop         =   0   'False
            ToolTipText     =   "Unidade de estoque."
            Top             =   1410
            Width           =   780
         End
         Begin VB.CheckBox Chk_servico_executado_cliente 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Executado no cliente?"
            Height          =   195
            Left            =   13380
            TabIndex        =   61
            Top             =   1050
            Width           =   1875
         End
         Begin VB.TextBox Txt_CFOP_serv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   780
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   53
            TabStop         =   0   'False
            ToolTipText     =   "CFOP."
            Top             =   960
            Width           =   810
         End
         Begin VB.TextBox Txt_natureza_operacao_serv 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            Enabled         =   0   'False
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Left            =   1620
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   54
            TabStop         =   0   'False
            ToolTipText     =   "Natureza da operação."
            Top             =   960
            Width           =   6540
         End
         Begin VB.ComboBox Cmb_un_com_serv 
            Appearance      =   0  'Flat
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   330
            ItemData        =   "frmEstoque_Ordem_Faturamento.frx":ED53D
            Left            =   10545
            List            =   "frmEstoque_Ordem_Faturamento.frx":ED592
            Locked          =   -1  'True
            Sorted          =   -1  'True
            Style           =   2  'Dropdown List
            TabIndex        =   56
            TabStop         =   0   'False
            ToolTipText     =   "Unidade comercial."
            Top             =   360
            Width           =   780
         End
         Begin VB.TextBox txtnaovisualizarvalor2 
            Alignment       =   2  'Center
            BackColor       =   &H00FFFFFF&
            BeginProperty Font 
               Name            =   "Arial"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000000&
            Height          =   315
            Left            =   180
            Locked          =   -1  'True
            MaxLength       =   50
            TabIndex        =   164
            TabStop         =   0   'False
            Text            =   "Valores não disponíveis"
            Top             =   1680
            Visible         =   0   'False
            Width           =   2220
         End
         Begin DrawSuite2022.USButton cmdservicos 
            Height          =   315
            Left            =   2220
            TabIndex        =   235
            ToolTipText     =   "Buscar serviço cadastrado ou vendido"
            Top             =   360
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":ED602
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            PicAlign        =   0
            Theme           =   1
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton Cmd_localizar_CFOP_serv 
            Height          =   315
            Left            =   8160
            TabIndex        =   236
            ToolTipText     =   "Buscar CFOP cadastrado"
            Top             =   960
            Width           =   945
            _ExtentX        =   1667
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":10B707
            Caption         =   "CFOP"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   5263559
            BorderColorDisabled=   13160660
            BorderColorDown =   4013465
            BorderColorOver =   4408288
            GradientColor1  =   5263559
            GradientColor2  =   5263559
            GradientColor3  =   5263559
            GradientColor4  =   5263559
            GradientColorDisabled1=   13160660
            GradientColorDisabled2=   13160660
            GradientColorDisabled3=   13160660
            GradientColorDisabled4=   13160660
            GradientColorOver1=   4408288
            GradientColorOver2=   4408288
            GradientColorOver3=   4408288
            GradientColorOver4=   4408288
            GradientColorDown1=   4013465
            GradientColorDown2=   4013465
            GradientColorDown3=   4013465
            GradientColorDown4=   4013465
            PicAlign        =   6
            Theme           =   4
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton Cmd_filtrar_prod_serv1 
            Height          =   315
            Left            =   1890
            TabIndex        =   237
            ToolTipText     =   "Consultar cadastro do serviço"
            Top             =   360
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":12980C
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            PicAlign        =   0
            Theme           =   1
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin DrawSuite2022.USButton cmdfiltrarordem_servico 
            Height          =   315
            Left            =   11640
            TabIndex        =   238
            ToolTipText     =   "Consultar cadastro de ordem"
            Top             =   960
            Width           =   315
            _ExtentX        =   556
            _ExtentY        =   556
            DibPicture      =   "frmEstoque_Ordem_Faturamento.frx":13099F
            Caption         =   ""
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            BorderColor     =   8421504
            BorderColorDisabled=   13160660
            BorderColorDown =   7907521
            BorderColorOver =   7907521
            GradientColor2  =   14737632
            GradientColor3  =   12632256
            GradientColor4  =   12632256
            GradientColorDisabled1=   14215660
            GradientColorDisabled2=   14215660
            GradientColorDisabled3=   14215660
            GradientColorDisabled4=   14215660
            GradientColorOver1=   14417407
            GradientColorOver2=   12317439
            GradientColorOver3=   4838399
            GradientColorOver4=   9627391
            GradientColorDown1=   10802943
            GradientColorDown2=   7979263
            GradientColorDown3=   4370174
            GradientColorDown4=   7395582
            GradientColors  =   1
            PicAlign        =   0
            Theme           =   1
            ToolTipTitle    =   "CAPRIND v5.0"
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Descrição"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   108
            Left            =   6187
            TabIndex        =   147
            Top             =   165
            Width           =   690
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Pis         Cofins           Ordem/lote           Pedido cliente"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   107
            Left            =   9255
            TabIndex        =   146
            Top             =   765
            Width           =   3840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor total"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   105
            Left            =   14123
            TabIndex        =   145
            Top             =   165
            Width           =   735
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Quantidade"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   104
            Left            =   11385
            TabIndex        =   144
            Top             =   165
            Width           =   840
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Un. com."
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   103
            Left            =   10590
            TabIndex        =   143
            Top             =   165
            Width           =   645
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Un. est."
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   102
            Left            =   12285
            TabIndex        =   142
            Top             =   1575
            Width           =   585
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Natureza da operação"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   101
            Left            =   4073
            TabIndex        =   141
            Top             =   780
            Width           =   1605
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "CFOP"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   100
            Left            =   960
            TabIndex        =   140
            Top             =   765
            Width           =   405
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "ID"
            ForeColor       =   &H00000000&
            Height          =   195
            Index           =   99
            Left            =   330
            TabIndex        =   139
            Top             =   765
            Width           =   165
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Valor unitário"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   12
            Left            =   12510
            TabIndex        =   87
            Top             =   180
            Width           =   945
         End
         Begin VB.Label Label1 
            Appearance      =   0  'Flat
            AutoSize        =   -1  'True
            BackColor       =   &H80000005&
            BackStyle       =   0  'Transparent
            Caption         =   "Cód. interno"
            ForeColor       =   &H00000080&
            Height          =   195
            Index           =   11
            Left            =   570
            TabIndex        =   86
            Top             =   165
            Width           =   900
         End
      End
      Begin VB.Frame Frame1 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Totalização"
         Height          =   465
         Index           =   8
         Left            =   -74940
         TabIndex        =   99
         Top             =   9540
         Width           =   15345
         Begin DrawSuite2022.USLabel lblSN 
            Height          =   195
            Left            =   8700
            TabIndex        =   365
            Top             =   180
            Width           =   1845
            _ExtentX        =   3254
            _ExtentY        =   344
            Caption         =   "% SN:"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   -2147483630
            NoHTMLCaption   =   "% SN:"
         End
         Begin VB.Label Label4 
            AutoSize        =   -1  'True
            BackColor       =   &H00E0E0E0&
            Caption         =   "Faturado ultimos 12 meses : "
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00000080&
            Height          =   240
            Left            =   11160
            TabIndex        =   170
            Top             =   150
            Width           =   2520
         End
         Begin VB.Label Lbl2 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   "0,00"
            BeginProperty Font 
               Name            =   "Tahoma"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   240
            Left            =   13680
            TabIndex        =   169
            Top             =   150
            Width           =   375
         End
         Begin VB.Label Lbl1 
            AutoSize        =   -1  'True
            BackStyle       =   0  'Transparent
            Caption         =   " "
            Height          =   195
            Left            =   1200
            TabIndex        =   100
            Top             =   180
            Width           =   7605
         End
      End
      Begin DrawSuite2022.USToolBar USToolBar1 
         Height          =   975
         Left            =   -74910
         TabIndex        =   314
         Top             =   360
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   1720
         ButtonCount     =   8
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "(Insert) Nova ordem de faturamento"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonCaption2  =   "Filtrar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Filtrar (F2)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   36
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Salvar"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Salvar (F3)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   75
         ButtonTop3      =   2
         ButtonWidth3    =   38
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Imprimir"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Imprimir ordem de faturamento"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   115
         ButtonTop4      =   2
         ButtonWidth4    =   46
         ButtonHeight4   =   21
         ButtonCaption5  =   "Excluir"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Excluir (F4)"
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   163
         ButtonTop5      =   2
         ButtonWidth5    =   39
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Validação"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Validar/cancelar validação (F8)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   204
         ButtonTop6      =   2
         ButtonWidth6    =   53
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Ajuda"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Ajuda (F1)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   259
         ButtonTop7      =   2
         ButtonWidth7    =   36
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         ButtonCaption8  =   "Sair"
         ButtonEnabled8  =   0   'False
         ButtonToolTipText8=   "Sair (Esc)"
         ButtonKey8      =   "8"
         ButtonAlignment8=   2
         BeginProperty ButtonFont8 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft8     =   297
         ButtonTop8      =   2
         ButtonWidth8    =   26
         ButtonHeight8   =   21
         ButtonUseMaskColor8=   0   'False
         Begin MSComDlg.CommonDialog CommonDialog1 
            Left            =   1710
            Top             =   1050
            _ExtentX        =   847
            _ExtentY        =   847
            _Version        =   393216
         End
         Begin DrawSuite2022.USImageList USImageList1 
            Left            =   12090
            Top             =   240
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":137B32
            Count           =   1
         End
      End
      Begin DrawSuite2022.USToolBar USToolBar6 
         Height          =   915
         Left            =   -74970
         TabIndex        =   333
         Top             =   360
         Width           =   15390
         _ExtentX        =   27146
         _ExtentY        =   1614
         ButtonCount     =   5
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Gerar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Gerar duplicatas (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   35
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Excluir"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Excluir (F4)"
         ButtonKey2      =   "3"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   39
         ButtonTop2      =   2
         ButtonWidth2    =   39
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonAlignment3=   2
         ButtonType3     =   1
         ButtonStyle3    =   -1
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState3    =   -1
         ButtonLeft3     =   80
         ButtonTop3      =   4
         ButtonWidth3    =   2
         ButtonHeight3   =   50
         ButtonCaption4  =   "Ajuda"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Ajuda (F1)"
         ButtonKey4      =   "12"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   84
         ButtonTop4      =   2
         ButtonWidth4    =   36
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonCaption5  =   "Sair"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Sair (Esc)"
         ButtonKey5      =   "13"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   122
         ButtonTop5      =   2
         ButtonWidth5    =   26
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         Begin DrawSuite2022.USImageList USImageList6 
            Left            =   0
            Top             =   0
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":13D26A
            Count           =   1
         End
      End
      Begin MSComctlLib.ListView lst_Duplicata 
         Height          =   7980
         Left            =   -74910
         TabIndex        =   334
         Top             =   2100
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   14076
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         ForeColor       =   -2147483640
         BackColor       =   16777215
         Appearance      =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   9
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "D"
            Text            =   "Venc Duplic."
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   1
            Object.Tag             =   "N"
            Text            =   "Valor"
            Object.Width           =   2117
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "Parcela"
            Object.Width           =   1411
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   3
            Object.Tag             =   "N"
            Text            =   "Id"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Env. financeiro"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "N"
            Text            =   "Nosso número"
            Object.Width           =   3528
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   6
            Object.Tag             =   "N"
            Text            =   "Remessa"
            Object.Width           =   2470
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   7
            Text            =   "Destinatário"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   8
            Text            =   "Venc Boleto"
            Object.Width           =   2540
         EndProperty
      End
      Begin VB.TextBox Txt_ID_duplicata 
         BackColor       =   &H00FFFFFF&
         Enabled         =   0   'False
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   335
         Left            =   -72630
         MaxLength       =   50
         MouseIcon       =   "frmEstoque_Ordem_Faturamento.frx":13FF1E
         MousePointer    =   1  'Arrow
         TabIndex        =   335
         Text            =   "0"
         ToolTipText     =   "ID duplicata."
         Top             =   3360
         Visible         =   0   'False
         Width           =   1410
      End
      Begin DrawSuite2022.USToolBar USToolBar7 
         Height          =   975
         Left            =   -74940
         TabIndex        =   336
         Top             =   330
         Width           =   15315
         _ExtentX        =   27014
         _ExtentY        =   1720
         ButtonCount     =   6
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Filtrar"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Filtrar (F2)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   42
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Gerar OF"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Gerar ordem de faturamento (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   46
         ButtonTop2      =   2
         ButtonWidth2    =   57
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Relatório"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Relatório (F5)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   105
         ButtonTop3      =   2
         ButtonWidth3    =   59
         ButtonHeight3   =   24
         ButtonUseMaskColor3=   0   'False
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonAlignment4=   2
         ButtonType4     =   1
         ButtonStyle4    =   -1
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState4    =   -1
         ButtonLeft4     =   166
         ButtonTop4      =   4
         ButtonWidth4    =   2
         ButtonHeight4   =   54
         ButtonCaption5  =   "Ajuda"
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonToolTipText5=   "Ajuda (F1)"
         ButtonKey5      =   "5"
         ButtonAlignment5=   2
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft5     =   170
         ButtonTop5      =   2
         ButtonWidth5    =   41
         ButtonHeight5   =   21
         ButtonUseMaskColor5=   0   'False
         ButtonCaption6  =   "Sair"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Sair (Esc)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   213
         ButtonTop6      =   2
         ButtonWidth6    =   30
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         Begin DrawSuite2022.USImageList USImageList7 
            Left            =   13980
            Top             =   210
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":140228
            Count           =   1
         End
      End
      Begin DrawSuite2022.USToolBar USToolBar2 
         Height          =   975
         Left            =   75
         TabIndex        =   94
         Top             =   360
         Width           =   15330
         _ExtentX        =   27040
         _ExtentY        =   1720
         ButtonCount     =   7
         GradientColor2  =   14737632
         GradientColorOverRight1=   16315633
         GradientColorOverRight2=   15195350
         GripperColor    =   15195350
         IsStrech        =   -1  'True
         RightColor1     =   0
         RightColor2     =   0
         ShowEndPanel    =   0   'False
         Theme           =   1
         ButtonCaption1  =   "Novo"
         ButtonEnabled1  =   0   'False
         ButtonIconSize1 =   32
         ButtonToolTipText1=   "Novo (Insert)"
         ButtonKey1      =   "1"
         ButtonAlignment1=   2
         BeginProperty ButtonFont1 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft1     =   2
         ButtonTop1      =   2
         ButtonWidth1    =   33
         ButtonHeight1   =   21
         ButtonUseMaskColor1=   0   'False
         ButtonCaption2  =   "Salvar"
         ButtonEnabled2  =   0   'False
         ButtonIconSize2 =   32
         ButtonToolTipText2=   "Salvar (F3)"
         ButtonKey2      =   "2"
         ButtonAlignment2=   2
         BeginProperty ButtonFont2 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft2     =   37
         ButtonTop2      =   2
         ButtonWidth2    =   38
         ButtonHeight2   =   21
         ButtonUseMaskColor2=   0   'False
         ButtonCaption3  =   "Excluir"
         ButtonEnabled3  =   0   'False
         ButtonIconSize3 =   32
         ButtonToolTipText3=   "Excluir (F4)"
         ButtonKey3      =   "3"
         ButtonAlignment3=   2
         BeginProperty ButtonFont3 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft3     =   77
         ButtonTop3      =   2
         ButtonWidth3    =   39
         ButtonHeight3   =   21
         ButtonUseMaskColor3=   0   'False
         ButtonCaption4  =   "Empenho"
         ButtonEnabled4  =   0   'False
         ButtonIconSize4 =   32
         ButtonToolTipText4=   "Empenhar / Cancelar Empenho"
         ButtonKey4      =   "4"
         ButtonAlignment4=   2
         BeginProperty ButtonFont4 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft4     =   118
         ButtonTop4      =   2
         ButtonWidth4    =   52
         ButtonHeight4   =   21
         ButtonUseMaskColor4=   0   'False
         ButtonEnabled5  =   0   'False
         ButtonIconSize5 =   32
         ButtonAlignment5=   2
         ButtonType5     =   1
         ButtonStyle5    =   -1
         BeginProperty ButtonFont5 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonState5    =   -1
         ButtonLeft5     =   172
         ButtonTop5      =   4
         ButtonWidth5    =   2
         ButtonHeight5   =   54
         ButtonCaption6  =   "Ajuda"
         ButtonEnabled6  =   0   'False
         ButtonIconSize6 =   32
         ButtonToolTipText6=   "Ajuda (F1)"
         ButtonKey6      =   "6"
         ButtonAlignment6=   2
         BeginProperty ButtonFont6 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft6     =   176
         ButtonTop6      =   2
         ButtonWidth6    =   36
         ButtonHeight6   =   21
         ButtonUseMaskColor6=   0   'False
         ButtonCaption7  =   "Sair"
         ButtonEnabled7  =   0   'False
         ButtonIconSize7 =   32
         ButtonToolTipText7=   "Sair (Esc)"
         ButtonKey7      =   "7"
         ButtonAlignment7=   2
         BeginProperty ButtonFont7 {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ButtonLeft7     =   214
         ButtonTop7      =   2
         ButtonWidth7    =   26
         ButtonHeight7   =   21
         ButtonUseMaskColor7=   0   'False
         Begin DrawSuite2022.USImageList USImageList2 
            Left            =   0
            Top             =   0
            _ExtentX        =   900
            _ExtentY        =   767
            Img1            =   "frmEstoque_Ordem_Faturamento.frx":143985
            Count           =   1
         End
         Begin DrawSuite2022.USCheckBox chkRetorno 
            Height          =   195
            Left            =   14370
            TabIndex        =   251
            Top             =   1740
            Width           =   1275
            _ExtentX        =   2249
            _ExtentY        =   344
            Caption         =   "Retorno"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ShowFocusRect   =   -1  'True
         End
         Begin DrawSuite2022.USCheckBox chkRemessa 
            Height          =   195
            Left            =   13410
            TabIndex        =   250
            Top             =   1740
            Width           =   1275
            _ExtentX        =   2249
            _ExtentY        =   344
            Caption         =   "Remessa"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ShowFocusRect   =   -1  'True
         End
         Begin DrawSuite2022.USCheckBox chkNaoArredondar 
            Height          =   195
            Left            =   12150
            TabIndex        =   249
            Top             =   1380
            Width           =   2475
            _ExtentX        =   4366
            _ExtentY        =   344
            Caption         =   "Não arredondar valor de ICMS"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ShowFocusRect   =   -1  'True
         End
         Begin DrawSuite2022.USCheckBox Chk_tem_IPI_frete_prod 
            Height          =   195
            Left            =   12150
            TabIndex        =   248
            Top             =   1740
            Width           =   1275
            _ExtentX        =   2249
            _ExtentY        =   344
            Caption         =   "Frete c/ IPI?"
            BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
               Name            =   "Tahoma"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ShowFocusRect   =   -1  'True
         End
      End
      Begin MSComctlLib.ListView Lista_carteira 
         Height          =   7785
         Left            =   -74940
         TabIndex        =   349
         Top             =   1320
         Visible         =   0   'False
         Width           =   15285
         _ExtentX        =   26961
         _ExtentY        =   13732
         View            =   3
         LabelEdit       =   1
         LabelWrap       =   -1  'True
         HideSelection   =   -1  'True
         AllowReorder    =   -1  'True
         Checkboxes      =   -1  'True
         FullRowSelect   =   -1  'True
         GridLines       =   -1  'True
         _Version        =   393217
         SmallIcons      =   "ImageList1"
         ForeColor       =   0
         BackColor       =   16777215
         Appearance      =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Tahoma"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         NumItems        =   23
         BeginProperty ColumnHeader(1) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Object.Tag             =   "N"
            Object.Width           =   617
         EndProperty
         BeginProperty ColumnHeader(2) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   1
            Object.Tag             =   "N"
            Text            =   "Cotacao"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(3) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   2
            Object.Tag             =   "T"
            Text            =   "Código"
            Object.Width           =   3175
         EndProperty
         BeginProperty ColumnHeader(4) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   3
            Object.Tag             =   "T"
            Text            =   "Referência"
            Object.Width           =   3175
         EndProperty
         BeginProperty ColumnHeader(5) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   4
            Object.Tag             =   "T"
            Text            =   "Descrição"
            Object.Width           =   7409
         EndProperty
         BeginProperty ColumnHeader(6) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   5
            Object.Tag             =   "T"
            Text            =   "Un"
            Object.Width           =   882
         EndProperty
         BeginProperty ColumnHeader(7) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   6
            Object.Tag             =   "T"
            Text            =   "Pedido"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(8) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   7
            Object.Tag             =   "D"
            Text            =   "Prazo"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(9) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   8
            Object.Tag             =   "T"
            Text            =   "Documento"
            Object.Width           =   1499
         EndProperty
         BeginProperty ColumnHeader(10) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   9
            Object.Tag             =   "T"
            Text            =   "Programa"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(11) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   10
            Object.Tag             =   "N"
            Text            =   "ID"
            Object.Width           =   0
         EndProperty
         BeginProperty ColumnHeader(12) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   11
            Object.Tag             =   "T"
            Text            =   "Cliente"
            Object.Width           =   4939
         EndProperty
         BeginProperty ColumnHeader(13) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   12
            Object.Tag             =   "T"
            Text            =   "UF"
            Object.Width           =   970
         EndProperty
         BeginProperty ColumnHeader(14) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   13
            Object.Tag             =   "T"
            Text            =   "Transportadora"
            Object.Width           =   3881
         EndProperty
         BeginProperty ColumnHeader(15) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   14
            Object.Tag             =   "N"
            Text            =   "Qtde"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(16) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   15
            Object.Tag             =   "N"
            Text            =   "Faturar"
            Object.Width           =   1764
         EndProperty
         BeginProperty ColumnHeader(17) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   16
            Object.Tag             =   "N"
            Text            =   "Faturada"
            Object.Width           =   1940
         EndProperty
         BeginProperty ColumnHeader(18) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   17
            Object.Tag             =   "N"
            Text            =   "Saldo"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(19) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   18
            Object.Tag             =   "N"
            Text            =   "Empenhado"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(20) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   19
            Object.Tag             =   "N"
            Text            =   "Produzindo"
            Object.Width           =   1587
         EndProperty
         BeginProperty ColumnHeader(21) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   1
            SubItemIndex    =   20
            Object.Tag             =   "T"
            Text            =   "Em estoque"
            Object.Width           =   2646
         EndProperty
         BeginProperty ColumnHeader(22) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            SubItemIndex    =   21
            Text            =   "Observações"
            Object.Width           =   5292
         EndProperty
         BeginProperty ColumnHeader(23) {BDD1F052-858B-11D1-B16A-00C0F0283628} 
            Alignment       =   2
            SubItemIndex    =   22
            Text            =   "Moeda"
            Object.Width           =   2540
         EndProperty
      End
   End
End
Attribute VB_Name = "frmEstoque_Ordem_Faturamento"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Dim TipoNF2         As String 'OK
Dim Pedido          As String 'OK
Public Aplicacao    As String 'OK

Dim IDclienteNF     As Long 'OK
Dim ClienteNF       As String 'OK
Dim MoedaNF         As String 'OK

'====================================================
Dim ValorICMS_Arredondar          As Double 'OK
Dim Frete                         As Double 'OK
Dim Seguro                        As Double 'OK
Dim Acessorias                    As Double 'OK
Dim Vlr_total_aprox_tributos_prod As Double 'OK
Dim Vlr_total_aprox_tributos_serv As Double 'OK
'Dim ValorICMS_desonerado          As Double 'OK
Dim ValorTotalFCP                 As Double 'OK
Dim ValorTotalICMSINTUFDEST       As Double 'OK
Dim ValorTotalICMSINTUFREM        As Double 'OK

'Variáveis para controle da NF
Public NF_cancelada         As Boolean 'OK
Public NF_enviada           As Boolean 'OK
Public NF_alterada          As Boolean 'OK
Public NFe_liberada         As Boolean 'OK

Public Atualizalistanota    As Boolean 'OK
Dim AtualizaImpSN           As Boolean 'OK
Dim Faturado                As Boolean 'OK
Dim Faturado_Parcial        As Boolean 'OK
Dim Faturar                 As Boolean 'OK
Public FaturadoParcial      As Boolean 'OK
Public Novo_Nota            As Boolean 'OK
Public Descricao_comercial  As Boolean 'OK
Dim Novo_Nota1              As Boolean 'OK
Dim Novo_Nota2              As Boolean 'OK
Dim Novo_Nota3              As Boolean 'OK
Public Strsql_Faturamento   As String 'OK
Public Strsql_FaturamentoTotal As String 'OK
Public Strsql_FaturamentoTotalCanc As String 'OK
Public Strsql_FaturamentoNFe As String 'OK
Public Strsql_FaturamentoNFSe As String 'OK
Dim FormulaRel_OF As String
Dim Strsql_Carteira_Faturamento   As String 'OK
Dim TBLISTA_Faturamento_NF  As ADODB.Recordset 'OK
Dim TBLISTA_Faturamento_NF1  As ADODB.Recordset 'OK
Dim Cancelar_alt_totais     As Boolean 'OK
Dim GerarDuplicatas         As Boolean 'OK
Public Produto_Relacionado  As Boolean 'OK
Public Faturamento_Vendas_PI As Boolean 'OK
Dim GerarOF As Boolean 'OK
Public SerialCertificado As String

'Private Sub cmdPrevia_Click()
'    Dim retorno As String
'    Dim i As Integer
'    If (txtCaminho.Text <> "") And (txtConteudo.Text <> "") And (cbTpConteudo.Text <> "") Then
'        retorno = previaNFeESalvar(txtConteudo.Text, cbTpConteudo.Text, txtCaminho.Text, True)
'    Else
'        MsgBox ("Todos campos necessarios devem ser preenchidos ['caminho', 'tipo de conteudo', 'conteudo']")
'    End If
'
'End Sub

Public Sub ProcCST()
On Error GoTo tratar_erro

If Txt_CFOP_prod.Text <> "" Then

Set TBAliquota = CreateObject("adodb.recordset")
TBAliquota.Open "Select * from tbl_NaturezaOperacao where IDCountCfop = " & Txt_ID_CFOP_prod.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAliquota.EOF = False Then
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & TBAliquota!IDCountCfop & " order by CST_ICMS", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then

frmFaturamento_CST.Show 1

End If
End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcAjuda()
On Error GoTo tratar_erro

If Formulario = "Faturamento/Nota fiscal/Própria" Then
     FunAbrirVideoWeb ("http://www.youtube.com/watch?v=CGYv8OmQrDk&list=UUODGiDjQ-BCrxh0YXfJvoqg&index=48&feature=plcp")
ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
        
ElseIf Formulario = "Estoque/Ordem de faturamento" Then
        
Else
    FunAbrirVideoWeb ("http://www.youtube.com/watch?v=ixbnhWHUFIs&list=UUODGiDjQ-BCrxh0YXfJvoqg&index=20&feature=plcp")
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaComboForma()
On Error GoTo tratar_erro

Familiatext = ""
cmb_tipopagto.Clear
If Opt_saida.Value = True Then TextoFiltro = "Tipo = 'R'" Else TextoFiltro = "Tipo = 'P'"
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_FormaPagto where " & TextoFiltro & " order by Descricao", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        If Familiatext <> TBAbrir!Descricao Then cmb_tipopagto.AddItem TBAbrir!Descricao
        Familiatext = TBAbrir!Descricao
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

If Opt_saida.Value = True Then
Label1(137).Caption = "Forma de recebimento*"
Else
Label1(137).Caption = "Forma de pagamento*"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcFiltrarMes()
On Error GoTo tratar_erro

M = TabFiltro.ActiveTab + 1
'M = FunVerificaMes(TabFiltro.ActiveTab + 1)
'CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao, NF.RPS"
CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao, NF.RPS"
If Faturamento_NF_Saida = True Then DataFiltro = "NF.dt_DataEmissao" Else DataFiltro = "NF.dt_Saida_Entrada"
If Formulario = "Estoque/Ordem de faturamento" Then
    TextoFiltroVal = "and NF.int_NotaFiscal IS NULL"
    OrdenarFiltro = "order by NF.ID"
Else
    TextoFiltroVal = "" '"and NF.DtValidacaoOF IS NOT NULL"
    OrdenarFiltro = "order by NNF desc"
End If

If OptDomes.Value = True Then DataFiltroTexto = "month(" & DataFiltro & ")= '" & M & "' and Year(" & DataFiltro & ") = '" & IIf(cmbAno = "", Year(Date), cmbAno) & "'"
If OptAteomes.Value = True Then DataFiltroTexto = "month(" & DataFiltro & ")<= '" & M & "' and Year(" & DataFiltro & ") = '" & IIf(cmbAno = "", Year(Date), cmbAno) & "'"
If TabFiltro.ActiveTab = 12 Then DataFiltroTexto = ""

Strsql_Faturamento = "Select " & CamposFiltro & ", NF.int_NotaFiscal AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " group by " & CamposFiltro & ", NF.int_NotaFiscal HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtIDEmpresa.Text & " " & OrdenarFiltro
'Strsql_Faturamento = "Select " & CamposFiltro & ", NF.int_NotaFiscal AS NNF from tbl_Dados_Nota_Fiscal NF where " & DataFiltroTexto & " " & TextoFiltroVal & " group by " & CamposFiltro & ", NF.int_NotaFiscal HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtidempresa.Text & " " & OrdenarFiltro
Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " and NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtIDEmpresa.Text & " and NF.Int_status = 1"
Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " " & TextoFiltroVal & " and NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtIDEmpresa.Text & " and NF.Int_status = 2"
Strsql_FaturamentoNFe = "Select " & CamposFiltro & ", NF.int_NotaFiscal AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " and NF.DtValidacao IS NOT NULL AND NF.TipoNF <> 'SA' group by " & CamposFiltro & ", NF.int_NotaFiscal HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtIDEmpresa.Text & " " & OrdenarFiltro
Strsql_FaturamentoNFSe = "Select " & CamposFiltro & ", NF.int_NotaFiscal AS NNF from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where " & DataFiltroTexto & " and NF.DtValidacao IS NOT NULL AND NF.TipoNF = 'SA' group by " & CamposFiltro & ", NF.int_NotaFiscal HAVING NF.Aplicacao = '" & Aplicacao & "' and NF.ID_empresa = " & txtIDEmpresa.Text & " " & OrdenarFiltro
'Debug.print Strsql_Faturamento
ProcCarregaListaNota (1)

If txtIDEmpresa.Text <> 0 Then
Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ActiveResize1_ResizeComplete()
On Error GoTo tratar_erro

'ProcCorrigeForm

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btn_Gerar_Duplicatas_Click()
On Error GoTo tratar_erro

ProcGerarDuplicatas

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnCondicoesComerciais_Click()
On Error GoTo tratar_erro


frmFaturamento_Prod_Serv_PI.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnEmpenhar_Click()
On Error GoTo tratar_erro

If USMsgBox("Deseja empenhar o(s) item(ns) selecionado(s)?", vbYesNo, "CAPRIND v5.0") = vbYes Then
    ProcEmpenho
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnEmpresa_Click()
On Error GoTo tratar_erro

frmFaturamento_prod_Serv_Empresas.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub btnExcluir_Click()
On Error GoTo tratar_erro

If USMsgBox("Deseja realmente excluir esse item da ordem de faturamento ?", vbYesNo, "CAPRIND v5.0") = vbYes Then
    ProcExcluirProduto
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnImpostos_Click()
On Error GoTo tratar_erro

If txtIDProduto.Text = 0 Then Exit Sub
IDAntigo = txtIDProduto.Text
If IDAntigo <> 0 Then
frmFaturamento_Impostos_produto.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnImpRetidos_Click()
On Error GoTo tratar_erro

StrSql = "select sum(DN.Total_PIS_serv) as PIS,sum(DN.Total_Cofins_serv) as COFINS,sum(DN.Total_CSLL_serv) as CSLL,sum(DN.Total_INSS_serv) as INSS,sum(VlrISS) as ISS,sum(DN.Total_IRRF_serv) as IRRF, TTN.Valor_total_retencao_serv from tbl_Detalhes_Nota DN Inner Join tbl_Totais_Nota TTN on DN.ID_Nota = TTN.ID_Nota where DN.ID_Nota = '" & ID_nota & "' GROUP BY TTN.Valor_total_retencao_serv"
'Debug.print StrSql

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open StrSql, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then

   USMsgBox "PIS:" & TBLISTA!PIS & vbCrLf & "COFINS: R$ " & Format(TBLISTA!Cofins, "###,##0.00") & vbCrLf & "INSS: R$ " & Format(TBLISTA!INSS, "###,##0.00") & vbCrLf & "ISS: R$ " & Format(TBLISTA!ISS, "###,##0.00") & vbCrLf & "IRRF: R$ " & Format(TBLISTA!IRRF, "###,##0.00") & vbCrLf & "TOTAL RETIDO: R$ " & Format(TBLISTA!Valor_Total_Retencao_Serv, "###,##0.00") & "", vbInformation, "IMPOSTOS RETIDOS | CAPRIND v5.0"
   Exit Sub
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnNovo_Click()
On Error GoTo tratar_erro

ProcNovoProduto

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnPeso_Click()
On Error GoTo tratar_erro

frmFaturamento_Prod_Serv_pesoItens.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub BtnRedespacho_Click()
On Error GoTo tratar_erro

frmFaturamento_Prod_serv_Transporte.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnSalvar_Click()
On Error GoTo tratar_erro

ProcSalvarProduto

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnSalvarFrete_Click()
On Error GoTo tratar_erro

'===================================
' Verifica se tem duplicatas geradas
'===================================
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where id_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then

   USMsgBox ("Não é permitido salvar o frete, pois existe(m) duplicata(s) gerada(s)." & vbCrLf & "Por favor exclua a(s) duplicata(s) antes de adicionar o frete aos produtos."), vbExclamation, "CAPRIND v5.0"
   Exit Sub
End If
TBLISTA.Close

If USMsgBox("Atenção!" & vbCrLf & "Deseja realmente modificar o valor unitario dos itens da lista?", vbYesNo, "CAPRIND v5.0") = vbYes Then

If txt_VlrFrete.Text <> "" Then

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Nota where id_nota = " & txtId & " and Tipo = 'P' order by int_codigo", Conexao, adOpenKeyset, adLockOptimistic


If TBLISTA.EOF = False Then
TBLISTA.MoveLast
Contador = TBLISTA.RecordCount
TBLISTA.MoveFirst
vFrete = txt_VlrFrete / Contador
Do While TBLISTA.EOF = False

Set TBCST = CreateObject("adodb.recordset")
TBCST.Open "Select * from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & TBLISTA!Int_codigo & "", Conexao, adOpenKeyset, adLockOptimistic
If TBCST.EOF = False Then
TBCST!Valor_BC = TBLISTA!dbl_ValorTotal + vFrete
TBCST!Valor_ICMS = (TBCST!Valor_BC * TBLISTA!int_ICMS) / 100
TBCST.Update
End If
TBLISTA!Valor_frete = vFrete
TBLISTA.Update
TBLISTA.MoveNext
Loop
End If
TBLISTA.Close
End If
ProcCarregaLista

If NotaFiscalPronta = False Then
ProcGravarTotaisNota
End If

ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)

ProcLimpaCamposProd
USMsgBox ("Valores dos itens atualizados com sucesso!"), vbInformation, "CAPRIND v5.0"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub btnTransp_Click()
On Error GoTo tratar_erro

'If Formulario <> "Estoque/Ordem de faturamento" Then

    Sit_REG = 2
    
    Select Case Cmb_tipo_transp.Text
      Case "Cliente": ProcTranspCliente
      Case "Empresa": ProcTranspEmpresa
      Case "Fornecedor":  ProcTranspFornecedor
    End Select

'End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub btnVolumes_Click()
On Error GoTo tratar_erro

frmEstoque_Ordem_Faturamento_Volume.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Chk_tem_IPI_frete_prod_Click()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub Cmb_opcao_lista_Click()
On Error GoTo tratar_erro

With ListaNota
    For InitFor = 1 To .ListItems.Count
        .ListItems.Item(InitFor).Checked = False
    Next InitFor
End With

'With USToolBar1
'    If Cmb_opcao_lista = "Excluir" Then
'        .ButtonState(4) = 0
'        .ButtonState(8) = 5
'        .ButtonState(9) = 5
'    ElseIf Cmb_opcao_lista = "Copiar" Then
'            .ButtonState(4) = 5
'            .ButtonState(8) = 0
'            .ButtonState(9) = 5
'        ElseIf Cmb_opcao_lista = "Validação" Then
'                .ButtonState(4) = 5
'                .ButtonState(8) = 5
'                .ButtonState(9) = 0
'            Else
'                .ButtonState(4) = 5
'                .ButtonState(8) = 5
'                .ButtonState(9) = 5
'    End If
'    .Refresh
'End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmb_opcao_lista_Produtos_Click()
On Error GoTo tratar_erro

With ListaProdutos
    For InitFor = 1 To .ListItems.Count
        .ListItems.Item(InitFor).Checked = False
    Next InitFor
End With

With USToolBar2
    If Cmb_opcao_lista_Produtos = "Excluir" Then
        .ButtonState(3) = 0
        .ButtonState(4) = 5
    Else
        .ButtonState(3) = 5
        .ButtonState(4) = 0
    End If
    .Refresh
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmbAno_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcTranspCliente()
On Error GoTo tratar_erro

    ProcConfVariaveisLocCliente False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False
    frmVendas_LocalizarCliente.Show 1
  

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcTranspFornecedor()
On Error GoTo tratar_erro

    ProcConfVariaveisLocForn False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False
    FrmCompras_localizafornecedor.Show 1
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub
Private Sub cmbFinalidade_emissao_Change()
On Error GoTo tratar_erro

If cmbFinalidade_emissao.Text = "4 - Devolução/Retorno" Then
txt_Cond_Recebimento = ""
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmbFrete_Click()
On Error GoTo tratar_erro

    Frame1(15).Visible = True
    Frame3.Visible = True
    Frame5.Visible = True

Select Case cmbFrete.Text

   ' Case "0 - Contratação do Frete por conta do Remetente (CIF)": ProcTranspEmpresa
   ' Case "1 - Contratação do Frete por conta do Destinatário (FOB)": ProcTranspCliente
   ' Case "2 - Contratação do Frete por conta de Terceiros": ProcTranspFornecedor
    Case "3 - Transporte Próprio por conta do Remetente":
    Cmb_tipo_transp.Text = "Empresa"
    Frame1(15).Visible = True
    Frame3.Visible = True
    Frame5.Visible = True
   ' Case "4 - Transporte Próprio por conta do Destinatário": ProcTranspCliente
    Case "9 - Sem Ocorrência de Transporte":
    ProcLimpaCamposTransp
    Frame1(15).Visible = False
    Frame3.Visible = False
    Frame5.Visible = False
    

End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_cancelar_totais_Click()
On Error GoTo tratar_erro

ProcCancelar

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcRedespacho()
On Error GoTo tratar_erro

Sit_REG = 3
Faturamento = True
frmFaturamento_Prod_serv_cliente_forn.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Sub ProcCarregaDadosProduto()
On Error GoTo tratar_erro

Permitido = True
If txtCod_Produto <> "" Then
    CFTexto = ""
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from projproduto where Desenho = '" & txtCod_Produto & "' and Tipo <> 'S' and DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        If TBProduto!Bloqueado = False Then
            txtCod_Produto = IIf(IsNull(TBProduto!Desenho), "", TBProduto!Desenho)
            
            'Verifica se o produto pertence ao cliente ou fornecedor
            If txttipocliente <> "E" Then
                Set TBItem = CreateObject("adodb.recordset")
                Set TBClientes = CreateObject("adodb.recordset")
                TBClientes.Open "Select ID from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBClientes.EOF = False Then
                    TBItem.Open "Select ID, PConsumo, PRevenda, ID_CF from Projproduto_clientes where Codproduto = " & TBProduto!Codproduto & " and IDCliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        Set TBCiclo = CreateObject("adodb.recordset")
                        TBCiclo.Open "Select Codigo from empresa where codigo = " & IDempresa & " and Bloquear_produtos = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBCiclo.EOF = False Then
                            USMsgBox ("Este produto não pertence ao cliente " & txt_Razao & "."), vbExclamation, "CAPRIND v5.0"
                            TBCiclo.Close
                            Exit Sub
                        Else
                            If USMsgBox("Este produto não pertence ao cliente " & txt_Razao & ", deseja prosseguir assim mesmo?", vbYesNo, "CAPRIND v5.0") = vbNo Then
                                TBCiclo.Close
                                Exit Sub
                            End If
                        End If
                        TBCiclo.Close
                    Else
                        If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                            valor = IIf(IsNull(TBItem!PConsumo), 0, TBItem!PConsumo)
                        Else
                            valor = IIf(IsNull(TBItem!PRevenda), 0, TBItem!PRevenda)
                        End If
                        CFTexto = IIf(IsNull(TBItem!ID_CF), "", TBItem!ID_CF)
                        
                        Permitido = False
                    End If
                Else
                    TBItem.Open "Select ID, PCusto from Projproduto_fornecedor where Codproduto = " & TBProduto!Codproduto & " and Idfornecedor = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        If USMsgBox("Este produto não pertence ao fornecedor " & txt_Razao & ", deseja prosseguir assim mesmo?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
                    Else
                        valor = IIf(IsNull(TBItem!PCusto), 0, TBItem!PCusto)
                        Permitido = False
                    End If
                End If
                TBClientes.Close
                TBItem.Close
            End If
                    
            If Permitido1 = False Then txtDescricao_Produto.Text = IIf(IsNull(TBProduto!Descricao), "", TBProduto!Descricao) Else txtDescricao_Produto.Text = IIf(IsNull(TBProduto!descricaotecnica), "", TBProduto!descricaotecnica)
            If IsNull(TBProduto!Unidade) = False And TBProduto!Unidade <> "" Then txtUN.Text = TBProduto!Unidade
            Txt_GTIN = IIf(IsNull(TBProduto!GTIN), "", TBProduto!GTIN)
            
            If Permitido = True Then
                If txttipocliente <> "E" Then
                    If TBProduto!Compras = True And TBProduto!Vendas = False Then
                        valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                    ElseIf TBProduto!Compras = False And TBProduto!Vendas = True Then
                            If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                            Else
                                valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                            End If
                        ElseIf TBProduto!Compras = True And TBProduto!Vendas = True Then
                                If Opt_entrada.Value = True Then
                                    valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                                Else
                                    If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                        valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                                    Else
                                        valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                                    End If
                                End If
                    End If
                Else
                    If Opt_entrada.Value = True Then valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto) Else valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                End If
            End If
            With txtVLUnit
                .Text = Format(valor / FunVerificaTabelaConversaoUnidade(txtUN, Cmb_un_com), "###,##0.000000")
                If cbo_UF <> "EX" And TBProduto!Valor_bloqueado = True Then
                    '.Locked = True
                    '.TabStop = False
                End If
            End With
            
            If Chk_CFOP_prod.Value = 0 Then
                If Opt_saida.Value = True Then ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP1), 0, TBProduto!ID_CFOP1), True Else ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), True
            End If
            
            If CFTexto = "" Then CFTexto = IIf(IsNull(TBProduto!ID_CF), "", TBProduto!ID_CF)
            Txt_ID_CF = CFTexto
            ProcCarregaDadosCSTProd

            ProcBloqueiaCamposProd False
            
            If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com.Text = TBProduto!Unidade_com
        Else
            USMsgBox ("Não é permitido utilizar este produto, pois o mesmo está bloqueado."), vbExclamation, "CAPRIND v5.0"
            ProcBloqueiaCamposProd True
        End If
        
    Else
        If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcLiberaCamposProd
    End If
End If

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        USMsgBox ("Não foi encontrado cadstro de conversão da unidade " & TBProduto!Unidade & " para unidade comercial " & TBProduto!Unidade_com & "."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcVerificaNFPedInt(IDprodserv As Long)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN tbl_dados_nota_fiscal NF ON NF.ID = NFPP.ID_nota where NFPP.ID_prod_NF = " & IDprodserv & " and NF.ID = " & txtId & " and NF.Pedido_interno = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    With txtVLUnit
        '.Locked = True
        '.TabStop = False
    End With
    With txtVlrunitserv
        '.Locked = True
        '.TabStop = False
    End With
Else
    With txtVLUnit
        .Locked = False
        .TabStop = True
    End With
    With txtVlrunitserv
        .Locked = False
        .TabStop = True
    End With
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcBloqueiaCamposProd(ProdBloq As Boolean)
On Error GoTo tratar_erro

If ProdBloq = True Then
    With txtDescricao_Produto
        .Locked = True
        .TabStop = False
    End With
Else
    If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = True Then
        With txtDescricao_Produto
            .Locked = True
            .TabStop = False
        End With
    End If
End If
With Txt_GTIN
    .Locked = True
    .TabStop = False
End With
With txtUN
    .Locked = True
    .TabStop = False
End With
'With Cmb_un_com
'    .Locked = True
'    .TabStop = False
'End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcLiberaCamposProd()
On Error GoTo tratar_erro

With txtDescricao_Produto
    .Locked = False
    .TabStop = True
End With
With Txt_GTIN
    .Locked = False
    .TabStop = True
End With
With txtUN
    .Locked = False
    .TabStop = True
End With
'With Cmb_un_com
'    .Locked = False
'    .TabStop = True
'End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_filtrar_prod_Click()
On Error GoTo tratar_erro

    Permitido1 = False
    ProcLimpaCamposProd1
    ProcCarregaDadosProduto

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosServico()
On Error GoTo tratar_erro

Permitido = True
If txtcodServ <> "" Then
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from projproduto where Desenho = '" & txtcodServ & "' and tipo = 'S' and DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        If TBProduto!Bloqueado = False Then
            txtcodServ = IIf(IsNull(TBProduto!Desenho), "", TBProduto!Desenho)
            
            'Verifica se o serviço pertence ao cliente ou fornecedor
            If txttipocliente <> "E" Then
                Set TBItem = CreateObject("adodb.recordset")
                Set TBClientes = CreateObject("adodb.recordset")
                TBClientes.Open "Select * from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBClientes.EOF = False Then
                    TBItem.Open "Select * from Projproduto_clientes where Codproduto = " & TBProduto!Codproduto & " and IDCliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        Set TBCiclo = CreateObject("adodb.recordset")
                        TBCiclo.Open "Select * from empresa where codigo = " & IDempresa & " and Bloquear_produtos = 'False'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBCiclo.EOF = False Then
                            If USMsgBox("Este serviço não pertence ao cliente " & txt_Razao & ", deseja prosseguir assim mesmo?", vbYesNo, "CAPRIND v5.0") = vbNo Then
                                TBCiclo.Close
                                Exit Sub
                            End If
                        Else
                            USMsgBox ("Este serviço não pertence ao cliente " & txt_Razao & "."), vbExclamation, "CAPRIND v5.0"
                            TBCiclo.Close
                            Exit Sub
                        End If
                        TBCiclo.Close
                    Else
                        If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                            valor = IIf(IsNull(TBItem!PConsumo), 0, TBItem!PConsumo)
                        Else
                            valor = IIf(IsNull(TBItem!PRevenda), 0, TBItem!PRevenda)
                        End If
                        Permitido = False
                    End If
                Else
                    TBItem.Open "Select * from Projproduto_fornecedor where Codproduto = " & TBProduto!Codproduto & " and Idfornecedor = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = True Then
                        If USMsgBox("Este serviço não pertence ao fornecedor " & txt_Razao & ", deseja prosseguir assim mesmo?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
                    Else
                        valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                        Permitido = False
                    End If
                End If
                TBClientes.Close
                TBItem.Close
            End If
            
            If Permitido1 = False Then txtDescserv.Text = IIf(IsNull(TBProduto!Descricao), "", TBProduto!Descricao) Else txtDescserv.Text = IIf(IsNull(TBProduto!descricaotecnica), "", TBProduto!descricaotecnica)
            If IsNull(TBProduto!Unidade) = False And TBProduto!Unidade <> "" Then txtunserv.Text = TBProduto!Unidade
            If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com_serv.Text = TBProduto!Unidade_com
            
            If Permitido = True Then
                If txttipocliente <> "E" Then
                    If TBProduto!Compras = True And TBProduto!Vendas = False Then
                        valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                    ElseIf TBProduto!Compras = False And TBProduto!Vendas = True Then
                            If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                            Else
                                valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                            End If
                        ElseIf TBProduto!Compras = True And TBProduto!Vendas = True Then
                                If Opt_entrada.Value = True Then
                                    valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto)
                                Else
                                    If txttipocliente <> "JR" And txttipocliente <> "FR" Then
                                        valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                                    Else
                                        valor = IIf(IsNull(TBProduto!PRevenda), 0, TBProduto!PRevenda)
                                    End If
                                End If
                    End If
                Else
                    If Opt_entrada.Value = True Then valor = IIf(IsNull(TBProduto!PCusto), 0, TBProduto!PCusto) Else valor = IIf(IsNull(TBProduto!PConsumo), 0, TBProduto!PConsumo)
                End If
            End If
            
            With txtVlrunitserv
                .Text = Format(valor / FunVerificaTabelaConversaoUnidade(txtunserv, Cmb_un_com_serv), "###,##0.0000000000")
                If TBProduto!Valor_bloqueado = True Then
                    .Locked = True
                    .TabStop = False
                End If
            End With
            
            If Chk_CFOP_serv.Value = 0 Then
                If Opt_saida.Value = True Then ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP1), 0, TBProduto!ID_CFOP1), False Else ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False
            End If
            
            If TBProduto!Servico_cliente = True Then Chk_servico_executado_cliente.Value = 1 Else Chk_servico_executado_cliente.Value = 0
            
        Else
            USMsgBox ("Não é permitido utilizar este serviço, pois o mesmo está bloqueado."), vbExclamation, "CAPRIND v5.0"
        End If
        ProcBloqueiaCamposServ
    Else
        If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcLiberaCamposServ
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcBloqueiaCamposServ()
On Error GoTo tratar_erro

With txtDescserv
    .Locked = True
    .TabStop = False
End With
With txtunserv
    .Locked = True
    .TabStop = False
End With
With Cmb_un_com_serv
    .Locked = True
    .TabStop = False
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcLiberaCamposServ()
On Error GoTo tratar_erro

With txtDescserv
    .Locked = False
    .TabStop = True
End With
With txtunserv
    .Locked = False
    .TabStop = True
End With
With Cmb_un_com_serv
    .Locked = False
    .TabStop = True
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub procGerarBoleto()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
'If txtDtValidacao = "" Then
'    USMsgBox ("Não é permitido gerar o boleto, pois a nota fiscal não foi validada."), vbExclamation, "CAPRIND v5.0"
'    Exit Sub
'End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from Empresa where Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If IsNull(TBAbrir!Registro_boleto) = True Or TBAbrir!Registro_boleto = "" Then
        USMsgBox ("Não é permitido emitir boleto, pois o mesmo não possui registro."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
End If
TBAbrir.Close

Acao = "gerar o boleto"
If Txt_ID_duplicata = 0 Then
    NomeCampo = "a duplicata na lista"
    ProcVerificaAcao
    Exit Sub
End If
If txttipocliente = "E" Then
    USMsgBox ("Só é permitido emitir boleto para cliente ou fornecedor."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

Permitido = True
Familiatext = ""
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_detalhes_recebimento where ID = " & lst_Duplicata.SelectedItem.ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If IsNull(TBAbrir!txt_Portador_Banco) = True Or TBAbrir!txt_Portador_Banco = "" Or cbo_PortBanco = "" Then
        Familiatext = "O banco"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_Agencia) = True Or TBAbrir!txt_Agencia = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A agência" Else Familiatext = "A agência"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_conta) = True Or TBAbrir!txt_conta = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A conta" Else Familiatext = "A conta"
        Permitido = False
    End If
    If IsNull(TBAbrir!txt_tipopagto) = True Or TBAbrir!txt_tipopagto = "" Then
        If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "A forma de pagamento/recebimento" Else Familiatext = "A forma de pagamento/recebimento"
        Permitido = False
    End If
End If
If cbo_PortBanco <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from tbl_Instituicoes where ID = " & cbo_PortBanco.ItemData(cbo_PortBanco.ListIndex), Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If IsNull(TBAbrir!codigo_cedente) = True Or TBAbrir!codigo_cedente = "" Then
            If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "O Código do cedente no cadastro do banco" Else Familiatext = "O Código do cedente no cadastro do banco"
            Permitido = False
        End If
        If IsNull(TBAbrir!Codigo_cedente_registrado) = True Or TBAbrir!Codigo_cedente_registrado = "" Then
            If Familiatext <> "" Then Familiatext = Familiatext & "; " & vbCrLf & "O Código do cedente reg. no cadastro do banco" Else Familiatext = "O Código do cedente reg. no cadastro do banco"
            Permitido = False
        End If
    End If
End If
If Permitido = False Then
    USMsgBox ("Exclua a(s) duplicata(s), informe os campos abaixo e clique no botão gerar duplicatas antes de " & Acao & "." & vbCrLf & Familiatext), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If Left(cmb_tipopagto, 6) <> "Boleto" And Left(cmb_tipopagto, 6) <> "BOLETO" Then
    USMsgBox ("Não é permitido gerar boleto para essa forma de pagamento/recebimento, favor alterar."), vbExclamation, "CAPRIND v5.0"
    cmb_tipopagto.SetFocus
    Exit Sub
End If

Financeiro_Contas_Receber = False
frmFaturamento_Prod_serv_boleto.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcImpostos()
On Error GoTo tratar_erro

Acao = "visualizar os impostos"
If txtId = "" Then
    If Formulario = "Estoque/Ordem de faturamento" Then NomeCampo = "a ordem de faturamento" Else NomeCampo = "a nota fiscal"
    ProcVerificaAcao
    Exit Sub
End If
Vendas_Proposta = False
Vendas_PI = False
ProcVerificaEmpresaCliente

If RegimeEmpresa = 1 Then
frmImpostosSN.Show 1
Else
FrmImpostos.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcNFe()
On Error GoTo tratar_erro

If txtNFiscal.Text = "" Then
USMsgBox "Escolha uma nota fiscal para enviar para o SEFAZ", vbCritical, "CAPRIND v5.0"
Exit Sub
End If

If txtDtValidacao.Text = "" Then
USMsgBox "Tem que validar a nota fiscal para enviar para o SEFAZ", vbCritical, "CAPRIND v5.0"
Exit Sub
End If

If Formulario = "Estoque/Ordem de faturamento" Or Faturamento_NF_Saida = False Then
    USMsgBox ("Não é permitido cadastrar dados da NFe deste módulo."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

frmFaturamento_Prod_Serv_NFe_NS.Show

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcNFSe()
On Error GoTo tratar_erro

If Formulario = "Estoque/Ordem de faturamento" Or Faturamento_NF_Saida = False Then
    USMsgBox ("Não é permitido cadastrar dados da NFSe deste módulo."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If TemInternet = True And ErroDriverMYSQL = False Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select CNPJ from Empresa where Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        FunAbreBDSite
        If ConexaoMySql.State = 1 Then
            Set TBMySQL = New ADODB.Recordset
            TBMySQL.Open "Select ID From Clientes Where CNPJ = '" & TBFIltro!CNPJ & "' and NFSe_liberado = 'NÃO'", ConexaoMySql, adOpenKeyset, adLockOptimistic, adCmdText
            If TBMySQL.EOF = False Then
                USMsgBox ("Não é permitido acessar o módulo de liberação de NFSe, pois a empresa " & txtempresa.Text & " está bloqueada."), vbExclamation, "CAPRIND v5.0"
                TBFIltro.Close
                TBMySQL.Close
                Exit Sub
            End If
            TBMySQL.Close
        End If
    End If
    TBFIltro.Close
ElseIf TemInternet = True Then
    USMsgBox ("Não é permitido abrir este módulo, pois no momento estamos sem conexão com nosso servidor, favor tentar mais tarde."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

frmFaturamento_Prod_Serv_NFSe.Show

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcPlanoContas()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
If lst_Duplicata.SelectedItem.ListSubItems(4) = "NÃO" Then
    USMsgBox ("Envie as duplicata(s) para o financeiro antes de verificar as contas contábeis."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
frmFaturamento_Prod_Serv_FamiliasDuplicata.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCorrigeNota_fiscal()
On Error GoTo tratar_erro

Contador = 0
Do While TBAbrir.EOF = False
    If TBAbrir!Nota_fiscal <> "" Then TBAbrir!Nota_fiscal = FunTamanhoTextoZeroEsq(ReturnNumbersOnly(TBAbrir!Nota_fiscal), 9)
    TBAbrir.Update
    TBAbrir.MoveNext
    Contador = Contador + 1
Loop

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_filtrar_prod_serv1_Click()
On Error GoTo tratar_erro

    Permitido1 = False
    ProcLimpaCamposServicos1
    ProcCarregaDadosServico

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_localizar_CFOP_serv_Click()
On Error GoTo tratar_erro

Clientes = False
Vendas_Proposta = False
Vendas_PI = False
Faturamento = True
Compras_Pedido = False
Sit_REG = 3
frm_ListaNatureza.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_localizar_CFOP_prod_Click()
On Error GoTo tratar_erro

Clientes = False
Vendas_Proposta = False
Vendas_PI = False
Faturamento = True
Compras_Pedido = False
Sit_REG = 2
frm_ListaNatureza.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_localizar_tipo_dcto_Click()
On Error GoTo tratar_erro

Financeiro_Contas_Pagar = False
Financeiro_Contas_Receber = False
Clientes = False
Compras_Fornecedores = False
frmContas_Tipo_Dcto.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_salvar_ICMS_SN_Click()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

valor = IIf(txtICMSSN = "", 0, txtICMSSN)
NovoValor = Replace(valor, ",", ".")
Conexao.Execute "Update tbl_Detalhes_Nota Set ICMS_SN = " & NovoValor & " where ID_nota = " & txtId

valor = IIf(txtVLRMPA = "", 0, txtVLRMPA)
Valor1 = IIf(txtVLRMOA = "", 0, txtVLRMOA)
NovoValor = Replace(valor, ",", ".")
NovoValor1 = Replace(Valor1, ",", ".")
Conexao.Execute "Update tbl_Totais_Nota Set VLRMPA = " & NovoValor & ", VLRMOA = " & NovoValor1 & " where ID_nota = " & txtId

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFP.Int_codigo, NFP.Tem_IPI_frete, NFP.ID_CF, NFP.ID_CFOP, NFP.dbl_ValorTotal, NFP.Valor_desconto, NFP.Valor_frete, NFP.int_ICMS, NFP.ICMS_SN, NFP.dbl_ValorIPI, NFP.NaoArredondar, NFP.txt_CST, NFP.CST_IPI, NFP.CST_PIS, NFP.CST_Cofins, NFP.dbl_ValorUnitario, NFP.int_Qtd, NFP.Valor_seguro, NFP.Valor_acessorias, NFP.VlrMPA, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & txtId.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        ProcRecalculaICMS
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close

USMsgBox ("Alteração efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
'==================================
Modulo = Formulario
Evento = "Salvar vlr. MP, MO aplicada e  vlr. do crédito de ICMS SN"
ID_documento = txtId
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
ProcVerificaTipoNF False
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaLista
If NF_alterada = True Then ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmd_salvar_totais_Click()
On Error GoTo tratar_erro

ProcAlterar

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub



Private Sub cmdDataemi_Click()
On Error GoTo tratar_erro

Faturamento = True
Compras_Pedido = False
Compras_Requisicao = False
Compras_Fallow_up = False
Vendas_Carteira = False
Vendas_Proposta = False
Vendas_PI = False
Manutencao = False
Compras_Cotacao = False
Usuarios = False
Inspecao_recebimento = False
Funcionario = False
RNC = False
SolicitacaoAcao = False
Troca_Duplicata = False
Financeiro_Contas_Recebidas = False
Engenharia_Normas = False
Qualidade_PPAP_PSW = False
Qualidade_PPAP_Plano = False
Qualidade_PPAP_FMEA = False
Qualidade_sistema = False
Engenharia = False
Compras_Fornecedores = False
Vendas_Programacao = False
Outros_solicitacaoPCP = False
Estoque_recebimento = False
Sit_Data = 3

FrmCalendario.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdDataent_Click()
On Error GoTo tratar_erro

Faturamento = True
Compras_Pedido = False
Compras_Requisicao = False
Compras_Fallow_up = False
Vendas_Carteira = False
Vendas_Proposta = False
Vendas_PI = False
Manutencao = False
Compras_Cotacao = False
Usuarios = False
Inspecao_recebimento = False
Funcionario = False
RNC = False
SolicitacaoAcao = False
Troca_Duplicata = False
Financeiro_Contas_Recebidas = False
Engenharia_Normas = False
Qualidade_PPAP_PSW = False
Qualidade_PPAP_Plano = False
Qualidade_PPAP_FMEA = False
Qualidade_sistema = False
Engenharia = False
Compras_Fornecedores = False
Vendas_Programacao = False
Outros_solicitacaoPCP = False
Estoque_recebimento = False
Sit_Data = 1
FrmCalendario.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdEspecie_Click()
On Error GoTo tratar_erro

Qualidade_Plano = False
Faturamento = True
Aplic = 1

frmPlanoinspecao_Tipodimensao.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdMarca_Click()
On Error GoTo tratar_erro

Qualidade_Plano = False
Faturamento = True
Aplic = 2
frmPlanoinspecao_Tipodimensao.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdPagAnt_Click(index As Integer)
On Error GoTo tratar_erro

If ReturnNumbersOnly(Right(lblPaginas(index).Caption, 4)) <= 1 Then Exit Sub
Select Case index
    Case 0:
        If TBLISTA_Faturamento_NF.AbsolutePage <> 2 Then
            If TBLISTA_Faturamento_NF.AbsolutePage = -3 Then
                ProcExibePagina (TBLISTA_Faturamento_NF.PageCount - 1)
            Else
                TBLISTA_Faturamento_NF.AbsolutePage = TBLISTA_Faturamento_NF.AbsolutePage - 2
                ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
            End If
        Else
            ProcExibePagina (1)
        End If
    Case 1:
        If TBLISTA_Faturamento_NF1.AbsolutePage <> 2 Then
            If TBLISTA_Faturamento_NF1.AbsolutePage = -3 Then
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.PageCount - 1)
            Else
                TBLISTA_Faturamento_NF1.AbsolutePage = TBLISTA_Faturamento_NF1.AbsolutePage - 2
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
            End If
        Else
            ProcExibePagina1 (1)
        End If
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdPagIr_Click(index As Integer)
On Error GoTo tratar_erro

If txtPagIr(index) = "" Then Exit Sub
Quant = ReturnNumbersOnly(Right(lblPaginas(index).Caption, 4))
If Quant <= 1 Or txtPagIr(index) > Quant Then Exit Sub
If txtPagIr(index).Text >= 1 And txtPagIr(index).Text <= Quant Then
    Select Case index
        Case 0:
            TBLISTA_Faturamento_NF.AbsolutePage = txtPagIr(index).Text
            ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
        Case 1:
            TBLISTA_Faturamento_NF1.AbsolutePage = txtPagIr(index).Text
            ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
        Case 2:
        
        Case 3:
        
    End Select
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdPagPrim_Click(index As Integer)
On Error GoTo tratar_erro

If ReturnNumbersOnly(Right(lblPaginas(index).Caption, 4)) <= 1 Then Exit Sub
Select Case index
    Case 0:
        TBLISTA_Faturamento_NF.AbsolutePage = 1
        ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
    Case 1:
        TBLISTA_Faturamento_NF1.AbsolutePage = 1
        ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdPagProx_Click(index As Integer)
On Error GoTo tratar_erro

If ReturnNumbersOnly(Right(lblPaginas(index).Caption, 4)) <= 1 Then Exit Sub
Select Case index
    Case 0:
        If TBLISTA_Faturamento_NF.AbsolutePage <> -3 Then
            If TBLISTA_Faturamento_NF.AbsolutePage = 1 Then
                ProcExibePagina (2)
            Else
                ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
            End If
        Else
            ProcExibePagina (TBLISTA_Faturamento_NF.PageCount)
        End If
    Case 1:
        If TBLISTA_Faturamento_NF1.AbsolutePage <> -3 Then
            If TBLISTA_Faturamento_NF1.AbsolutePage = 1 Then
                ProcExibePagina1 (2)
            Else
                ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
            End If
        Else
            ProcExibePagina1 (TBLISTA_Faturamento_NF1.PageCount)
        End If
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdPagUlt_Click(index As Integer)
On Error GoTo tratar_erro

If ReturnNumbersOnly(Right(lblPaginas(index).Caption, 4)) <= 1 Then Exit Sub
Select Case index
    Case 0:
        TBLISTA_Faturamento_NF.AbsolutePage = TBLISTA_Faturamento_NF.PageCount
        ProcExibePagina (TBLISTA_Faturamento_NF.AbsolutePage)
    Case 1:
        TBLISTA_Faturamento_NF1.AbsolutePage = TBLISTA_Faturamento_NF1.PageCount
        ProcExibePagina1 (TBLISTA_Faturamento_NF1.AbsolutePage)
    Case 2:
    
    Case 3:
    
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcVerificaStatusSEFAZ()
On Error GoTo tratar_erro
Dim iret As Long
Dim CnpjNF As String
Dim StatusWS As String

nsUF = FunVerifUFEmpresa(str(txtIDEmpresa.Text))

'If Usmsgbox("Deseja realmente consultar o status da SEFAZ?", vbYesNo, "CAPRIND 5.0") = vbNo Then Exit Sub

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from empresa where codigo = '" & IDempresa & "'", Conexao, adOpenKeyset, adLockReadOnly
If TBAbrir.EOF = False Then
CnpjNF = ReturnNumbersOnly(TBAbrir!CNPJ)
End If
TBAbrir.Close

'iret = ShellExecute(Me.hWnd, vbNullString, "http://www.nfe.fazenda.gov.br/portal/disponibilidade.aspx?versao=0.00&tipoConteudo=Skeuqr8PQBY=", vbNullString, "c:\", SW_SHOWNORMAL)
StatusWS = consultarStatusWS(CnpjNF, "1", nsUF, "4.00")

StatusWS = LerDadosJSON(StatusWS, "retStatusServico", "xMotivo", "")
If StatusWS = "Servico em Operacao" Then
lblStatusSEFAZ = "EM OPERAÇÃO"
Else
lblStatusSEFAZ = "SEM CONSULTA"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub cmdProduto_Click()
On Error GoTo tratar_erro

If NFe_liberada = False Then
    Faturamento_ListaProdudos = True
    frmEstoque_Ordem_Faturamento_ListaProduto.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Command1_Click()
On Error GoTo tratar_erro

FunBuscaValorAproximadoTributos

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub Frame1_DblClick(index As Integer)
On Error GoTo tratar_erro

If index = 13 Then
    TributacaoPIS = ""
    TributacaoCofins = ""
    
    If Cmb_CST_PIS_Serv <> "" Then
        Tributacao = Right(Cmb_CST_PIS_Serv, 2)
        Select Case Tributacao
            Case "01": TributacaoPIS = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
            Case "02": TributacaoPIS = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
            Case "03": TributacaoPIS = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
            Case "04": TributacaoPIS = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
            Case "06": TributacaoPIS = "06 - Operação Tributável (alíquota zero)"
            Case "07": TributacaoPIS = "07 - Operação Isenta da Contribuição"
            Case "08": TributacaoPIS = "08 - Operação Sem Incidência da Contribuição"
            Case "09": TributacaoPIS = "09 - Operação com Suspensão da Contribuição"
            Case "49": TributacaoPIS = "49 - Outras Operações de Saída"
            Case "50": TributacaoPIS = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "51": TributacaoPIS = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "52": TributacaoPIS = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
            Case "53": TributacaoPIS = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "54": TributacaoPIS = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "55": TributacaoPIS = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "56": TributacaoPIS = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "60": TributacaoPIS = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "61": TributacaoPIS = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "62": TributacaoPIS = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
            Case "63": TributacaoPIS = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "64": TributacaoPIS = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "65": TributacaoPIS = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "66": TributacaoPIS = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "67": TributacaoPIS = "67 - Crédito Presumido - Outras Operações"
            Case "70": TributacaoPIS = "70 - Operação de Aquisição sem Direito a Crédito"
            Case "71": TributacaoPIS = "71 - Operação de Aquisição com Isenção"
            Case "72": TributacaoPIS = "72 - Operação de Aquisição com Suspensão"
            Case "73": TributacaoPIS = "73 - Operação de Aquisição a Alíquota Zero"
            Case "74": TributacaoPIS = "74 - Operação de Aquisição sem Incidência da Contribuição"
            Case "75": TributacaoPIS = "75 - Operação de Aquisição por Substituição Tributária"
            Case "98": TributacaoPIS = "98 - Outras Operações de Entrada"
            Case "99": TributacaoPIS = "99 - Outras Operações"
        End Select
    End If
    
    If Cmb_CST_Cofins_Serv <> "" Then
        Tributacao = Right(Cmb_CST_Cofins_Serv, 2)
        Select Case Tributacao
            Case "01": TributacaoCofins = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
            Case "02": TributacaoCofins = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
            Case "03": TributacaoCofins = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
            Case "04": TributacaoCofins = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
            Case "06": TributacaoCofins = "06 - Operação Tributável (alíquota zero)"
            Case "07": TributacaoCofins = "07 - Operação Isenta da Contribuição"
            Case "08": TributacaoCofins = "08 - Operação Sem Incidência da Contribuição"
            Case "09": TributacaoCofins = "09 - Operação com Suspensão da Contribuição"
            Case "49": TributacaoCofins = "49 - Outras Operações de Saída"
            Case "50": TributacaoCofins = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "51": TributacaoCofins = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "52": TributacaoCofins = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
            Case "53": TributacaoCofins = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "54": TributacaoCofins = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "55": TributacaoCofins = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "56": TributacaoCofins = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "60": TributacaoCofins = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
            Case "61": TributacaoCofins = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
            Case "62": TributacaoCofins = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
            Case "63": TributacaoCofins = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
            Case "64": TributacaoCofins = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
            Case "65": TributacaoCofins = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
            Case "66": TributacaoCofins = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
            Case "67": TributacaoCofins = "67 - Crédito Presumido - Outras Operações"
            Case "70": TributacaoCofins = "70 - Operação de Aquisição sem Direito a Crédito"
            Case "71": TributacaoCofins = "71 - Operação de Aquisição com Isenção"
            Case "72": TributacaoCofins = "72 - Operação de Aquisição com Suspensão"
            Case "73": TributacaoCofins = "73 - Operação de Aquisição a Alíquota Zero"
            Case "74": TributacaoCofins = "74 - Operação de Aquisição sem Incidência da Contribuição"
            Case "75": TributacaoCofins = "75 - Operação de Aquisição por Substituição Tributária"
            Case "98": TributacaoCofins = "98 - Outras Operações de Entrada"
            Case "99": TributacaoCofins = "99 - Outras Operações"
        End Select
    End If
    USMsgBox ("Tributação pelo PIS: " & TributacaoPIS & " " & vbCrLf & "Tributação pelo Cofins: " & TributacaoCofins), vbInformation, "CAPRIND v5.0"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub Label4_DblClick()
On Error GoTo tratar_erro

If IsNumeric(txtIDEmpresa.Text) Then
IDempresa = txtIDEmpresa.Text
Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
USMsgBox Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00"), vbInformation, "CAPRIND v5.0"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Lbl2_DblClick()
On Error GoTo tratar_erro

frmImpostosSN.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Label1_DblClick(index As Integer)
On Error GoTo tratar_erro

TributacaoICMS = ""
TributacaoIPI = ""
TributacaoPIS = ""
TributacaoCofins = ""

If txtCST_ICMS <> "" Then
    If Len(txtCST_ICMS) = 3 Then QtdeTrib = 2 Else QtdeTrib = 3
    Mercadoria = Left(txtCST_ICMS, 1)
    Tributacao = Right(txtCST_ICMS, QtdeTrib)
    Select Case Mercadoria
        Case 0: Origem = "0 - Nacional"
        Case 1: Origem = "1 - Estrangeira - Importação direta"
        Case 2: Origem = "2 - Estrangeira - Adquirida no mercado interno"
        Case 3: Origem = "3 - Nacional - Mercadoria ou bem com Conteúdo de Importação superior a 40% (quarenta por cento)"
        Case 4: Origem = "4 - Nacional - Cuja produção tenha sido feita em conformidade com os processos produtivos básicos"
        Case 5: Origem = "5 - Nacional - Mercadoria ou bem com Conteúdo de Importação inferior ou igual a 40% (quarenta por cento)"
        Case 6: Origem = "6 - Estrangeira - Importação direta, sem similar nacional, constante em lista de Resolução CAMEX"
        Case 7: Origem = "7 - Estrangeira - Adquirida no mercado interno, sem similar nacional, constante em lista de Resolução CAMEX"
        Case 8: Origem = "8 - Nacional - Mercadoria ou bem com Conteúdo de Importação superior a 70%"
    End Select
    
    Select Case Tributacao
        Case "00": TributacaoICMS = "00 - Tributada integralmente"
        Case "10": TributacaoICMS = "10 - Tributada e com cobrança do ICMS por substituição"
        Case "101": TributacaoICMS = "101 - Tributada pelo Simples Nacional com permissão de crédito"
        Case "102": TributacaoICMS = "102 - Tributada pelo Simples Nacional sem permissão de crédito"
        Case "103": TributacaoICMS = "103 - Isenção do ICMS no Simples Nacional para faixa de receita bruta"
        Case "20": TributacaoICMS = "20 - Com redução de base de cálculo"
        Case "201": TributacaoICMS = "201 - Tributada pelo Simples Nacional com permissão de crédito e com cobrança do ICMS por Substituição Tributária"
        Case "202": TributacaoICMS = "202 - Tributada pelo Simples Nacional sem permissão de crédito e com cobrança do ICMS por Substituição Tributária"
        Case "203": TributacaoICMS = "203 - Isenção do ICMS nos Simples Nacional para faixa de receita bruta e com cobrança do ICMS por Substituição Tributária"
        Case "30": TributacaoICMS = "30 - Isenta ou não tributada e com cobrança do ICMS por substituição tributária"
        Case "300": TributacaoICMS = "300 - Imune"
        Case "40": TributacaoICMS = "40 - Isenta"
        Case "400": TributacaoICMS = "400 - Não tributada pelo Simples Nacional"
        Case "41": TributacaoICMS = "41 - Não tributada"
        Case "50": TributacaoICMS = "50 - Suspensão"
        Case "500": TributacaoICMS = "500 - ICMS cobrado anteriormente por substituição tributária (substituído) ou por antecipação"
        Case "51": TributacaoICMS = "51 - Diferimento"
        Case "60": TributacaoICMS = "60 - ICMS cobrado anteriormente por substituição tributária"
        Case "70": TributacaoICMS = "70 - Com redução de base de cálculo e cobrança do ICMS por substituição tributária"
        Case "90": TributacaoICMS = "90 - Outras"
        Case "900": TributacaoICMS = "900 - Outros"
    End Select
End If

If txtCST_IPI <> "" Then
    Tributacao = Right(txtCST_IPI, 2)
    Select Case Tributacao
        Case "00": TributacaoIPI = "00 - Entrada com recuperação de crédito"
        Case "01": TributacaoIPI = "01 - Entrada tributada com alíquota zero"
        Case "02": TributacaoIPI = "02 - Entrada isenta"
        Case "03": TributacaoIPI = "03 - Entrada não-tributada"
        Case "04": TributacaoIPI = "04 - Entrada imune"
        Case "05": TributacaoIPI = "05 - Entrada com suspensão"
        Case "49": TributacaoIPI = "49 - Outras entradas"
        Case "50": TributacaoIPI = "50 - Saída tributada"
        Case "51": TributacaoIPI = "51 - Saída tributada com alíquota zero"
        Case "52": TributacaoIPI = "52 - Saída isenta"
        Case "53": TributacaoIPI = "53 - Saída não-tributada"
        Case "54": TributacaoIPI = "54 - Saída imune"
        Case "55": TributacaoIPI = "55 - Saída com suspensão"
        Case "99": TributacaoIPI = "99 - Outras saídas"
    End Select
End If

If txtCST_PIS <> "" Then
    Tributacao = Right(txtCST_PIS, 2)
    Select Case Tributacao
        Case "01": TributacaoPIS = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
        Case "02": TributacaoPIS = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
        Case "03": TributacaoPIS = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
        Case "04": TributacaoPIS = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
        Case "05": TributacaoPIS = "05 - Operação Tributável (Substituição Tributária)"
        Case "06": TributacaoPIS = "06 - Operação Tributável (alíquota zero)"
        Case "07": TributacaoPIS = "07 - Operação Isenta da Contribuição"
        Case "08": TributacaoPIS = "08 - Operação Sem Incidência da Contribuição"
        Case "09": TributacaoPIS = "09 - Operação com Suspensão da Contribuição"
        Case "49": TributacaoPIS = "49 - Outras Operações de Saída"
        Case "50": TributacaoPIS = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "51": TributacaoPIS = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "52": TributacaoPIS = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
        Case "53": TributacaoPIS = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "54": TributacaoPIS = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "55": TributacaoPIS = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "56": TributacaoPIS = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "60": TributacaoPIS = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "61": TributacaoPIS = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "62": TributacaoPIS = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
        Case "63": TributacaoPIS = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "64": TributacaoPIS = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "65": TributacaoPIS = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "66": TributacaoPIS = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "67": TributacaoPIS = "67 - Crédito Presumido - Outras Operações"
        Case "70": TributacaoPIS = "70 - Operação de Aquisição sem Direito a Crédito"
        Case "71": TributacaoPIS = "71 - Operação de Aquisição com Isenção"
        Case "72": TributacaoPIS = "72 - Operação de Aquisição com Suspensão"
        Case "73": TributacaoPIS = "73 - Operação de Aquisição a Alíquota Zero"
        Case "74": TributacaoPIS = "74 - Operação de Aquisição sem Incidência da Contribuição"
        Case "75": TributacaoPIS = "75 - Operação de Aquisição por Substituição Tributária"
        Case "98": TributacaoPIS = "98 - Outras Operações de Entrada"
        Case "99": TributacaoPIS = "99 - Outras Operações"
    End Select
End If

If txtCST_Cofins <> "" Then
    Tributacao = Right(txtCST_Cofins, 2)
    Select Case Tributacao
        Case "01": TributacaoCofins = "01 - Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))"
        Case "02": TributacaoCofins = "02 - Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))"
        Case "03": TributacaoCofins = "03 - Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)"
        Case "04": TributacaoCofins = "04 - Operação Tributável (tributação monofásica (alíquota zero))"
        Case "05": TributacaoCofins = "05 - Operação Tributável (Substituição Tributária)"
        Case "06": TributacaoCofins = "06 - Operação Tributável (alíquota zero)"
        Case "07": TributacaoCofins = "07 - Operação Isenta da Contribuição"
        Case "08": TributacaoCofins = "08 - Operação Sem Incidência da Contribuição"
        Case "09": TributacaoCofins = "09 - Operação com Suspensão da Contribuição"
        Case "49": TributacaoCofins = "49 - Outras Operações de Saída"
        Case "50": TributacaoCofins = "50 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "51": TributacaoCofins = "51 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "52": TributacaoCofins = "52 - Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação"
        Case "53": TributacaoCofins = "53 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "54": TributacaoCofins = "54 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "55": TributacaoCofins = "55 - Operação com Direito a Crédito - Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "56": TributacaoCofins = "56 - Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "60": TributacaoCofins = "60 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno"
        Case "61": TributacaoCofins = "61 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno"
        Case "62": TributacaoCofins = "62 - Crédito Presumido - Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação"
        Case "63": TributacaoCofins = "63 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno"
        Case "64": TributacaoCofins = "64 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação"
        Case "65": TributacaoCofins = "65 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação"
        Case "66": TributacaoCofins = "66 - Crédito Presumido - Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação"
        Case "67": TributacaoCofins = "67 - Crédito Presumido - Outras Operações"
        Case "70": TributacaoCofins = "70 - Operação de Aquisição sem Direito a Crédito"
        Case "71": TributacaoCofins = "71 - Operação de Aquisição com Isenção"
        Case "72": TributacaoCofins = "72 - Operação de Aquisição com Suspensão"
        Case "73": TributacaoCofins = "73 - Operação de Aquisição a Alíquota Zero"
        Case "74": TributacaoCofins = "74 - Operação de Aquisição sem Incidência da Contribuição"
        Case "75": TributacaoCofins = "75 - Operação de Aquisição por Substituição Tributária"
        Case "98": TributacaoCofins = "98 - Outras Operações de Entrada"
        Case "99": TributacaoCofins = "99 - Outras Operações"
    End Select
End If
USMsgBox ("Origem da mercadoria do ICMS: " & Origem & vbCrLf & "Tributação pelo ICMS: " & TributacaoICMS & " " & vbCrLf & "Tributação pelo IPI: " & TributacaoIPI & " " & vbCrLf & "Tributação pelo PIS: " & TributacaoPIS & " " & vbCrLf & "Tributação pelo Cofins: " & TributacaoCofins), vbInformation, "CAPRIND v5.0"

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Lista_carteira_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

Permitido1 = False
If ColumnHeader = "" Then
    With Lista_carteira
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
                Permitido1 = False
            Else
                Permitido1 = True
                
                If Tipo_Produto = True Then Familiatext = "produto" Else Familiatext = "serviço"
                If IDclienteNF = 0 Then
                    IDclienteNF = .ListItems.Item(InitFor).SubItems(10)
                    ClienteNF = .ListItems.Item(InitFor).SubItems(11)
                End If
                If IDclienteNF <> .ListItems.Item(InitFor).SubItems(10) Then GoTo Proximo
                If MoedaNF = "" Then MoedaNF = .ListItems.Item(InitFor).SubItems(22)
                If MoedaNF <> .ListItems.Item(InitFor).SubItems(22) Then GoTo Proximo
                If MoedaNF <> "REAL" Then
                    OutraMoeda = True
                    Moeda = MoedaNF
                End If
                If Faturamento_Vendas_PI = True Then
                    If FunVerifDadosPedido(.ListItems.Item(InitFor).SubItems(1), Familiatext, False) = False Then GoTo Proximo
                End If
                
                .ListItems.Item(InitFor).Checked = True
            End If
Proximo:
        Next InitFor
    End With
Else
    ProcOrdenaListView Lista_carteira, ColumnHeader
End If
If Permitido1 = False Then
    IDclienteNF = 0
    MoedaNF = ""
    OutraMoeda = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunVerifDadosPedido(Cotacao As Long, NomeCampo As String, TemMsg As Boolean) As Boolean
On Error GoTo tratar_erro

FunVerifDadosPedido = True
Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from vendas_proposta where cotacao = " & Cotacao, Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    If IsNull(TBProposta!Tipo_cliente) = True Then
        If TemMsg = True Then USMsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não consta o tipo do cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation, "CAPRIND v5.0"
        FunVerifDadosPedido = False
        Exit Function
    End If
    If IsNull(TBProposta!UF) = True Then
        If TemMsg = True Then USMsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não consta a UF do cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation, "CAPRIND v5.0"
        FunVerifDadosPedido = False
        Exit Function
    End If
    Set TBClientes = CreateObject("adodb.recordset")
    TBClientes.Open "Select * from clientes where idcliente = " & TBProposta!IDCliente, Conexao, adOpenKeyset, adLockOptimistic
    If TBClientes.EOF = True Then
        If TemMsg = True Then USMsgBox ("Não é permitido selecionar este " & NomeCampo & ", pois não está cadastrado o cliente no pedido " & TBProposta!Ncotacao & " - rev. " & TBProposta!Revisao & "."), vbExclamation, "CAPRIND v5.0"
        FunVerifDadosPedido = False
        Exit Function
    End If
    TBClientes.Close
End If
TBProposta.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Private Sub Lista_carteira_faturar_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView Lista_carteira_faturar, ColumnHeader

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Lista_carteira_faturar_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If Lista_carteira_faturar.ListItems.Count = 0 Then Exit Sub
ProcLimpaCamposNota
txtId.Text = Lista_carteira_faturar.SelectedItem
ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.dt_Saida_Entrada, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao, NF.RPS"
Strsql_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId
Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId & " and NF.Int_status = 1"
Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId & " and NF.Int_status = 2"
Strsql_FaturamentoNFe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF <> 'SA' AND NF.ID = " & txtId
Strsql_FaturamentoNFSe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF = 'SA' AND NF.ID = " & txtId
ProcCarregaListaNota (1)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Lista_carteira_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

Permitido1 = False
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
            If Faturamento_Vendas_PI = True Then
                If Opt_produto_filtrar = True Then Familiatext = "produto" Else Familiatext = "serviço"
                TextoCliForn = "cliente"
            Else
                Familiatext = "produto"
                TextoCliForn = "fornecedor"
            End If
            Permitido1 = True
            If IDclienteNF = 0 Then
                IDclienteNF = .ListItems.Item(InitFor).SubItems(10)
                ClienteNF = .ListItems.Item(InitFor).SubItems(11)
            End If
            If IDclienteNF <> .ListItems.Item(InitFor).SubItems(10) Then
                USMsgBox ("Só é permitido selecionar " & Familiatext & " do " & TextoCliForn & " " & IDclienteNF & " - " & ClienteNF & "."), vbExclamation, "CAPRIND v5.0"
                .ListItems.Item(InitFor).Checked = False
                Exit Sub
            End If
            If MoedaNF = "" Then MoedaNF = .ListItems.Item(InitFor).SubItems(22)
            If MoedaNF <> .ListItems.Item(InitFor).SubItems(22) Then
                USMsgBox ("Só é permitido selecionar " & Familiatext & " de pedido com a moeda " & MoedaNF & "."), vbExclamation, "CAPRIND v5.0"
                .ListItems.Item(InitFor).Checked = False
                Exit Sub
            End If
            If MoedaNF <> "REAL" Then
                OutraMoeda = True
                Moeda = MoedaNF
            End If
'            If Faturamento_Vendas_PI = True Then
'                If FunVerifDadosPedido(.ListItems.Item(InitFor).SubItems(1), Familiatext, True) = False Then .ListItems.Item(InitFor).Checked = False
'            End If
        End If
    Next InitFor
End With
If Permitido1 = False Then
    IDclienteNF = 0
    ClienteNF = ""
    MoedaNF = ""
    OutraMoeda = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ListaNota_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
            If Cmb_opcao_lista = "Excluir" Then
                If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
                If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & .ListItems(InitFor), "a mesma", Familiatext, "excluir esta", False, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    'Status da NF
                    If TBVendas!Int_status = 1 Then NF_cancelada = False Else opt_Cancelada.Value = True
                    'NF impressa
                    If TBVendas!Imprimir = True Then NF_enviada = True Else NF_enviada = False
                    
                    'NFe liberada
                    NFe_liberada = False
                    If TBVendas!Aplicacao = "P" Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If TBAbrir!status = 101 Or TBAbrir!status = 100 Then NFe_liberada = True
                        End If
                        TBAbrir.Close
                    End If
                    
                    'NF alterada (totalização)
                    If TBVendas!Alterar = True Then NF_alterada = True Else NF_alterada = False
                                
                    FunVerifAlteracaoNF .ListItems(InitFor), True, IIf(.ListItems(InitFor).ListSubItems(4) = "Serviço(s)", True, False)
                    If Permitido1 = False Then
                        'USMsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
                        '.ListItems.Item(InitFor).Checked = False
                        'Exit Sub
                    End If
                End If
                TBVendas.Close
                
                Mensagem = "Não é permitido excluir esta nota, pois a mesma está sendo utilizada no módulo"
                If Opt_saida.Value = True Then
                    ProcVerificaRegistroUtilizado "tbl_contas_receber", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'", "Financeiro/Contas a receber"
                Else
                    ProcVerificaRegistroUtilizado "tbl_ContasPagar", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'", "Financeiro/Contas a pagar"
                End If
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                ProcVerificaRegistroUtilizado "Faturamento_Relacionamento", "Id_nota = " & .ListItems(InitFor) & " or ID_nota_relacionada = " & .ListItems(InitFor), "Relacionamento de notas fiscais"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                If Formulario = "Faturamento/Nota fiscal/Própria" And .ListItems(InitFor).ListSubItems(3) = "" Then
                    USMsgBox ("Não é permitido excluir ordem de faturamento por este módulo."), vbExclamation, "CAPRIND v5.0"
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
            ElseIf Cmb_opcao_lista = "Validação" Then
                If Formulario = "Estoque/Ordem de faturamento" Then
                    If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                        Set TBVendas = CreateObject("adodb.recordset")
                        TBVendas.Open "Select ID From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                        If TBVendas.EOF = False Then
                            USMsgBox ("Não é permitido cancelar a validação desta ordem de faturamento, pois a mesma já é uma nota fiscal."), vbExclamation, "CAPRIND v5.0"
                            .ListItems.Item(InitFor).Checked = False
                            TBVendas.Close
                            Exit Sub
                        End If
                        TBVendas.Close
                    Else
                    End If
                Else
                    If .ListItems(InitFor).ListSubItems(3) <> "" Then
                        'NFe liberada
                        Set TBVendas = CreateObject("adodb.recordset")
                        TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBVendas.EOF = False Then
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If TBAbrir!status = 100 Or TBAbrir!status = 101 Then
                                
                                    USMsgBox ("Não é permitido alterar a validação desta nota fiscal, pois a mesma já foi enviada."), vbExclamation, "CAPRIND v5.0"
                                    .ListItems.Item(InitFor).Checked = False
                                    Exit Sub
                                End If
                            End If
                            TBAbrir.Close
                        End If
                        TBVendas.Close
                        
                        If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                            'Verifica se no cadastro da empresa é permitido fazer movimentação do estoque automaticamente se não ele bloqueia a validação
                            Set TBCodigoDesc = CreateObject("adodb.recordset")
                            TBCodigoDesc.Open "Select Codigo from Empresa where Codigo = " & IDempresa & " and Baixa_Auto_Estoque_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                            If TBCodigoDesc.EOF = True Then
                                'Verifica se existe movimentação de estoque
                                Set TBEstoque = CreateObject("adodb.recordset")
                                TBEstoque.Open "Select NF.ID from (tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NF.ID = NFP.ID_nota) INNER JOIN Estoque_movimentacao EM ON EM.ID_prod_NF = NFP.Int_codigo where NF.ID = " & .ListItems(InitFor) & " and NF.Aplicacao = 'P' and EM.Documento = '" & .ListItems(InitFor).ListSubItems(3) & "' and (EM.Operacao = 'SAIDA_NOTA' or EM.Operacao = 'SAIDA_NOTA_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
                                If TBEstoque.EOF = False Then
                                    TBEstoque.Close
                                    USMsgBox ("Não é permitido cancelar a validação desta nota, pois a mesma está sendo utilizada no módulo Estoque/Movimentação."), vbExclamation, "CAPRIND v5.0"
                                    .ListItems.Item(InitFor).Checked = False
                                    Exit Sub
                                End If
                                TBEstoque.Close
                            End If
                            TBCodigoDesc.Close
                            
                            If VerificaContaBaixada(.ListItems(InitFor), "cancelar a validação", True) = True Then
                                .ListItems.Item(InitFor).Checked = False
                                Exit Sub
                            End If
                        Else
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select NF.ID_empresa, NF.dt_Saida_Entrada, NF.Modelo, NF.TabelaSN, NF.Aplicacao, E.Simples, E.Simples1 From tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON E.Codigo = NF.ID_empresa where NF.id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If TBAbrir!Aplicacao = "P" Then
                                    If TBAbrir!Simples = True And (IsNull(TBAbrir!TabelaSN) = True Or TBAbrir!TabelaSN = 0) Then
                                        USMsgBox ("Não é permitido validar esta nota, pois não foi informado a tabela do simples nacional."), vbExclamation, "CAPRIND v5.0"
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    End If
                                Else
                                    If IsNull(TBAbrir!dt_Saida_Entrada) = True Or TBAbrir!dt_Saida_Entrada = "" Then
                                        USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Data."), vbExclamation, "CAPRIND v5.0"
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    End If
                                    Set TBVendas = CreateObject("adodb.recordset")
                                    TBVendas.Open "Select Forma_pagamento, Finalidade_emissao, Chave_acesso From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBVendas.EOF = True Then
                                        USMsgBox ("Não é permitido validar esta nota, pois não foram informados os campos Finalidade de emissão e Chave de acesso da NFe."), vbExclamation, "CAPRIND v5.0"
                                        .ListItems.Item(InitFor).Checked = False
                                        Exit Sub
                                    Else
                                        If IsNull(TBVendas!Finalidade_emissao) = True Or TBVendas!Finalidade_emissao = "" Then
                                            USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Finalidade de emissão."), vbExclamation, "CAPRIND v5.0"
                                            .ListItems.Item(InitFor).Checked = False
                                            Exit Sub
                                        End If
'                                        If (Left(TBAbrir!Modelo, 2) = "55" Or Left(TBAbrir!Modelo, 2) = "57") And (IsNull(TBVendas!Chave_acesso) = True Or TBVendas!Chave_acesso = "") Then
'                                            USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Chave de acesso da NFe."), vbExclamation, "CAPRIND v5.0"
'                                            .ListItems.Item(InitFor).Checked = False
'                                            Exit Sub
'                                        End If
                                    End If
                                End If
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select ID_CFOP, Tipo, ID_CF, txt_CST, CST_IPI, CST_PIS, CST_Cofins, N_Referencia, dbl_ValorUnitario From tbl_Detalhes_Nota where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    Do While TBVendas.EOF = False
                                        If IsNull(TBVendas!ID_CFOP) = True Or TBVendas!ID_CFOP = "" Or TBVendas!ID_CFOP = "0" Then
                                            USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CFOP em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                            .ListItems.Item(InitFor).Checked = False
                                            Exit Sub
                                        End If
                                        If TBVendas!Tipo = "P" Then
                                            If IsNull(TBVendas!ID_CF) = True Or TBVendas!ID_CF = "" Or TBVendas!ID_CF = "0" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo NCM em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!txt_CST) = True Or TBVendas!txt_CST = "" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de ICMS em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_IPI) = True Or TBVendas!CST_IPI = "" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de IPI em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_PIS) = True Or TBVendas!CST_PIS = "" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de PIS em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                            If IsNull(TBVendas!CST_Cofins) = True Or TBVendas!CST_Cofins = "" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo CST de Cofins em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                        End If
'                                        Set TBFI = CreateObject("adodb.recordset")
'                                        TBFI.Open "Select ID From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor) & " and (Finalidade_emissao = 1 or Finalidade_emissao = 4)", Conexao, adOpenKeyset, adLockOptimistic
'                                        If TBFI.EOF = False Then
'                                            If TBVendas!Tipo = "P" And TBVendas!dbl_ValorUnitario = 0 Then
'                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo valor unitário todos os produtos."), vbExclamation, "CAPRIND v5.0"
'                                                .ListItems.Item(InitFor).Checked = False
'                                                TBFI.Close
'                                                Exit Sub
'                                            End If
'                                        End If
'                                        TBFI.Close
                                        
                                        If FunVerifCodRefFornSPED(TBAbrir!ID_empresa) = True Then
                                            If IsNull(TBVendas!N_referencia) = True Or TBVendas!N_referencia = "" Then
                                                USMsgBox ("Não é permitido validar esta nota, pois não foi informado o campo Código de referência em todos os produtos/serviços."), vbExclamation, "CAPRIND v5.0"
                                                .ListItems.Item(InitFor).Checked = False
                                                Exit Sub
                                            End If
                                        End If
                                        TBVendas.MoveNext
                                    Loop
                                End If
                                TBVendas.Close
                            End If
                            TBAbrir.Close
                            
                        End If
                    End If
                    
                    'Não deixar validar se tiver transportadora sem frete
'                    Set TBVendas = CreateObject("adodb.recordset")
'                    TBVendas.Open "Select * From tbl_dados_transp where id_nota = " & .ListItems(InitFor) & " and txt_Frete_Conta IS NULL", Conexao, adOpenKeyset, adLockOptimistic
'                    If TBVendas.EOF = False Then
'                        USMsgBox ("Não é permitido validar esta nota fiscal, pois a transportadora esta sem o tipo de frete."), vbExclamation, "CAPRIND v5.0"
'                        .ListItems.Item(InitFor).Checked = False
'                        Exit Sub
'                    End If
'                    TBVendas.Close
                End If
            End If
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub listaProdutos_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With ListaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And .ListItems.Item(InitFor) = Item Then
        
            If Cmb_opcao_lista_Produtos = "Excluir" Then
                If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
                If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtId, Familiatext, "produto", "excluir este", False, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Mensagem = "Não é permitido excluir este produto, pois o mesmo está sendo utilizado no módulo"
                ProcVerificaRegistroUtilizado "Faturamento_Relacionamento", "(Id_produto = " & .ListItems(InitFor) & " or ID_produto_relacionada = " & .ListItems(InitFor) & ")", "Faturamento/Nota fiscal/Relacionamento de nota fiscal"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                ProcVerificaRegistroUtilizado "tbl_Detalhes_Nota_NFe", "ID_item = " & .ListItems(InitFor), "Faturamento/Nota fiscal/Importação"
                If Permitido = False Then
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select * From tbl_ContasPagar where ID_nota = " & txtId & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    USMsgBox ("Não é permitido excluir este produto, pois já existe(m) despesa(s) de importação cadastrada(s) para esta nota."), vbExclamation, "CAPRIND v5.0"
                    .ListItems.Item(InitFor).Checked = False
                    Exit Sub
                End If
                TBAbrir.Close
                ProcVerificaRegistroUtilizado "Estoque_movimentacao", "ID_prod_NF = " & .ListItems(InitFor), "Estoque/Movimentação"
                If Permitido = False Then .ListItems.Item(InitFor).Checked = False
            ElseIf Cmb_opcao_lista_Produtos = "Empenhar" Then
                    If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                        USMsgBox ("Não é permitido empenhar, pois este produto já foi empenhado."), vbExclamation, "CAPRIND v5.0"
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                        
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select ID_carteira from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = True Then
                        USMsgBox ("Não é permitido empenhar, pois este produto não possui pedido inteno."), vbExclamation, "CAPRIND v5.0"
                        .ListItems.Item(InitFor).Checked = False
                        TBCarteira.Close
                        Exit Sub
                    End If
                    TBCarteira.Close
                        
                    EstoqueAtual = FunVerificaQtdeEstoque(.ListItems(InitFor).ListSubItems(1), IDempresa, "")
                    'Verifica empenho de vendas
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Qtde_requisitar from Qtde_empenhada_produto_venda where Desenho = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_requisitar), 0, TBFI!Qtde_requisitar)
                    'Verifica empenho na produção
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Qtde_empenhar from Qtde_empenhada_produto where Codigo = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_empenhar), 0, TBFI!Qtde_empenhar)
                    TBFI.Close
                    If EstoqueAtual = 0 Then
                        USMsgBox ("Não é permitido empenhar, pois não existe este produto em estoque."), vbExclamation, "CAPRIND v5.0"
                        .ListItems.Item(InitFor).Checked = False
                    End If
                Else
                    If .ListItems(InitFor).ListSubItems(10) = "Não" Then
                        USMsgBox ("Não é permitido cancelar o empenho, pois este produto não foi empenhado."), vbExclamation, "CAPRIND v5.0"
                        .ListItems.Item(InitFor).Checked = False
                        Exit Sub
                    End If
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = True Then
                        USMsgBox ("Não é permitido cancelar o empenho, pois o mesmo não foi gerado por esta ordem de faturamento."), vbExclamation, "CAPRIND v5.0"
                        .ListItems.Item(InitFor).Checked = False
                    End If
                    TBCarteira.Close
            End If
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Listaservicos_ItemCheck(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

With Listaservicos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
            If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtId, Familiatext, "serviço", "excluir este", False, True) = False Then .ListItems.Item(InitFor).Checked = False
        End If
    Next InitFor
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub lst_Duplicata_DblClick()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub


Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.SelectedItem.ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
With frmFaturamento_Prod_Serv_Vencimento

    .Txt_ID_duplicata = TBLISTA!ID
    .txtVencimentoAntigo.Text = Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
    .txtValorDuplicata = Format(TBLISTA!dbl_Valor, "###,##0.00")
    .txt_Duplicata.Text = TBLISTA!txt_Parcela
    .txt_Vencimento.Value = Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
    If TBLISTA!txt_tipopagto <> "" Then
    .cmb_tipopagto = TBLISTA!txt_tipopagto
    End If
    
    If TBLISTA!Tipo_doc <> "" Then
    .cmbtipo_conta = TBLISTA!Tipo_doc
    End If
    
TBLISTA.Close
    frmFaturamento_Prod_Serv_Vencimento.Show 1
End With

End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"

End Sub

Private Sub msk_data_CallbackKeyDown(index As Integer, ByVal KeyCode As Integer, ByVal Shift As Integer, ByVal CallbackField As String, CallbackDate As Date)
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Opt_entrada_Click()
On Error GoTo tratar_erro

ProcCarregaOpcaoListaProd

If Opt_saida.Value = True Then
lbldtEntSaid(44).Caption = "Data Saida"
lblhrEntsaid(21).Caption = "Hora saida"
Else
lbldtEntSaid(44).Caption = "Data Entrada"
lblhrEntsaid(21).Caption = "Hora Entrada"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Opt_filtrar_ped_compra_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
ProcCorrigeFormPedIntCompra

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Opt_filtrar_ped_int_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
ProcCorrigeFormPedIntCompra

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCorrigeFormPedIntCompra()
On Error GoTo tratar_erro

If Faturamento_PI = True Then
'    Frame1(22).Visible = True
    'Chk_tem_estoque.Visible = True
Else
 '   Frame1(22).Visible = False
    'Chk_tem_estoque.Visible = False
End If


'With Lista_carteira
'    If Faturamento_PI = True Then
'        .ColumnHeaders(13).Text = "Ped. int."
'        .ColumnHeaders(18).Text = "Cliente"
'        .ColumnHeaders(24).Text = "Qtde. vend."
''        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PI", 30, False, 0, 0, 1800, 1000, 500, 1000, 2200, 750, 900, 800, 850, 1000, 850, 525, 1100, 530, 550, 2800, 550, 650, 650, 1200, 2200, 1000, 1000, 1100, 900, 900, 900, 3000, 0
'    Else
'        .ColumnHeaders(13).Text = "Ped. compra"
'        .ColumnHeaders(18).Text = "Fornecedor"
'        .ColumnHeaders(24).Text = "Qtde. comp."
'        ProcCorrigeColunasForm Lista_carteira, "Estoque/Ordem de faturamento - Carteira de fat. - PC", 30, False, 300, 0, 1800, 1000, 0, 1000, 2200, 750, 0, 0, 850, 1000, 1000, 0, 0, 0, 550, 2800, 550, 0, 0, 1200, 2200, 1000, 0, 1100, 900, 0, 0, 3000, 0
'    End If
'End With
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub opt_Saida_Click()
On Error GoTo tratar_erro

ProcCarregaOpcaoListaProd

If Opt_saida.Value = True Then
lbldtEntSaid(44).Caption = "Data Saida"
lblhrEntsaid(21).Caption = "Hora saida"
Else
lbldtEntSaid(44).Caption = "Data Entrada"
lblhrEntsaid(21).Caption = "Hora Entrada"
End If


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaOpcaoListaProd()
On Error GoTo tratar_erro

With Cmb_opcao_lista_Produtos
    .Clear
    If Opt_saida.Value = True Then
        USToolBar6.ButtonState(10) = 5
        ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'R'"
        .AddItem "Excluir"
        
        If Formulario = "Estoque/Ordem de faturamento" Then
            .AddItem "Empenhar"
            .AddItem "Cancelar empenho"
        End If
    Else
        USToolBar6.ButtonState(10) = 0
        ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'P'"
        .AddItem "Excluir"
    End If
    .Text = "Excluir"
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Opt_servico_filtrar_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub OptAteomes_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub OptDomes_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Optfim_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub optIgual_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Optinicio_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Optmeio_Click()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear
Lista_carteira_faturar.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub optProduto_Click()
On Error GoTo tratar_erro

ProcVerificaTipoNF True

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub OptServico_Click()
On Error GoTo tratar_erro

ProcVerificaTipoNF True

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub TabFiltro_Click()
On Error GoTo tratar_erro

ProcFiltrarMes

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCarregaListaNota(Pagina As Integer)
On Error GoTo tratar_erro

lblRegistros(1).Caption = "Nº de registros: 0"
lblPaginas(1).Caption = "Página: 0 de: 0"
Valor1 = 0
Valor2 = 0
Valor3 = 0
NF = 0
ListaNota.ListItems.Clear
If Strsql_Faturamento = "" Then Exit Sub
'Debug.print Strsql_Faturamento
Set TBLISTA_Faturamento_NF1 = CreateObject("adodb.recordset")
TBLISTA_Faturamento_NF1.Open Strsql_Faturamento, Conexao, adOpenKeyset, adLockReadOnly
If TBLISTA_Faturamento_NF1.EOF = False Then ProcExibePagina1 (Pagina)
ProcCarregaTotal

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExibePagina1(Pagina)
On Error GoTo tratar_erro

ListaNota.ListItems.Clear
TBLISTA_Faturamento_NF1.PageSize = IIf(txtNreg(1) = "", 30, txtNreg(1))
TBLISTA_Faturamento_NF1.AbsolutePage = Pagina
TamanhoPagina = TBLISTA_Faturamento_NF1.PageSize
ContadorReg = 1

Contador = 0
Do While TBLISTA_Faturamento_NF1.EOF = False And (ContadorReg <= TamanhoPagina)
    With ListaNota.ListItems
        .Add , , TBLISTA_Faturamento_NF1!ID
        .Item(.Count).SubItems(1) = IIf(IsNull(TBLISTA_Faturamento_NF1!dt_DataEmissao), "", (Format(TBLISTA_Faturamento_NF1!dt_DataEmissao, "dd/mm/yy")))
        .Item(.Count).SubItems(2) = TBLISTA_Faturamento_NF1!ID
        .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF1!int_NotaFiscal), "", TBLISTA_Faturamento_NF1!int_NotaFiscal)
        If IsNull(TBLISTA_Faturamento_NF1!TipoNF) = False Then
            If TBLISTA_Faturamento_NF1!TipoNF = "M1" Then TipoNF2 = "Produto(s)"
            If TBLISTA_Faturamento_NF1!TipoNF = "SA" Then TipoNF2 = "Serviço(s)"
            If TBLISTA_Faturamento_NF1!TipoNF = "M1SA" Then TipoNF2 = "Prod./Serv."
        End If
        .Item(.Count).SubItems(4) = TipoNF2
        .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF1!Serie), "", TBLISTA_Faturamento_NF1!Serie)
        .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF1!dbl_Valor_Total_Nota), "0,00", Format(TBLISTA_Faturamento_NF1!dbl_Valor_Total_Nota, "###,##0.00"))
        .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF1!txt_Razao_Nome), "", TBLISTA_Faturamento_NF1!txt_Razao_Nome)
        .Item(.Count).SubItems(8) = IIf(TBLISTA_Faturamento_NF1!Int_status = 1, "Ativa", "Cancelada")
        .Item(.Count).SubItems(9) = IIf(TBLISTA_Faturamento_NF1!Imprimir = True, "Sim", "Não")
        If Formulario = "Estoque/Ordem de faturamento" Then
            .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF1!DtValidacaoOF) = False, "Sim", "Não")
        Else
            .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF1!DtValidacao) = False, "Sim", "Não")
        End If
        .Item(.Count).SubItems(11) = FunVerifStatusNFe(TBLISTA_Faturamento_NF1!ID)
        .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF1!ID_empresa), 0, TBLISTA_Faturamento_NF1!ID_empresa)
    End With
    
    TBLISTA_Faturamento_NF1.MoveNext
    ContadorReg = ContadorReg + 1
    Contador = Contador + 1
Loop
lblRegistros(1).Caption = "Nº de registros: " & TBLISTA_Faturamento_NF1.RecordCount
If TBLISTA_Faturamento_NF1.AbsolutePage = adPosBOF Then
   lblPaginas(1).Caption = "Página: 1 de: " & TBLISTA_Faturamento_NF1.PageCount
ElseIf TBLISTA_Faturamento_NF1.AbsolutePage = adPosEOF Then
        lblPaginas(1).Caption = "Página: " & TBLISTA_Faturamento_NF1.PageCount & " de: " & TBLISTA_Faturamento_NF1.PageCount
    Else
        lblPaginas(1).Caption = "Página: " & TBLISTA_Faturamento_NF1.AbsolutePage - 1 & " de: " & TBLISTA_Faturamento_NF1.PageCount
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTotal()
On Error GoTo tratar_erro

'Total faturado e total a receber/pagar
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open Strsql_FaturamentoTotal, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Valor1 = IIf(IsNull(TBLISTA!Valor1), 0, TBLISTA!Valor1)
    Valor2 = IIf(IsNull(TBLISTA!Valor2), 0, TBLISTA!Valor2)
End If
'Total de notas canceladas
Set TBLISTA = CreateObject("adodb.recordset")
'Debug.print Strsql_FaturamentoTotalCanc

TBLISTA.Open Strsql_FaturamentoTotalCanc, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Valor3 = IIf(IsNull(TBLISTA!Valor3), 0, TBLISTA!Valor3)
End If
TBLISTA.Close
If Formulario = "Estoque/Ordem de faturamento" Then
    Lbl1.Caption = " Vlr. total ordem(ns) = " & Format(Valor1, "###,##0.00")
Else
    If Faturamento_NF_Saida = True Then DuplicataTexto = "Vlr. total a receber" Else DuplicataTexto = "Vlr. total a pagar"
    Lbl1.Caption = " Vlr. total faturado = " & Format(Valor1, "###,##0.00") & "  /  " & DuplicataTexto & " = " & Format(Valor2, "###,##0.00") & "  /  Vlr. total cancelado = " & Format(Valor3, "###,##0.00")
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub chkRemessa_Click()
On Error GoTo tratar_erro

If chkRemessa.Value = 1 Then chkRetorno.Value = 0

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub chkRetorno_Click()
On Error GoTo tratar_erro

If chkRetorno.Value = 1 Then chkRemessa.Value = 0

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcSalvarServico()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If Frame1(12).Enabled = False Then
    ProcVerificaSalvar
    Exit Sub
End If
Acao = "salvar"

If txtcodServ.Text = "" Then
    NomeCampo = "o código interno"
    ProcVerificaAcao
    txtcodServ.SetFocus
    Exit Sub
End If


If Formulario <> "Estoque/Ordem de faturamento" And Opt_entrada.Value = False Then
    If Txt_CFOP_serv = "" Then
        NomeCampo = "a CFOP"
        ProcVerificaAcao
        Cmd_localizar_CFOP_serv_Click
        Exit Sub
    End If
End If
If txtunserv.Text = "" Then
    NomeCampo = "a unidade de estoque"
    ProcVerificaAcao
    txtunserv.SetFocus
    Exit Sub
End If
If Cmb_un_com_serv.Text = "" Then
    NomeCampo = "a unidade comercial"
    ProcVerificaAcao
    Cmb_un_com_serv.SetFocus
    Exit Sub
End If
valor = IIf(txtqtdserv = "", 0, txtqtdserv)
If valor <= 0 Then
    NomeCampo = "a quantidade"
    ProcVerificaAcao
    txtqtdserv.SetFocus
    Exit Sub
End If
Valor1 = IIf(txtVlrunitserv = "", 0, txtVlrunitserv)
If Valor1 < 0 Then
    NomeCampo = "o valor unitário"
    ProcVerificaAcao
    txtVlrunitserv.SetFocus
    Exit Sub
End If
If txtDescserv.Text = "" Then
    NomeCampo = "a descrição"
    ProcVerificaAcao
    txtDescserv.SetFocus
    Exit Sub
End If
'Se a unidade for diferente verifica se esta cadastrado o peso bruto e UN/KG
If FunBloqueiaUnConversao(txtcodServ, txtunserv, Cmb_un_com_serv, False) = True Then Exit Sub

Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & txtId.Text
NF_alterada = False

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_detalhes_Nota where Int_codigo = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
    If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "o serviço", False) = False Then Exit Sub
    
    If TBProduto!int_Cod_Produto <> txtcodServ Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            USMsgBox ("Não é permitido alterar este serviço, pois o mesmo pertence a um pedido interno."), vbExclamation, "CAPRIND v5.0"
            TBAbrir.Close
            Exit Sub
        End If
    End If
    If Faturamento_NF_Saida = True And txtNFiscal <> "" And TBProduto!int_Qtd <> valor Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select RespValidacaoOF from tbl_Dados_Nota_Fiscal where ID = " & txtId & " and RespValidacaoOF <> '" & pubUsuario & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            USMsgBox ("Só é permitido alterar a quantidade deste serviço pelo usuário " & TBAbrir!RespValidacaoOF & "."), vbExclamation, "CAPRIND v5.0"
            TBAbrir.Close
            Exit Sub
        End If
        TBAbrir.Close
    End If
    
Else
    TBProduto.AddNew
    TBProduto!Tipo = "S"
End If

If NFe_liberada = True Then
    TBProduto!Ordem = IIf(txtof_servico = "", 0, txtof_servico)
Else
    TBProduto!int_Cod_Produto = txtcodServ.Text
    TBProduto!ID_nota = txtId.Text
    TBProduto!Txt_descricao = txtDescserv.Text
    TBProduto!N_referencia = cmbReferenciaserv
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select codProduto, Classe from projproduto where desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        TBProduto!Codproduto = TBItem!Codproduto
        TBProduto!Familia = TBItem!Classe
    End If
    TBItem.Close
    TBProduto!ID_CFOP = IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv)
    TBProduto!CST_PIS = Cmb_CST_PIS_Serv
    TBProduto!CST_Cofins = Cmb_CST_Cofins_Serv
    TBProduto!Ordem = IIf(txtof_servico = "", 0, txtof_servico)
    TBProduto!PCCliente = Trim(txt_pcclienteserv)
    TBProduto!int_Qtd = txtqtdserv.Text
    TBProduto!txt_Unid = txtunserv.Text
    TBProduto!Unidade_com = Cmb_un_com_serv.Text
    TBProduto!dbl_ValorUnitario = txtVlrunitserv.Text
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBProduto!dbl_ValorTotal = txtVlrtotalserv.Text
    If Chk_servico_executado_cliente.Value = 1 Then TBProduto!Servico_cliente = True Else TBProduto!Servico_cliente = False
        
    ProcSalvarImpostosServ
    
    'Calcula Valor aproximado de tributos
    TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(TBProduto!PIS_Serv + TBProduto!Cofins_Serv, 0, IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), True)
    If TBProduto!Aliq_aprox_tributos = 0 Then
        TBProduto!Valor_aprox_tributos = 0
    Else
        TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
    End If
        
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(txtunserv, Cmb_un_com_serv) = True Then
        TBProduto!Qtde_estoque = FunConverteUN(txtunserv, Cmb_un_com_serv, txtqtdserv, txtcodServ)
    Else
        TBProduto!Qtde_estoque = Null
    End If
End If

TBProduto.Update
txtidservico = TBProduto!Int_codigo

ProcAtualizaQtdeFatProdServPed TBProduto!Int_codigo, TBProduto!int_Qtd

ProcCarregaListaServicos
If Novo_Nota2 = True Then
    USMsgBox ("Novo serviço cadastrado com sucesso."), vbInformation, "CAPRIND v5.0"
    Evento = "Novo serviço"
Else
    USMsgBox ("Alteração efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
    Evento = "Alterar serviço"
    If CodigoLista2 <> 0 And Listaservicos.ListItems.Count <> 0 Then
        Listaservicos.SelectedItem = Listaservicos.ListItems(CodigoLista2)
        Listaservicos.SetFocus
    End If
End If
'==================================
Modulo = Formulario
ID_documento = txtidservico
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = "Cód. interno: " & txtcodServ
ProcGravaEvento
'==================================
Novo_Nota2 = False
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcSalvarImpostosServ()
On Error GoTo tratar_erro

'Impostos
Valor_total = txtVlrtotalserv

'Empresa
ProcControleImposto IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), IIf(txtIDCliente = "", 0, txtIDCliente)
ProcVerifImpostosEmpresa IDempresa, False, txtcodServ, Chk_servico_executado_cliente, Valor_total, True, TabelaSN, Lbl2.Caption
If DAS > 0 Then
    NovoValor = Replace(DAS, ",", ".")
    Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & txtId
End If
If TBProduto!Imposto_manual_serv <> True Then
    TBProduto!PIS_Serv = PIS_Serv
    TBProduto!Cofins_Serv = Cofins_Serv
    TBProduto!CSLL_Serv = CSLL_Serv
    TBProduto!ISS = ISS_Serv
    TBProduto!INSS_Serv = INSS_Serv
    TBProduto!IRRF_Serv = IRRF_Serv
    TBProduto!cpp = CPP_Serv
End If
If TBProduto!PIS_Serv <> 0 Then TBProduto!Total_PIS_serv = Format((Valor_total * TBProduto!PIS_Serv) / 100, "###,##0.00") Else TBProduto!Total_PIS_serv = 0
If TBProduto!Cofins_Serv <> 0 Then TBProduto!Total_Cofins_serv = Format((Valor_total * TBProduto!Cofins_Serv) / 100, "###,##0.00") Else TBProduto!Total_Cofins_serv = 0
If TBProduto!CSLL_Serv <> 0 Then TBProduto!Total_CSLL_serv = Format((Valor_total * TBProduto!CSLL_Serv) / 100, "###,##0.00") Else TBProduto!Total_CSLL_serv = 0
If TBProduto!ISS <> 0 Then TBProduto!VlrISS = Format((Valor_total * TBProduto!ISS) / 100, "###,##0.00") Else TBProduto!VlrISS = 0
If TBProduto!INSS_Serv <> 0 Then TBProduto!Total_INSS_serv = Format((Valor_total * TBProduto!INSS_Serv) / 100, "###,##0.00") Else TBProduto!Total_INSS_serv = 0
If TBProduto!IRRF_Serv <> 0 Then TBProduto!Total_IRRF_serv = Format((Valor_total * TBProduto!IRRF_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRRF_serv = 0
If TBProduto!cpp <> 0 Then TBProduto!Total_CPP = Format((Valor_total * TBProduto!cpp) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0

TBProduto!IRPJ_Serv = IRPJ_Serv
If TBProduto!IRPJ_Serv <> 0 Then TBProduto!Total_IRPJ_serv = Format((Valor_total * TBProduto!IRPJ_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_serv = 0

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposServicos()
On Error GoTo tratar_erro


Txt_ID_CFOP_serv = ""
Txt_CFOP_serv = ""
Txt_natureza_operacao_serv = ""
If Novo_Nota2 = True Then
    Set TBTempo = CreateObject("adodb.recordset")
    TBTempo.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & IIf(txtId = "", 0, txtId) & " and Tipo = 'S' and ID_CFOP IS NOT NULL order by Int_codigo desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBTempo.EOF = False Then
        If Chk_CFOP_serv.Value = 1 Then
            Txt_ID_CFOP_serv = TBTempo!ID_CFOP
            Permitido = True
        End If
    End If
    If Permitido = False And Len(txttipocliente) = 2 Then
        'Verifica CFOP vinculada ao cliente
        Set TBTempo = CreateObject("adodb.recordset")
        TBTempo.Open "Select * FROM Clientes_DadosComerciais where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
        If TBTempo.EOF = False Then
            Txt_ID_CFOP_serv = IIf(IsNull(TBTempo!IDCFOP), "", TBTempo!IDCFOP)
        End If
    End If
End If

Set TBTempo = CreateObject("adodb.recordset")
TBTempo.Open "Select * FROM tbl_NaturezaOperacao where IDCountCfop = " & IIf(Txt_ID_CFOP_serv = "", 0, Txt_ID_CFOP_serv), Conexao, adOpenKeyset, adLockOptimistic
If TBTempo.EOF = False Then
    Txt_CFOP_serv = IIf(IsNull(TBTempo!ID_CFOP), "", TBTempo!ID_CFOP)
    Txt_natureza_operacao_serv = IIf(IsNull(TBTempo!Txt_descricao), "", TBTempo!Txt_descricao)
End If
TBTempo.Close

Cmb_CST_PIS_Serv.ListIndex = -1
Cmb_CST_Cofins_Serv.ListIndex = -1
txtunserv.ListIndex = -1
Cmb_un_com_serv.ListIndex = -1
txtqtdserv.Text = ""
With txtVlrunitserv
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVlrtotalserv.Text = ""
txtDescserv.Text = ""
txt_pcclienteserv.Text = ""
txtof_servico.Text = ""
Chk_servico_executado_cliente.Value = 0
CodigoLista2 = 0

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposServicos1()
On Error GoTo tratar_erro


Cmb_CST_PIS_Serv.ListIndex = -1
Cmb_CST_Cofins_Serv.ListIndex = -1
txtunserv.ListIndex = -1
Cmb_un_com_serv.ListIndex = -1
txtqtdserv.Text = ""
With txtVlrunitserv
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVlrtotalserv.Text = ""
txtDescserv.Text = ""
txt_pcclienteserv.Text = ""
txtof_servico.Text = ""
Chk_servico_executado_cliente.Value = 0

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposProd()
On Error GoTo tratar_erro

cmbreferencia.Text = ""

Txt_ID_CFOP_prod = ""
Txt_CFOP_prod = ""
Txt_natureza_operacao_prod = ""
If Novo_Nota1 = True Then
    Set TBTempo = CreateObject("adodb.recordset")
    TBTempo.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & IIf(txtId = "", 0, txtId) & " and Tipo = 'P' and ID_CFOP IS NOT NULL order by Int_codigo desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBTempo.EOF = False Then
        If Chk_CFOP_prod.Value = 1 Then
            Txt_ID_CFOP_prod = TBTempo!ID_CFOP
            Permitido = True
        End If
    End If
    If Permitido = False And Len(txttipocliente) = 2 Then
        'Verifica CFOP vinculada ao cliente
        Set TBTempo = CreateObject("adodb.recordset")
        TBTempo.Open "Select * FROM Clientes_DadosComerciais where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
        If TBTempo.EOF = False Then
            Txt_ID_CFOP_prod = IIf(IsNull(TBTempo!IDCFOP), "", TBTempo!IDCFOP)
        End If
    End If
End If

Txt_ID_CF = ""
Txt_CF = ""
txtCST_ICMS.ListIndex = -1
txtCST_IPI.ListIndex = -1
txtCST_PIS.ListIndex = -1
txtCST_Cofins.ListIndex = -1
txtDescricao_Produto.Text = ""
txtUN = ""
Cmb_un_com = ""
txtQtd = ""
With txtVLUnit
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVLTotal.Text = ""
txtICMS.Text = ""
txtIPI.Text = ""
txtValor_IPI.Text = ""
Txt_codigo_enq_IPI = ""
Txt_complemento_descricao = ""
Txt_GTIN = ""
Txt_inf_adicionais_prod = ""
txtOF.Text = ""
Txt_IDestoque = 0
txt_VlrFrete_prod = ""
Chk_tem_IPI_frete_prod.Value = 0
txt_vlrSeguro_prod = ""
txt_OutrasDisp_prod = ""
Txt_valor_total_desc_prod = ""
Txt_n_item = ""
txt_pccliente.Text = ""
chkNaoArredondar.Value = 0

chkRemessa.Value = 0
chkRetorno.Value = 0
Set TBTempo = CreateObject("adodb.recordset")
TBTempo.Open "Select * FROM tbl_NaturezaOperacao where IDCountCfop = " & IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), Conexao, adOpenKeyset, adLockOptimistic
If TBTempo.EOF = False Then
    Txt_CFOP_prod = IIf(IsNull(TBTempo!ID_CFOP), "", TBTempo!ID_CFOP)
    Txt_natureza_operacao_prod = IIf(IsNull(TBTempo!Txt_descricao), "", TBTempo!Txt_descricao)
    If TBTempo!Remessa = True Then chkRemessa.Value = 1
    If TBTempo!retorno = True Then chkRetorno.Value = 1
End If
TBTempo.Close

If Faturamento_NF_Saida = True Then
Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close

    
ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
    
'======================================================================================
    If AliquotaSN = 0 Then
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
    Else
    txtICMSSN = Format(AliquotaSN, "###,##0.0000")
    End If
'======================================================================================
    
End If

CodigoLista1 = 0
ProcCarregaCSTICMS
Produto_Relacionado = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposProd1()
On Error GoTo tratar_erro

cmbreferencia.Text = ""
Txt_ID_CF = ""
Txt_CF = ""
txtCST_ICMS.ListIndex = -1
txtCST_IPI.ListIndex = -1
txtCST_PIS.ListIndex = -1
txtCST_Cofins.ListIndex = -1
txtDescricao_Produto.Text = ""
txtUN = ""
Cmb_un_com = ""
txtQtd = ""
With txtVLUnit
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtVLTotal.Text = ""
txtICMS.Text = ""
txtIPI.Text = ""
txtValor_IPI.Text = ""
Txt_codigo_enq_IPI = ""
Txt_complemento_descricao = ""
Txt_GTIN = ""
Txt_inf_adicionais_prod = ""
txtOF.Text = ""
Txt_IDestoque = 0
txt_VlrFrete_prod = ""
Chk_tem_IPI_frete_prod.Value = 0
txt_vlrSeguro_prod = ""
txt_OutrasDisp_prod = ""
Txt_valor_total_desc_prod = ""
Txt_n_item = ""
txt_pccliente.Text = ""

If Faturamento_NF_Saida = True Then

Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close

    ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
'======================================================================================
'    If AliquotaSN = 0 Then
'    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
'    Else
'    txtICMSSN = Format(AliquotaSN, "###,##0.0000")
''    End If
'======================================================================================

End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaListaDuplicatas(ID_nota As Long)
On Error GoTo tratar_erro

'Libera a edição dos campos da duplicata
With cbo_PortBanco
    .Locked = False
    .TabStop = True
End With
With cmb_tipopagto
    .Locked = False
    .TabStop = True
End With
With txt_Cond_Recebimento
    .Locked = False
    .TabStop = True
End With

Init = 0
Sit_REG = 0
valor = 0
lst_Duplicata.ListItems.Clear
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where ID_Nota = " & ID_nota & " order by dt_Vencimento, txt_parcela", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    'Bloqueia a edição dos campos da duplicata
    With cbo_PortBanco
        .Locked = True
        .TabStop = False
    End With
    With cmb_tipopagto
        .Locked = True
        .TabStop = False
    End With
    With txt_Cond_Recebimento
        .Locked = True
        .TabStop = False
    End With
    
    TBLISTA.MoveLast
    Contador = 0
    TBLISTA.MoveFirst
    Do While TBLISTA.EOF = False
        With lst_Duplicata.ListItems
            .Add , , Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
            .Item(.Count).SubItems(1) = Format(TBLISTA!dbl_Valor, "###,##0.00")
            .Item(.Count).SubItems(2) = TBLISTA!txt_Parcela
            .Item(.Count).SubItems(3) = TBLISTA!ID
            
            'Verifica se já foi enviada a conta para o financeiro
            'Verifica se é nota de devolução
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBFIltro.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
                'Fornecedor
                If Opt_saida.Value = True And Len(txttipocliente) = 1 Then TextoFiltro = "tbl_ContasPagar where ID_Nota = " & ID_nota & " and txt_Parcela = '" & TBLISTA!txt_Parcela & "'"
                'Cliente
                If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then TextoFiltro = "tbl_contas_receber where ID_Nota = " & ID_nota & " and Parcela = '" & TBLISTA!txt_Parcela & "'"
            Else
                If Opt_saida.Value = True Then
                    TextoFiltro = "tbl_contas_receber where ID_Nota = " & ID_nota & " and Parcela = '" & TBLISTA!txt_Parcela & "'"
                Else
                    TextoFiltro = "tbl_ContasPagar where ID_Nota = " & ID_nota & " and txt_Parcela = '" & TBLISTA!txt_Parcela & "'"
                End If
            End If
            TBFIltro.Close
            
            Set TBContas = CreateObject("adodb.recordset")
            TBContas.Open "Select * from " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then .Item(.Count).SubItems(4) = "SIM" Else .Item(.Count).SubItems(4) = "NÃO"
            TBContas.Close
            
            .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA!Nosso_Numero), "", TBLISTA!Nosso_Numero)
            
            If IsNull(TBLISTA!Seq_remessa) = False And TBLISTA!Seq_remessa <> "" And cbo_PortBanco <> "" Then
            .Item(.Count).SubItems(6) = FunFormataNumeroArqRemessa(TBLISTA!Data_emissao, cbo_PortBanco.ItemData(cbo_PortBanco.ListIndex), TBLISTA!Seq_remessa)
            End If
            
            .Item(.Count).SubItems(7) = txt_Razao
            .Item(.Count).SubItems(8) = Format(TBLISTA!Vencimento_boleto, "dd/mm/yyyy")
            
            
            Init = Init + 1
            .Item(Init).Checked = True
        End With
        
        valor = valor + TBLISTA!dbl_Valor
        
        TBLISTA.MoveNext
        Contador = Contador + 1
    Loop
    NovoValor = Replace(valor, ",", ".")
    Conexao.Execute "Update tbl_Totais_Nota Set Valor_total_receber_pagar = " & NovoValor & " where ID_nota = " & txtId
    Sit_REG = 1
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAnterior()
On Error GoTo tratar_erro

If txtId = "" Then Exit Sub
Set TBLISTA = CreateObject("adodb.recordset")
If Faturamento_NF_Saida = True Then TextoFiltro = "Aplicacao = 'P'" Else TextoFiltro = "Aplicacao = 'T'"
TBLISTA.Open "Select * from tbl_Dados_Nota_Fiscal where " & TextoFiltro & " and ID_empresa = " & IDempresa & " order by dt_DataEmissao, id", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.BOF = False Then
    TBLISTA.Find ("ID = " & txtId)
    TBLISTA.MovePrevious
    If TBLISTA.BOF = False Then
        txtId = TBLISTA!ID
        ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
        txtCod_Produto.Text = ""
        ProcLimpaCamposProd
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        ProcCarregaLista
        txtcodServ.Text = ""
        ProcLimpaCamposServicos
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        ProcLimpaCamposDuplicata
        ProcCarregaDuplicatas
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
        ProcVerificaValorFatura
    Else
        USMsgBox ("Fim dos cadastros de notas fiscais."), vbInformation, "CAPRIND v5.0"
    End If
End If
Novo_Nota = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiar()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
Permitido = False
If Formulario = "Estoque/Ordem de faturamento" Then MsgTexto = "ordem(ns) de faturamento" Else MsgTexto = "nota(s) fiscal(ais)"
With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If USMsgBox("Deseja realmente copiar esta(s) " & MsgTexto & "?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
            End If
            Permitido = True
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe a(s) " & MsgTexto & " na lista abaixo ticando na caixinha antes de copiar."), vbExclamation, "CAPRIND v5.0"
Else
    frmFaturamento_Prod_serv_copiar.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCopiarNF(ID_nota As Long, Data_emissao As Date)
On Error GoTo tratar_erro

IDAntigo = ID_nota
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where Id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    'Carrega número da nova nota fiscal
    If Left(Formulario, 7) <> "Estoque" And Right(Formulario, 9) <> "Terceiros" Then
        TipoNF = TBAbrir!TipoNF
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select CAST(int_NotaFiscal AS int) AS NF, Serie,Modelo FROM tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = '" & TBAbrir!Aplicacao & "' and ID_empresa = " & IDempresa & " and int_NotaFiscal IS NOT NULL order by dt_DataEmissao desc, NF desc", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then
            QuantsolicitadoN1 = TBFI!NF + 1
            FamiliaAntiga = QuantsolicitadoN1
            Familiatext = FunTamanhoTextoZeroEsq(FamiliaAntiga, 9)
            SerieNF = IIf(IsNull(TBFI!Serie), 1, TBFI!Serie)
            'Modelo = IIf(IsNull(TBFI!Modelo), 55, TBFI!Modelo)
        End If
        Familiatext = FunVerifExisteNumNF(TipoNF, IDempresa, Familiatext, SerieNF, IsNull(TBFI!Modelo))
    Else
        Familiatext = ""
    End If
        
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Nota_Fiscal", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!Modelo = TBAbrir!Modelo
    TBGravar!Id_Int_Cliente = TBAbrir!Id_Int_Cliente
    TBGravar!int_NotaFiscal = IIf(Familiatext = "", "0000000", Familiatext)
    TBGravar!Serie = TBAbrir!Serie
    TBGravar!TipoNF = TBAbrir!TipoNF
    TBGravar!int_TipoNota = TBAbrir!int_TipoNota
    TBGravar!txt_Inscr_Substituto = TBAbrir!txt_Inscr_Substituto
    TBGravar!txt_Razao_Nome = TBAbrir!txt_Razao_Nome
    TBGravar!txt_CNPJ_CPF = TBAbrir!txt_CNPJ_CPF
    TBGravar!dt_DataEmissao = Data_emissao
    If Faturamento_NF_Saida = True Then TBGravar!Hora_emissao = Format(Now, "hh:mm:ss")
    TBGravar!txt_Hora_Saida = Format(Now, "hh:mm:ss")
    
    If Formulario <> "Estoque/Ordem de faturamento" Then
        TBGravar!DtValidacaoOF = Now
        TBGravar!RespValidacaoOF = pubUsuario
    End If
    
    TBGravar!txt_Endereco = TBAbrir!txt_Endereco
    TBGravar!Numero = TBAbrir!Numero
    TBGravar!txt_Bairro = TBAbrir!txt_Bairro
    TBGravar!Txt_CEP = TBAbrir!Txt_CEP
    TBGravar!dt_Saida_Entrada = Date
    TBGravar!txt_Municipio = TBAbrir!txt_Municipio
    TBGravar!txt_Fone_Fax = TBAbrir!txt_Fone_Fax
    TBGravar!txt_UF = TBAbrir!txt_UF
    TBGravar!txt_IE_Cliente = TBAbrir!txt_IE_Cliente
    TBGravar!Int_status = 1
    TBGravar!txt_tipocliente = TBAbrir!txt_tipocliente
    TBGravar!Aplicacao = TBAbrir!Aplicacao
    TBGravar!pedido_interno = TBAbrir!pedido_interno
    TBGravar!ID_empresa = TBAbrir!ID_empresa
    'TBGravar!Obs = TBAbrir!Obs
    TBGravar!Regime = FunVerifRegimeEmpresa(TBAbrir!ID_empresa)
    If TBGravar!Regime = 1 Then
    TBGravar!TabelaSN = TBAbrir!TabelaSN
    Else
    TBGravar!TabelaSN = 0
    End If
    
    TBGravar.Update
    txtId = TBGravar!ID
    '==================================
    Modulo = Formulario
    Evento = "Novo"
    ID_documento = TBGravar!ID
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & Familiatext
    Documento = NomeCampo & " - Tipo: " & TBAbrir!TipoNF & " - Série: " & TBAbrir!Serie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    TBGravar.Close
End If
ProcCopiarNFe
ProcCopiarProdutos Familiatext
ProcCopiarServicos Familiatext
ProcCopiarTotaisNota Familiatext
ProcCopiarTransportadora Familiatext
ProcCopiarDadosAdicionais Familiatext

'Set TBAbrir = CreateObject("adodb.recordset")
'TBAbrir.Open "Select * from tbl_Detalhes_Recebimento where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
'If TBAbrir.EOF = False Then
'    Do While TBAbrir.EOF = False
'        Set TBGravar = CreateObject("adodb.recordset")
'        TBGravar.Open "Select * from tbl_Detalhes_Recebimento", Conexao, adOpenKeyset, adLockOptimistic
'        TBGravar.AddNew
'        TBGravar!int_NotaFiscal = Familiatext
'        TBGravar!ID_nota = TxtID
'        TBGravar!txt_Parcela = TBAbrir!txt_Parcela
'        TBGravar!dt_Vencimento = Left(TBAbrir!dt_Vencimento, 2) & Right(Data_emissao, 8)
'        TBGravar!txt_Cond_Recebimento = TBAbrir!txt_Cond_Recebimento
'        TBGravar!txt_Portador_Banco = TBAbrir!txt_Portador_Banco
'        TBGravar!txt_Agencia = TBAbrir!txt_Agencia
'        TBGravar!txt_conta = TBAbrir!txt_conta
'        TBGravar!dbl_Valor = TBAbrir!dbl_Valor
'        TBGravar!Valor_Extenso = TBAbrir!Valor_Extenso
'        TBGravar!txt_tipopagto = TBAbrir!txt_tipopagto
'        TBGravar!Tipo_doc = TBAbrir!Tipo_doc
'        TBGravar!Obs = TBAbrir!Obs
'
'        TBGravar.Update
'        TBGravar.Close
'        TBAbrir.MoveNext
'    Loop
'End If
'TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiarProdutos(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota where Id_nota = " & IDAntigo & " and Tipo = 'P' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from tbl_Detalhes_Nota", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Tipo = "P"
        TBGravar!Codproduto = TBAbrir!Codproduto
        TBGravar!int_Cod_Produto = TBAbrir!int_Cod_Produto
        TBGravar!Txt_descricao = TBAbrir!Txt_descricao
        TBGravar!N_referencia = TBAbrir!N_referencia
        TBGravar!Familia = TBAbrir!Familia
        TBGravar!txt_CST = TBAbrir!txt_CST
        TBGravar!CST_IPI = TBAbrir!CST_IPI
        TBGravar!CST_PIS = TBAbrir!CST_PIS
        TBGravar!CST_Cofins = TBAbrir!CST_Cofins
        TBGravar!ID_CFOP = TBAbrir!ID_CFOP
        TBGravar!ID_CF = TBAbrir!ID_CF
        TBGravar!Complemento_descricao = TBAbrir!Complemento_descricao
        TBGravar!GTIN = TBAbrir!GTIN
        TBGravar!N_item = TBAbrir!N_item
        'Impostos
        TBGravar!int_ICMS = TBAbrir!int_ICMS
        TBGravar!int_IPI = TBAbrir!int_IPI
        TBGravar!dbl_valoripi = TBAbrir!dbl_valoripi
        TBGravar!PIS_Prod = TBAbrir!PIS_Prod
        TBGravar!Total_PIS_prod = TBAbrir!Total_PIS_prod
        TBGravar!Cofins_Prod = TBAbrir!Cofins_Prod
        TBGravar!Total_Cofins_prod = TBAbrir!Total_Cofins_prod
        TBGravar!CSLL_Prod = TBAbrir!CSLL_Prod
        TBGravar!Total_CSLL_prod = TBAbrir!Total_CSLL_prod
        TBGravar!IRPJ_Prod = TBAbrir!IRPJ_Prod
        TBGravar!Total_IRPJ_prod = TBAbrir!Total_IRPJ_prod
        TBGravar!cpp = TBAbrir!cpp
        TBGravar!Total_CPP = TBAbrir!Total_CPP
        TBGravar!ICMS_SN = TBAbrir!ICMS_SN
        TBGravar!Valor_Retencao_PIS = IIf(IsNull(TBAbrir!Valor_Retencao_PIS), 0, TBAbrir!Valor_Retencao_PIS)
        TBGravar!Valor_Retencao_Cofins = IIf(IsNull(TBAbrir!Valor_Retencao_Cofins), 0, TBAbrir!Valor_Retencao_Cofins)
        TBGravar!Aliq_aprox_tributos = TBAbrir!Aliq_aprox_tributos
        TBGravar!Valor_aprox_tributos = TBAbrir!Valor_aprox_tributos
                
        TBGravar!int_Qtd = TBAbrir!int_Qtd
        TBGravar!Saldo = TBAbrir!int_Qtd
        TBGravar!txt_Unid = TBAbrir!txt_Unid
        TBGravar!Unidade_com = TBAbrir!Unidade_com
        TBGravar!dbl_ValorUnitario = TBAbrir!dbl_ValorUnitario
        TBGravar!int_NotaFiscal = NovoNumNFiscal
        TBGravar!ID_nota = txtId
        TBGravar!dbl_ValorTotal = TBAbrir!dbl_ValorTotal
        TBGravar!retorno = TBAbrir!retorno
        TBGravar!Remessa = TBAbrir!Remessa
        TBGravar!Soma_retorno_totalnf = TBAbrir!Soma_retorno_totalnf
        TBGravar!Valor_frete = TBAbrir!Valor_frete
        TBGravar!Tem_IPI_frete = TBAbrir!Tem_IPI_frete
        TBGravar!Valor_seguro = TBAbrir!Valor_seguro
        TBGravar!Valor_acessorias = TBAbrir!Valor_acessorias
        TBGravar!Valor_desconto = TBAbrir!Valor_desconto
        TBGravar!VlrMPA = TBAbrir!VlrMPA
        TBGravar!Codigo_enquadramento_IPI = TBAbrir!Codigo_enquadramento_IPI
        TBGravar.Update
        ProcCopiarProdutosNFe
        ProcCopiarCST
        TBGravar.Close
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiarServicos(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Nota where Id_nota = " & IDAntigo & " and Tipo = 'S' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from tbl_Detalhes_Nota", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Tipo = "S"
        TBGravar!Codproduto = TBAbrir!Codproduto
        TBGravar!int_Cod_Produto = TBAbrir!int_Cod_Produto
        TBGravar!ID_CFOP = TBAbrir!ID_CFOP
        TBGravar!CST_PIS = TBAbrir!CST_PIS
        TBGravar!CST_Cofins = TBAbrir!CST_Cofins
        TBGravar!ID_nota = txtId
        TBGravar!Txt_descricao = TBAbrir!Txt_descricao
        TBGravar!N_referencia = TBAbrir!N_referencia
        TBGravar!Familia = TBAbrir!Familia
        TBGravar!int_Qtd = TBAbrir!int_Qtd
        TBGravar!txt_Unid = TBAbrir!txt_Unid
        TBGravar!Unidade_com = TBAbrir!Unidade_com
        TBGravar!dbl_ValorUnitario = TBAbrir!dbl_ValorUnitario
        TBGravar!Servico_cliente = TBAbrir!Servico_cliente
        'impostos
        TBGravar!PIS_Serv = TBAbrir!PIS_Serv
        TBGravar!Total_PIS_serv = TBAbrir!Total_PIS_serv
        TBGravar!Cofins_Serv = TBAbrir!Cofins_Serv
        TBGravar!Total_Cofins_serv = TBAbrir!Total_Cofins_serv
        TBGravar!CSLL_Serv = TBAbrir!CSLL_Serv
        TBGravar!Total_CSLL_serv = TBAbrir!Total_CSLL_serv
        TBGravar!ISS = TBAbrir!ISS
        TBGravar!VlrISS = TBAbrir!VlrISS
        TBGravar!INSS_Serv = TBAbrir!INSS_Serv
        TBGravar!Total_INSS_serv = TBAbrir!Total_INSS_serv
        TBGravar!IRPJ_Serv = TBAbrir!IRPJ_Serv
        TBGravar!Total_IRPJ_serv = TBAbrir!Total_IRPJ_serv
        TBGravar!IRRF_Serv = TBAbrir!IRRF_Serv
        TBGravar!Total_IRRF_serv = TBAbrir!Total_IRRF_serv
        TBGravar!cpp = TBAbrir!cpp
        TBGravar!Total_CPP = TBAbrir!Total_CPP
        
        TBGravar!Retencao_PIS = TBAbrir!Retencao_PIS
        TBGravar!Retencao_Cofins = TBAbrir!Retencao_Cofins
        TBGravar!Retencao_CSLL = TBAbrir!Retencao_CSLL
        TBGravar!Retencao_INSS = TBAbrir!Retencao_INSS
        TBGravar!Retencao_IRRF = TBAbrir!Retencao_IRRF
        TBGravar!Retencao_ISSQN = TBAbrir!Retencao_ISSQN
        TBGravar!Imposto_manual_serv = TBAbrir!Imposto_manual_serv
        
        TBGravar!Aliq_aprox_tributos = TBAbrir!Aliq_aprox_tributos
        TBGravar!Valor_aprox_tributos = TBAbrir!Valor_aprox_tributos
        
        TBGravar!int_NotaFiscal = NovoNumNFiscal
        TBGravar!dbl_ValorTotal = TBAbrir!dbl_ValorTotal
        TBGravar.Update
        TBGravar.Close
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiarTotaisNota(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Totais_Nota where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Totais_Nota", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!int_NotaFiscal = NovoNumNFiscal
    TBGravar!ID_nota = txtId
    TBGravar!dbl_Valor_Total_Produtos = TBAbrir!dbl_Valor_Total_Produtos
    TBGravar!dbl_Valor_Total_Nota_Serv = TBAbrir!dbl_Valor_Total_Nota_Serv
    TBGravar!dbl_Valor_Frete = TBAbrir!dbl_Valor_Frete
    TBGravar!dbl_Valor_Seguro = TBAbrir!dbl_Valor_Seguro
    TBGravar!dbl_Desp_Adicionais = TBAbrir!dbl_Desp_Adicionais
    TBGravar!VlrMPA = TBAbrir!VlrMPA
    TBGravar!VLRMOA = TBAbrir!VLRMOA
    
    'Impostos produtos
    TBGravar!dbl_Base_ICMS = TBAbrir!dbl_Base_ICMS
    TBGravar!dbl_Valor_ICMS = TBAbrir!dbl_Valor_ICMS
    TBGravar!dbl_Base_ICMS_Subst = TBAbrir!dbl_Base_ICMS_Subst
    TBGravar!dbl_Valor_ICMS_Subst = TBAbrir!dbl_Valor_ICMS_Subst
    
   'If NotaFiscalPronta = False Then
    TBGravar!dbl_Valor_Total_IPI = TBAbrir!dbl_Valor_Total_IPI
   'End If
   
    TBGravar!Total_PIS_prod = TBAbrir!Total_PIS_prod
    TBGravar!Total_Cofins_prod = TBAbrir!Total_Cofins_prod
    TBGravar!Total_CSLL_prod = TBAbrir!Total_CSLL_prod
    TBGravar!Total_IRPJ_prod = TBAbrir!Total_IRPJ_prod
    TBGravar!Valor_total_ICMS_SN = TBAbrir!Valor_total_ICMS_SN
    
    'Impostos serviços
    TBGravar!Total_PIS_serv = TBAbrir!Total_PIS_serv
    TBGravar!Total_Cofins_serv = TBAbrir!Total_Cofins_serv
    TBGravar!Total_CSLL_serv = TBAbrir!Total_CSLL_serv
    TBGravar!dbl_valor_total_iss = TBAbrir!dbl_valor_total_iss
    TBGravar!Total_INSS_serv = TBAbrir!Total_INSS_serv
    TBGravar!Total_IRPJ_serv = TBAbrir!Total_IRPJ_serv
    TBGravar!Total_IRRF_serv = TBAbrir!Total_IRRF_serv
    
    'Impostos faturamento
    TBGravar!DAS = TBAbrir!DAS
    TBGravar!Total_DAS = TBAbrir!Total_DAS
    
    TBGravar!Valor_total_aprox_tributos = TBAbrir!Valor_total_aprox_tributos
    'TBGravar!Valor_total_ICMS_desonerado = TBAbrir!Valor_total_ICMS_desonerado
    
    'Retenção de PIS/Cofins
    TBGravar!Total_retencao_PIS = TBAbrir!Total_retencao_PIS
    TBGravar!Total_retencao_Cofins = TBAbrir!Total_retencao_Cofins
    
    TBGravar!dbl_Valor_Total_Nota = TBAbrir!dbl_Valor_Total_Nota
    TBGravar!Total_Credito_ICMS = IIf(IsNull(TBAbrir!Total_Credito_ICMS), 0, TBAbrir!Total_Credito_ICMS)
    TBGravar!Total_retorno = IIf(IsNull(TBAbrir!Total_retorno), 0, TBAbrir!Total_retorno)
    TBGravar!Valor_total_desconto = IIf(IsNull(TBAbrir!Valor_total_desconto), 0, TBAbrir!Valor_total_desconto)
    TBGravar!Valor_total_desconto_SUFRAMA = IIf(IsNull(TBAbrir!Valor_total_desconto_SUFRAMA), 0, TBAbrir!Valor_total_desconto_SUFRAMA)
    TBGravar!Valor_total_II = IIf(IsNull(TBAbrir!Valor_total_II), 0, TBAbrir!Valor_total_II)
    TBGravar!Valor_total_receber_pagar = IIf(IsNull(TBAbrir!Valor_total_receber_pagar), 0, TBAbrir!Valor_total_receber_pagar)
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiarTransportadora(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Transp where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Transp", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!ID_nota = txtId
    TBGravar!Tipo_transp = TBAbrir!Tipo_transp
    TBGravar!IdIntTransp = TBAbrir!IdIntTransp
    TBGravar!int_NotaFiscal = NovoNumNFiscal
    TBGravar!txt_Frete_Conta = TBAbrir!txt_Frete_Conta
    TBGravar!txt_Placa = TBAbrir!txt_Placa
    TBGravar!txt_UF_Placa = TBAbrir!txt_UF_Placa
    TBGravar!txt_CNPJ = TBAbrir!txt_CNPJ
    TBGravar!txt_IE = TBAbrir!txt_IE
    TBGravar!int_numero = TBAbrir!int_numero
    TBGravar!int_Qtd_Transp = TBAbrir!int_Qtd_Transp
    TBGravar!txt_Especie = TBAbrir!txt_Especie
    TBGravar!txt_Marca = TBAbrir!txt_Marca
    TBGravar!dbl_Peso_Bruto = TBAbrir!dbl_Peso_Bruto
    TBGravar!dbl_Peso_Liquido = TBAbrir!dbl_Peso_Liquido
    TBGravar!txt_Razao = TBAbrir!txt_Razao
    TBGravar!txt_Endereco = TBAbrir!txt_Endereco
    TBGravar!txt_Municipio = TBAbrir!txt_Municipio
    TBGravar!txt_UF = TBAbrir!txt_UF
    TBGravar!UF_embarque = TBAbrir!UF_embarque
    TBGravar!Local_embarque = TBAbrir!Local_embarque
    TBGravar!Codigo_ANTT = TBAbrir!Codigo_ANTT
    TBGravar!Via_transp = TBAbrir!Via_transp
    TBGravar!Frete_contratado = TBAbrir!Frete_contratado
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCopiarDadosAdicionais(NovoNumNFiscal As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_DadosAdicionais where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_DadosAdicionais", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!IDNotaFiscal = NovoNumNFiscal
    TBGravar!ID_nota = txtId
    TBGravar!mem_corpo = TBAbrir!mem_corpo
    TBGravar!mem_DadosAdicionais = TBAbrir!mem_DadosAdicionais
    TBGravar!RE = TBAbrir!RE
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub



Private Sub ProcProximo()
On Error GoTo tratar_erro

If txtId = "" Then Exit Sub
Set TBLISTA = CreateObject("adodb.recordset")
If Faturamento_NF_Saida = True Then TextoFiltro = "Aplicacao = 'P'" Else TextoFiltro = "Aplicacao = 'T'"
TBLISTA.Open "Select * from tbl_Dados_Nota_Fiscal where " & TextoFiltro & " and ID_empresa = " & IDempresa & " order by dt_DataEmissao, id", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.BOF = False Then
    TBLISTA.Find ("ID = " & txtId)
    TBLISTA.MoveNext
    If TBLISTA.EOF = False Then
        txtId = TBLISTA!ID
        ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
        txtCod_Produto.Text = ""
        ProcLimpaCamposProd
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        ProcCarregaLista
        txtcodServ.Text = ""
        ProcLimpaCamposServicos
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        'ProcLimpaCamposDuplicata
        ProcCarregaDuplicatas
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
        ProcVerificaValorFatura
    Else
        USMsgBox ("Fim dos cadastros de notas fiscais."), vbInformation, "CAPRIND v5.0"
    End If
End If
Novo_Nota = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosTransporte()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_dados_transp where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Select Case TBAbrir!Tipo_transp
        Case "C": Cmb_tipo_transp = "Cliente"
        Case "F": Cmb_tipo_transp = "Fornecedor"
        Case "E": Cmb_tipo_transp = "Empresa"
    End Select
    TxtTransp_nome = IIf(IsNull(TBAbrir!txt_Razao) = False, Trim(TBAbrir!txt_Razao), "")
    txtidinttransp.Text = IIf(IsNull(TBAbrir!IdIntTransp) = False, Trim(TBAbrir!IdIntTransp), "")
    txtTransp_cnpj = IIf(IsNull(TBAbrir!txt_CNPJ) = False, Trim(TBAbrir!txt_CNPJ), "")
    txtTransp_Placa = IIf(IsNull(TBAbrir!txt_Placa) = False, Trim(TBAbrir!txt_Placa), "")
    If IsNull(TBAbrir!txt_UF_Placa) = False And TBAbrir!txt_UF_Placa <> "" Then txtTransp_uf = Trim(TBAbrir!txt_UF_Placa)
    txtTransp_endereco = IIf(IsNull(TBAbrir!txt_Endereco) = False, TBAbrir!txt_Endereco, "")
    txtTransp_numero = IIf(IsNull(TBAbrir!int_numero), "", TBAbrir!int_numero)
    txtTransp_municipio = IIf(IsNull(TBAbrir!txt_Municipio) = False, TBAbrir!txt_Municipio, "")
    If IsNull(TBAbrir!txt_UF) = False And TBAbrir!txt_UF <> "" Then txtTransp_uf_Transportadora = Trim(TBAbrir!txt_UF)
    txtTransp_IE = IIf(IsNull(TBAbrir!txt_IE) = False, TBAbrir!txt_IE, "")
    txtTransp_qtd.Text = IIf(IsNull(TBAbrir!int_Qtd_Transp), "0", Trim(TBAbrir!int_Qtd_Transp))
    
    ProcCarregaComboTranspMarcaEspecie Cmb_transp_especie, "E"
    If IsNull(TBAbrir!txt_Especie) = False And TBAbrir!txt_Especie <> "" Then Cmb_transp_especie = TBAbrir!txt_Especie
    ProcCarregaComboTranspMarcaEspecie Cmb_transp_marca, "M"
    If IsNull(TBAbrir!txt_Marca) = False And TBAbrir!txt_Marca <> "" Then Cmb_transp_marca = TBAbrir!txt_Marca
    
    Txt_numeracao = IIf(IsNull(TBAbrir!Numeracao), "", TBAbrir!Numeracao)
    txtTransp_pesoBruto = IIf(IsNull(TBAbrir!dbl_Peso_Bruto), "", Format(TBAbrir!dbl_Peso_Bruto, "###,##0.000000"))
    txtTransp_pesoliquido = IIf(IsNull(TBAbrir!dbl_Peso_Liquido), "", Format(TBAbrir!dbl_Peso_Liquido, "###,##0.000000"))
    'If TBAbrir!Sedex = True Then chkSedex.Value = 1 Else chkSedex.Value = 0
    'If TBAbrir!EnviarXML = True Then Chk_enviar_XML_transp.Value = 1 Else Chk_enviar_XML_transp.Value = 0
    With Cmb_via_transp
        Select Case TBAbrir!Via_transp
            Case 0: .Text = "0 - Nenhum"
            Case 1: .Text = "1 - Rodoviário"
            Case 2: .Text = "2 - Ferroviário"
            Case 3: .Text = "3 - Rodo-Ferroviário"
            Case 4: .Text = "4 - Aquaviário"
            Case 5: .Text = "5 - Dutoviário"
            Case 6: .Text = "6 - Aéreo"
            Case 7: .Text = "7 - Outros"
        End Select
    End With
    Txt_codigo_ANTT = IIf(IsNull(TBAbrir!Codigo_ANTT), "", TBAbrir!Codigo_ANTT)
    With cmbFrete
        Select Case TBAbrir!txt_Frete_Conta
            Case 0: .Text = "0 - Contratação do Frete por conta do Remetente (CIF)"
            Case 1: .Text = "1 - Contratação do Frete por conta do Destinatário (FOB)"
            Case 2: .Text = "2 - Contratação do Frete por conta de Terceiros"
            Case 3: .Text = "3 - Transporte Próprio por conta do Remetente"
            Case 4: .Text = "4 - Transporte Próprio por conta do Destinatário"
            Case 9: .Text = "9 - Sem Ocorrência de Transporte"
        End Select
    End With
    With Cmb_frete_contratado
        Select Case TBAbrir!Frete_contratado
            Case 0: .Text = "0 - Operações de vendas, com ônus suportado pelo estabelecimento vendedor"
            Case 1: .Text = "1 - Operações de vendas, com ônus suportado pelo adquirente"
            Case 2: .Text = "2 - Operações de compras (bens para revenda, matérias-prima e outros produtos, geradores de crédito)"
            Case 3: .Text = "3 - Operações de compras (bens para revenda, matérias-prima e outros produtos, não geradores de crédito)"
            Case 4: .Text = "4 - Transferência de produtos acabados entre estabelecimentos da pessoa jurídica"
            Case 5: .Text = "5 - Transferência de produtos em elaboração entre estabelecimentos da pessoa jurídica"
            Case 9: .Text = "9 - Outras"
        End Select
    End With
End If
TBAbrir.Close
        
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub CmdCF_Click()
On Error GoTo tratar_erro

If txtCod_Produto = "" Then Exit Sub
If NFe_liberada = False Then
    Faturamento = True
    Vendas_Proposta = False
    Vendas_PI = False
    Clientes = False
    Compras_Pedido = False
    Familia_NCM = False
    ClassFiscal = False
    frmProj_Classificacao_Fiscal.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirDuplicatas()
On Error GoTo tratar_erro

If Excluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtId, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "duplicata(s)", "excluir esta(s)", False, True) = False Then Exit Sub

FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Then
    If Permitido = True Then
        USMsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    Else
        Set TBUsuarios = CreateObject("adodb.recordset")
        TBUsuarios.Open "Select usuarios.* from usuarios INNER JOIN acessos ON usuarios.IDUsuario = Acessos.IDUsuario where usuarios.usuario = '" & pubUsuario & "' and Acessos.Acesso = 'Faturamento/Nota fiscal/Excluir duplicatas'", Conexao, adOpenKeyset, adLockOptimistic
        If TBUsuarios.EOF = True Then
            Sit_REG = 2
            frmFaturamento_Prod_serv_excluir_dup_aut.Show 1
        Else
            ProcExcluirDuplicatas1
        End If
    End If
Else
    ProcExcluirDuplicatas1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcExcluirDuplicatas1()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then
    If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
    'usMsgbox ("Não existe nenhuma duplicata nesta " & NomeCampo & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If lst_Duplicata.ListItems.Count <> 0 Then If VerificaContaBaixada(txtId, "excluir", True) = True Then Exit Sub
If USMsgBox("Deseja realmente excluir a(s) duplicata(s) desta nota?", vbYesNo, "CAPRIND v5.0") = vbYes Then
    ProcExcluirArquivosRemessa txtId
    Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento WHERE id_nota = " & txtId.Text
    Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento_Nboletos WHERE id_nota = " & txtId.Text
    ProcExcluirContas txtId, Opt_saida, txttipocliente
    Conexao.Execute "Update tbl_Totais_Nota Set Valor_total_receber_pagar = 0 where ID_nota = " & txtId
    Conexao.Execute "DELETE FROM CC_realizado where id_duplicata = " & txtId.Text
    If Opt_saida.Value = True Then ProcExcluirImpostoPagar
    USMsgBox ("Duplicata(s) excluída(s) com sucesso."), vbInformation, "CAPRIND v5.0"
    '==================================
    Modulo = Formulario
    Evento = "Excluir duplicata(s)"
    ID_documento = txtId
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    ProcLimpaCamposDuplicata
    ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)
    Sit_REG = 0
    Novo_Nota3 = False
    
    If Faturamento_NF_Saida = True Then
        Opt_saida.Enabled = True
        Opt_entrada.Enabled = True
    Else
        'Opt_saida.Enabled = False
        Opt_entrada.Enabled = True
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcExcluirContas(ID_nota As Long, Saida As Boolean, TipoCliente As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockReadOnly
If TBAbrir.EOF = False Then
    'Fornecedor
    If Saida = True And Len(TipoCliente) = 1 Then GoTo ExcluirPagar
    'Cliente
    If Saida = False And Len(TipoCliente) = 2 Then GoTo ExcluirReceber
Else
    If Saida = True Then GoTo ExcluirReceber Else GoTo ExcluirPagar
End If
TBAbrir.Close

ExcluirReceber:
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_contas_Receber where id_nota = " & ID_nota & " and Bloqueado = 'False' and Status <> 'DUPLICATA DESCONTADA RECOMPRADA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            Conexao.Execute "DELETE from CC_realizado where Operacao = 'Crédito' and ID_financeiro = " & TBContas!IDintconta
            
            If (IsNull(TBContas!Proposta) = True Or TBContas!Proposta = "") And TBContas!Logsit = "N" Then
                'Contas contabeis
                Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'R' and Deposito_transf = 'False'"
                'Fluxo de Caixa
                Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                'Número dos boletos
                Conexao.Execute "DELETE from tbl_Detalhes_Recebimento_Nboletos where IDContaReceber = " & TBContas!IDintconta
                'Conta
                Conexao.Execute "DELETE from tbl_contas_Receber where IDintconta = " & TBContas!IDintconta
            ElseIf IsNull(TBContas!Proposta) = False And TBContas!Proposta <> "" Then
                    TBContas!ID_nota = 0
                    TBContas!NFiscal = ""
                    TBContas.Update
            End If
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close
    GoTo Prosseguir

ExcluirPagar:
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_ContasPagar where id_nota = " & ID_nota & " and Bloqueado = 'False' and Despesas_NF = 'False'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            If (IsNull(TBContas!Txt_pedido) = True Or TBContas!Txt_pedido = "") And TBContas!Logsit = "N" Then
                'Contas contabeis
                Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'P' and Deposito_transf = 'False'"
                'Fluxo de Caixa
                Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                'Conta
                Conexao.Execute "DELETE from tbl_ContasPagar where IDintconta = " & TBContas!IDintconta
            ElseIf IsNull(TBContas!Txt_pedido) = False And TBContas!Txt_pedido <> "" Then
                    TBContas!ID_nota = 0
                    TBContas!txt_ndocumento = ""
                    TBContas.Update
            End If
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close

Prosseguir:
    Conexao.Execute "Update CC set CC.ID_Financeiro = 0 from CC_realizado CC INNER JOIN tbl_Detalhes_Recebimento TBL on CC.ID_duplicata = TBL.ID where TBL.ID_nota = " & ID_nota

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub ProcExcluirServico()
On Error GoTo tratar_erro

If Excluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
Permitido = False
With Listaservicos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If USMsgBox("Deseja realmente excluir este(s) serviço(s)?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
            End If
            Permitido = True
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir serviço"
                ID_documento = .ListItems(InitFor)
                ProcVerificaTipoNF False
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
                Documento1 = "Cód. interno: " & TBFI!int_Cod_Produto
                ProcGravaEvento
                '==================================
                                
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor)
                
                Set TBTempo = CreateObject("adodb.recordset")
                TBTempo.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBTempo.EOF = False Then
                    Do While TBTempo.EOF = False
                        IDlista = TBTempo!ID_carteira
                        Desenho = TBTempo!Codinterno
                        Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBTempo!ID
                        
                        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                        ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                        ProcExcluirPedidosNF IDlista, Desenho
                        TBTempo.MoveNext
                    Loop
                End If
                TBTempo.Close
            End If
            TBFI.Close
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe o(s) serviço(s) antes de excluir."), vbExclamation, "CAPRIND v5.0"
Else
    USMsgBox ("Serviço(s) excluído(s) com sucesso."), vbInformation, "CAPRIND v5.0"
    txtcodServ.Text = ""
    ProcLimpaCamposServicos
    ProcCarregaListaServicos
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    Novo_Nota2 = False
    Frame1(12).Enabled = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirTransp()
On Error GoTo tratar_erro

If Formulario = "Estoque/Ordem de faturamento" Then Exit Sub

If Excluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If txtNFiscal = "" Then Familiatext = "a ordem de faturamento" Else Familiatext = "a nota fiscal"
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtId, "ordem de faturamento", "transportadora", "excluir esta", False, True) = False Then Exit Sub

Permitido1 = True
If NF_cancelada = True Then
    Permitido1 = False
    NomeCampo = "cancelada"
    GoTo Prosseguir
End If
If NF_enviada = True Then
    Permitido1 = False
    NomeCampo = "enviada"
    GoTo Prosseguir
End If
If NFe_liberada = True Then
    Permitido1 = False
    NomeCampo = "enviada para SEFAZ"
End If
Prosseguir:
    If Permitido1 = False Then
        USMsgBox ("Não é permitido excluir, pois a nota já foi " & NomeCampo & "."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
    If USMsgBox("Deseja realmente excluir os dados de transporte desta nota?", vbYesNo, "CAPRIND v5.0") = vbYes Then
        Acao = "excluir"
        If txtidinttransp = "" Then
            NomeCampo = "a transportadora"
            ProcVerificaAcao
            Exit Sub
        End If
        Conexao.Execute "DELETE FROM tbl_Dados_Transp WHERE id_nota =" & txtId.Text
        USMsgBox ("Transportadora excluída com sucesso."), vbInformation, "CAPRIND v5.0"
        '==================================
        Modulo = Formulario
        Evento = "Excluir transportadora"
        ID_documento = txtidinttransp
        ProcVerificaTipoNF False
        If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
        Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
        Documento1 = ""
        ProcGravaEvento
        '==================================
        ProcLimpaCamposTransp
    End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmdfiltrarordem_Click()
On Error GoTo tratar_erro

If txtCod_Produto.Text = "" Then
    NomeCampo = "código interno"
    Acao = "pesquisar"
    ProcVerificaAcao
    txtCod_Produto.SetFocus
    Exit Sub
End If
Faturamento_ListaProdudos = True
frmFaturamento_dadosordem.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdfiltrarordem_servico_Click()
On Error GoTo tratar_erro

If txtcodServ.Text = "" Then
    NomeCampo = "código interno"
    Acao = "pesquisar"
    ProcVerificaAcao
    txtcodServ.SetFocus
    Exit Sub
End If
Faturamento_ListaProdudos = False
frmFaturamento_dadosordem.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcGerarDuplicatas()
On Error GoTo tratar_erro

Dim vetor As Variant 'Usado para calculo de parcelas
Dim ValorFatura As Double 'Valor original da fatura
Dim ValorDuplicata As Double 'Valor calculado da  duplicata
Dim SaldoFatura As Double 'Valor saldo da duplicata
Dim SaldoDiferenca As Double 'Diferenca do saldo Final

Dim ParNum As String 'Numero da parcela
Dim ParTot As String 'Total de parcelas

'========================================
' Se não tiver nota selecionada não gera
'========================================
  ID_nota = txtId.Text

  If ID_nota = 0 Then
  Exit Sub
  End If
'==================================================
' Verifica se teve alteração na nota
'==================================================
  FunVerifAlteracaoNF ID_nota, True, OptServico
  
'  If Permitido1 = False Then
'  USMsgBox ("Não é permitido gerar duplicatas, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
'  Exit Sub
'  End If
'==============================================
' Verifica o tipo de CFOP se tem cobrança
'==============================================
  If Opt_saida.Value = True Then
      Set TBAbrir = CreateObject("adodb.recordset")
      TBAbrir.Open "Select CFOP.IDCountCfop from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & txtId & " and (CFOP.Vendas = 'True' or CFOP.MaoObra = 'True' or CFOP.Devolucao = 'True' or CFOP.Remessa = 'True')", Conexao, adOpenKeyset, adLockOptimistic
      If TBAbrir.EOF = True Then
          USMsgBox ("Não é permitido gerar duplicatas, pois a CFOP não permite."), vbExclamation, "CAPRIND v5.0"
          TBAbrir.Close
          Exit Sub
      End If
      TBAbrir.Close
  End If
'=========================================================================
' Verifica se tem duplicatas geradas e se foram movimentadas no financeiro
'=========================================================================
If lst_Duplicata.ListItems.Count <> 0 Then
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    If Opt_saida.Value = True Then
        TBContas.Open "Select * from tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    Else
        TBContas.Open "Select * from tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    End If
    TBContas.Close
    If Permitido = False Then
        USMsgBox ("Não é permitido gerar duplicatas, pois existem duplicatas na nota que já foram alteradas no financeiro."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
End If

Acao = "gerar o(s) pagamento(s)"

'=====================================================================
' Verifica se existe valor na fatura
'=====================================================================
If txtValorFatura.Text = "" Then
    USMsgBox ("Informe o valor da fatura antes de gerar o(s) pagamento(s)."), vbExclamation, "CAPRIND v5.0"
    txtValorFatura.SetFocus
    Exit Sub
End If

'ProcCarregaTotaisNota IIf(txtID = "", 0, txtID)
ValorFatura = txtValorFatura


If ValorFatura = 0 Then
    USMsgBox ("Informe o valor da fatura antes de gerar o(s) pagamento(s)."), vbExclamation, "CAPRIND v5.0"
    txtValorFatura.SetFocus
    Exit Sub
End If

ProcVerificaTipoNF False

'=======================================================================
' Verifica se existem condições de recebimento informadas
'=======================================================================
If txt_Cond_Recebimento.Text = "" Or txt_Cond_Recebimento.Text = " " Then
    USMsgBox ("Informe as condições de pagamento/recebimento antes de gerar o(s) pagamento(s)."), vbExclamation, "CAPRIND v5.0"
    txt_Cond_Recebimento.SetFocus
    Exit Sub
End If

If IsNumeric(Left(txt_Cond_Recebimento, 1)) = False Then
    USMsgBox ("Informe as condições de pagamento/recebimento corretamente antes de gerar o(s) pagamento(s)."), vbExclamation, "CAPRIND v5.0"
    txt_Cond_Recebimento.SetFocus
    Exit Sub
End If

'======================================================================
' Se for nota de serviços
'======================================================================
If Opt_saida.Value = True And (TipoNF = "SA" Or TipoNF = "M1SA") Then
'==========================================
' Busca valores retidos dos serviços
'==========================================
ProcSomaRetencaoServicos
 ValorFatura = ValorFatura - Valor_Retencao_Servico
 If Valor_Retencao_Servico = 0 Then
  ProcVerificaEmpresaCliente
  If Permitido = True Then
   ProcVerificaImposto
  End If
 End If
End If

'==============================================
' Pega data de emissão da nota fiscal
'==============================================
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select dt_DataEmissao from tbl_Dados_Nota_Fiscal where ID = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
  Dataini = TBAbrir!dt_DataEmissao
End If
TBAbrir.Close
'==========================================
' Inicio dos calculos
'==========================================
With lst_Duplicata
Select Case Sit_REG
Case 0
.ListItems.Clear

vetor = Split(txt_Cond_Recebimento.Text, "/")
Parcelas = UBound(vetor) + 1 'Numero de parcelas
SaldoFatura = ValorFatura
'===========================================
' Calcula valor da parcela
'===========================================
ValorDuplicata = Format(ValorFatura / Parcelas, "###,##0.00")
'ValorDuplicata = Format(ValorDuplicata, "###,##0.00")


For i = LBound(vetor) To UBound(vetor)

Parcela = i + 1 'Numero da parcela
'USMsgBox ReturnNumbersOnly(vetor(i))
Dias = ReturnNumbersOnly(vetor(i)) 'Dias para vencimento

'=======================================
' Monta string da parcela
'=======================================
If Len(Parcela) = 1 Then
 ParNum = "00" & Parcela
ElseIf Len(Parcela) = 2 Then
 ParNum = "0" & Parcela
End If
'=======================================
' Monta string de quantidade de parcelas
'=======================================
If Len(Parcelas) = 1 Then
 ParTot = "00" & Parcelas
ElseIf Len(Parcelas) = 2 Then
 ParTot = "0" & Parcelas
End If

'USMsgBox "Parcela " & ParNum & " de " & ParTot & " para " & vetor(i) & " Dias"

'===========================================
' Carrega dados na lista
'===========================================
With lst_Duplicata


SaldoDiferenca = SaldoFatura - ValorDuplicata

'Debug.print Round(SaldoDiferenca, 2)

 .ListItems.Add(Parcela) = Format(Dataini + Dias, "DD/MM/YYYY")
 .ListItems(Parcela).ListSubItems.Add , , IIf(ValorDuplicata <= SaldoFatura, ValorDuplicata, SaldoFatura)
 .ListItems(Parcela).ListSubItems.Add , , ParNum & "/" & ParTot
 .ListItems.Item(Parcela).Checked = True
 SaldoFatura = SaldoFatura - ValorDuplicata
End With
Total = Total + Round(Valorcalculado, 2)

Next
'=============================================
' Grava dados das duplicatas geradas no banco
'=============================================
  ProcGravarDuplicatas
'=====================================================
' Verifica se vai enviar duplicatas para o financeiro
'=====================================================
  If txtNFiscal <> "" And txtDtValidacao <> "" Then
   If USMsgBox("Deseja enviar a(s) duplicata(s) para o financeiro agora?", vbYesNo, "CAPRIND v5.0") = vbYes Then ProcEnviarDupFinanceiro IIf(txtId = "", 0, txtId), True
  End If
'=====================================================
' Se já existir duplicatas
'=====================================================
Case 1
USMsgBox ("Exclua a(s) duplicata(s) da lista, antes de gerar."), vbExclamation, "CAPRIND v5.0"
End Select

End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcSomaRetencaoServicos()
On Error GoTo tratar_erro

Valor_Retencao_Servico = 0

Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & ID_nota & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Do While TBTotaisnota.EOF = False
        If TBTotaisnota!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_PIS_serv), 0, TBTotaisnota!Total_PIS_serv)
        If TBTotaisnota!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_Cofins_serv), 0, TBTotaisnota!Total_Cofins_serv)
        If TBTotaisnota!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_CSLL_serv), 0, TBTotaisnota!Total_CSLL_serv)
        If TBTotaisnota!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_INSS_serv), 0, TBTotaisnota!Total_INSS_serv)
        If TBTotaisnota!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!VlrISS), 0, TBTotaisnota!VlrISS)
        If TBTotaisnota!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
        TBTotaisnota.MoveNext
    Loop
End If
TBTotaisnota.Close

StrSql = "Update tbl_Totais_Nota set Valor_total_retencao_serv = '" & Replace(Valor_Retencao_Servico, ",", ".") & "' where id_Nota = '" & ID_nota & "'"

'Debug.print StrSql

Conexao.Execute StrSql

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcGravarDuplicatas()
On Error GoTo tratar_erro

Conexao.Execute "DELETE from tbl_detalhes_recebimento WHERE id_nota = " & ID_nota
With lst_Duplicata
    For InitFor = 1 To .ListItems.Count
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select * from tbl_detalhes_recebimento WHERE id_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
        TBVendas.AddNew
        TBVendas!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBVendas!ID_nota = ID_nota
        TBVendas!txt_Parcela = .ListItems(InitFor).ListSubItems(2)
        TBVendas!dt_Vencimento = .ListItems(InitFor)
        TBVendas!Tipo_doc = cmbtipo_conta
        TBVendas!txt_Cond_Recebimento = txt_Cond_Recebimento
        TBVendas!txt_Portador_Banco = IIf(cbo_PortBanco = "", Null, cbo_PortBanco)
        TBVendas!txt_Agencia = txt_Agencia
        TBVendas!txt_conta = txt_conta
        TBVendas!dbl_Valor = .ListItems(InitFor).ListSubItems(1)
        TBVendas!Valor_Extenso = FunValorExtenso(TBVendas!dbl_Valor)
        TBVendas!txt_tipopagto = cmb_tipopagto
        TBVendas.Update
        TBVendas.Close
    Next InitFor
End With

ProcCarregaListaDuplicatas ID_nota

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcVerificaEmpresaCliente()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Codigo from Empresa where Simples = 'False'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then Permitido = True Else Permitido = False

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Simples from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If TBAbrir!Simples = False Then Permitido = True Else Permitido = False
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcVerificaImposto()
On Error GoTo tratar_erro

DestacaImpostos = "NÃO"
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & txtId & " and CFOP.Retem = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    DestacaImpostos = "SIM"
End If

Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from Empresa where Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    If TBFI!Simples = True Then Regime = 1
    If TBFI!Presumido = True Then Regime = 2
    If TBFI!Real = True Then Regime = 3
    If TBFI!Simples1 = True Then Regime = 4
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from Impostos where Regime = " & Regime & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If valor > TBAbrir!Acima And TBAbrir!Acima > 0 And DestacaImpostos = "SIM" Then
            Set TBTotaisnota = CreateObject("adodb.recordset")
            TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
            If TBTotaisnota.EOF = False Then
                ValorTotal = Format(valor - (IIf(IsNull(TBTotaisnota!Total_PIS_serv) = False, TBTotaisnota!Total_PIS_serv, 0) + IIf(IsNull(TBTotaisnota!Total_Cofins_serv) = False, TBTotaisnota!Total_Cofins_serv, 0) + IIf(IsNull(TBTotaisnota!Total_CSLL_serv) = False, TBTotaisnota!Total_CSLL_serv, 0) + IIf(IsNull(TBTotaisnota!Total_INSS_serv) = False, TBTotaisnota!Total_INSS_serv, 0) + IIf(IsNull(TBTotaisnota!Total_IRRF_serv) = False, TBTotaisnota!Total_IRRF_serv, 0)), "###,##0.00")
            End If
            TBTotaisnota.Close
        ElseIf valor >= 667 And valor <= 5000 And DestacaImpostos = "SIM" Then
                Set TBTotaisnota = CreateObject("adodb.recordset")
                TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBTotaisnota.EOF = False Then
                    ValorTotal = valor - IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
                End If
                TBTotaisnota.Close
        End If
    End If
    TBAbrir.Close
End If
TBFI.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcImprimirDuplicatas()
On Error GoTo tratar_erro

frmFaturamento_Prod_Serv_Menu_Impressao.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Cmdporcento_Click()
On Error GoTo tratar_erro

If txt_ValorNota.Text = "0,00" And txt_ValorNota2.Text = "0,00" Then
    USMsgBox ("Verifique o valor total da nota antes de gerar a(s) duplicata(s)."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
frm_Duplicata_porcento.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcAtualizarDadosAdicionais()
On Error GoTo tratar_erro

'======================================================================================
' Busca dados adicionais da CFOP e coloca na caixa de texto
'======================================================================================
 Set TBAliquota = CreateObject("adodb.recordset")
 StrSql = "Select NOP.txt_dados_adicionais from tbl_NaturezaOperacao NOP Inner Join tbl_Detalhes_Nota DN on  NOP.IDCountCfop = DN.ID_CFOP Where DN.ID_Nota = '" & txtId.Text & "'"
 TBAliquota.Open StrSql, Conexao, adOpenKeyset, adLockOptimistic
 
 If TBAliquota.EOF = False Then
 
 If TBAliquota!txt_dados_adicionais <> "" Then
 
 txtDados_DadosAdicionais.Text = TBAliquota!txt_dados_adicionais
 'Debug.print txtDados_DadosAdicionais.Text
 '=====================================================================================
 ' Busca dados adicionais para Redespacho
 '========================================
 ' Se a transportadora 2 para o redespacho for cliente
 '========================================
 
 If ComPedido = True Then
   Set TBPedido = CreateObject("adodb.recordset")
   StrSql = "Select VP.Ncotacao as Pedido,VC.* from vendas_proposta VP inner join vendas_comercial VC on VP.Cotacao = VC.cotacao where VP.Ncotacao = '" & Txt_proposta.Text & "'"
   TBPedido.Open StrSql, Conexao, adOpenKeyset, adLockOptimistic

If TBPedido.EOF = False Then
 If IsNull(TBPedido!Tipo_transp2) = False Then
   If TBPedido!Tipo_transp2 = "C" Then
   Set TBClientes = CreateObject("adodb.recordset")
   TBClientes.Open "Select * From clientes where NomeRazao = '" & TBPedido!Redespacho & "'", Conexao, adOpenKeyset, adLockOptimistic
     If TBClientes.EOF = False Then
     
      If IsNull(TBClientes!Tipo_endereco) = False And TBClientes!Tipo_endereco <> "" Then
          Endereco = TBClientes!Tipo_endereco & ": " & IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
      Else
          Endereco = IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
      End If
      Redespacho = "REDESPACHO:" & vbCrLf & "Nome: " & TBClientes!NomeRazao & vbCrLf & "Endereço: " & Endereco & " - Número: " & IIf(IsNull(TBClientes!Numero), "", TBClientes!Numero) & " - Cidade: " & IIf(IsNull(TBClientes!Cidade), "", TBClientes!Cidade) & " - UF: " & IIf(IsNull(TBClientes!UF), "", TBClientes!UF) & " - CNPJ: " & IIf(TBClientes!idTipoEmpresa = 1, IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ), "") & " - IE: " & IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE)
    End If
  End If
  
 '========================================
 ' Se a transportadora 2 para o redespacho for Fornecedor
 '========================================
 
 
 If TBPedido!Tipo_transp2 = "F" Then
   Set TBClientes = CreateObject("adodb.recordset")
   TBClientes.Open "Select * From Compras_fornecedores where Nome_razao = '" & TBPedido!Redespacho & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBClientes.EOF = False Then
      If IsNull(TBClientes!Tipo_endereco) = False And TBClientes!Tipo_endereco <> "" Then
          Endereco = TBClientes!Tipo_endereco & ": " & IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
      Else
          Endereco = IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
      End If
      Redespacho = "REDESPACHO:" & vbCrLf & "Nome: " & TBClientes!Nome_Razao & vbCrLf & "Endereço: " & Endereco & " - Número: " & IIf(IsNull(TBClientes!Numero), "", TBClientes!Numero) & " - Cidade: " & IIf(IsNull(TBClientes!Cidade), "", TBClientes!Cidade) & " - UF: " & IIf(IsNull(TBClientes!Estado), "", TBClientes!Estado) & " - CNPJ: " & IIf(TBClientes!idTipoEmpresa = 1, IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ), "") & " - IE: " & IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE)
    End If
 End If
 
 '========================================
 ' Se a transportadora 2 para o redespacho for Empresa
 '========================================
 If TBPedido!Tipo_transp2 = "E" Then
   Set TBClientes = CreateObject("adodb.recordset")
   TBClientes.Open "Select * From EMPRESA where CODIGO = " & TBPedido!IdIntTransp, Conexao, adOpenKeyset, adLockOptimistic
   If TBClientes.EOF = False Then
     If IsNull(TBClientes!Tipo_endereco) = False And TBClientes!Tipo_endereco <> "" Then
         Endereco = TBClientes!Tipo_endereco & ": " & IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
     Else
         Endereco = IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
     End If
   Redespacho = "REDESPACHO:" & vbCrLf & "Nome: " & TBClientes!Razao & vbCrLf & "Endereço: " & Endereco & " - Número: " & IIf(IsNull(TBClientes!Numero), "", TBClientes!Numero) & " - Cidade: " & IIf(IsNull(TBClientes!Cidade), "", TBClientes!Cidade) & " - UF: " & IIf(IsNull(TBClientes!UF), "", TBClientes!UF) & " - CNPJ: " & IIf(TBClientes!CODIGO = 1, IIf(IsNull(TBClientes!CNPJ), "", TBClientes!CNPJ), "") & " - IE: " & IIf(IsNull(TBClientes!IE), "", TBClientes!IE)
   End If
End If
End If

End If

     If txtDados_DadosAdicionais <> "" Then
      txtDados_DadosAdicionais = txtDados_DadosAdicionais & vbCrLf & Redespacho
     Else
       txtDados_DadosAdicionais = Redespacho
     End If
End If
'
' Set TBAliquota = CreateObject("adodb.recordset")
' TBAliquota.Open "Select * from tbl_NaturezaOperacao where IDCountCfop = " & ID_CFOP, Conexao, adOpenKeyset, adLockOptimistic
' If TBAliquota.EOF = False Then
' txtDados_DadosAdicionais.Text = TBAliquota!txt_dados_adicionais
' 'Debug.print txtDados_DadosAdicionais.Text
'End If

TBAliquota.Close
End If
End If
'TBFornecedor.Close
RegimeEmpresa = FunVerifRegimeEmpresa(txtIDEmpresa.Text)
If RegimeEmpresa = 1 Then 'Simples nacional

'=====================================================================================
' Aqui grava os dados adicionais
'=====================================================================================
ProcCalculaICMSSN

'Debug.print txtDados_DadosAdicionais
'=====================================================================================
' Carrega a aliquota do ICMS simples nacional
'=====================================================================================
TextoDados = Replace(txtDados_DadosAdicionais, Left("@NfAliqICMSSN", 13), txtICMSSN)
'=================================================================================================
' Valor aproximado dos tributos
'=================================================================================================
Set TBAbrir = CreateObject("adodb.recordset")
   TBAbrir.Open "Select * from tbl_Totais_Nota where ID_nota = " & txtId & "", Conexao, adOpenKeyset, adLockOptimistic
   If TBAbrir.EOF = False Then
   valorDAS = TBAbrir!Total_DAS
   Else
   valorDAS = "0,00"
   End If
   TBAbrir.Close

 TextoDados = Replace(TextoDados, Left("@NfVlrAproxTrib", 15), Format(valorDAS, "###,##0.00"))
'=====================================================================================
' Carrega o valor do icms simples nacional
'=====================================================================================
TextoDados = Replace(TextoDados, Left("@NfVlrICMSSN", 12), Format(txtValorICMSSN, "###,##0.00"))
txtDados_DadosAdicionais = TextoDados
'Debug.print TextoDados
Else



'Lucro presumido e lucro real

Set TBAbrir = CreateObject("adodb.recordset")
   TBAbrir.Open "Select * from tbl_Totais_Nota where ID_nota = " & txtId & "", Conexao, adOpenKeyset, adLockOptimistic
   If TBAbrir.EOF = False And TBAbrir!dbl_Valor_ICMS <> 0 Then

   AliquotaICMS = (TBAbrir!dbl_Valor_ICMS / TBAbrir!dbl_Base_ICMS) * 100
   ValorICMS = TBAbrir!dbl_Valor_ICMS
   Else
   AliquotaICMS = "0,00"
   ValorICMS = "0,00"
   End If
   TBAbrir.Close

TextoDados = Replace(txtDados_DadosAdicionais, Left("@NfAliqICMSSN", 13), AliquotaICMS)
'=================================================================================================
' Valor aproximado dos tributos
'=================================================================================================

 TextoDados = Replace(TextoDados, Left("@NfVlrAproxTrib", 15), Format(ValorICMS, "###,##0.00"))
'=====================================================================================
' Carrega o valor do icms simples nacional
'=====================================================================================
TextoDados = Replace(TextoDados, Left("@NfVlrICMSSN", 12), Format(ValorICMS, "###,##0.00"))
txtDados_DadosAdicionais = TextoDados
'Debug.print TextoDados



End If

ProcSalvarDadosAd


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcSalvarDadosAd()
On Error GoTo tratar_erro
Dim DadosAdicionais As String * 5000

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
FunVerifAlteracaoNF txtId, False, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If txtDados_DadosAdicionais <> "" Then

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_dadosadicionais where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = True Then
    TBAbrir.AddNew
   ' USMsgBox ("Novos dados adicionais cadastrados com sucesso."), vbInformation, "CAPRIND v5.0"
    '==================================
    Modulo = Formulario
    Evento = "Novo dados adicionais"
    ID_documento = txtId
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
    Documento1 = ""
    ProcGravaEvento
    '==================================
Else
    If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
    If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "os dados adicionais", False) = False Then Exit Sub

    'USMsgBox ("Dados adicionais salvos com sucesso."), vbInformation, "CAPRIND v5.0"
    '==================================
    Modulo = Formulario
    Evento = "Alterar dados adicionais"
    ID_documento = txtId
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
    Documento1 = ""
    ProcGravaEvento
    '==================================
End If

TBAbrir!IDNotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
TBAbrir!ID_nota = txtId.Text
TBAbrir!mem_corpo = Trim(txtDados_Corpo)
TBAbrir!mem_DadosAdicionais = Trim(txtDados_DadosAdicionais.Text)
txtDados_DadosAdicionais.MaxLength = 0
txtDados_DadosAdicionais = Trim(txtDados_DadosAdicionais.Text)
TBAbrir.Update
USMsgBox "Dados adicionais salvos com sucesso!", vbInformation, "CAPRIND v5.0"
TBAbrir.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcEnviarDupFinanceiro(ID_nota As Long, MostrarMsg As Boolean)
On Error GoTo tratar_erro

If IsNumeric(txtIDEmpresa.Text) Then
IDempresa = txtIDEmpresa
End If

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If opt_Cancelada.Value = True Then
    USMsgBox ("Não é permitido enviar para o financeiro, pois a notas fiscal está cancelada."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If txtDtValidacao = "" Then
    USMsgBox ("Não é permitido enviar para o financeiro, pois a notas fiscal não foi validada."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If lst_Duplicata.ListItems.Count <> 0 Then
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    If Opt_saida.Value = True Then
        TBContas.Open "Select IDIntconta from tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    Else
        TBContas.Open "Select IDIntconta from tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (Txt_pedido IS NULL or Txt_pedido = N'')", Conexao, adOpenKeyset, adLockOptimistic
        If TBContas.EOF = False Then Permitido = False
    End If
    TBContas.Close
    If Permitido = False Then
        USMsgBox ("Não é permitido enviar para o financeiro, pois existem duplicatas na nota que já foram alteradas no financeiro."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
End If

Permitido2 = False
With lst_Duplicata
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True And lst_Duplicata.ListItems(InitFor).ListSubItems(4) = "NÃO" Then Permitido2 = True
    Next InitFor
End With
If Permitido2 = False Then
    USMsgBox ("Não é permitido enviar para o financeiro, pois as duplicatas já foram enviadas, exclua as duplicatas antes de enviar."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If lst_Duplicata.ListItems.Count = 0 Then
    USMsgBox "Antes de enviar para o financeiro é preciso gerar os pagamentos," & vbCrLf & "Clique no botão Gerar pagamentos.", vbExclamation, "CAPRIND v5.0"
    Exit Sub
Else
    'Corrige numero da nota fiscal e id nas contas geradas pelo pedido interno ou pedido de compra
    Permitido1 = False
    Set TBProposta = CreateObject("adodb.recordset")
    TBProposta.Open "Select * from tbl_proposta_nota where id_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBProposta.EOF = False Then
        Do While TBProposta.EOF = False
            Set TBContas = CreateObject("adodb.recordset")
            
            If Opt_saida.Value = True Then
                TBContas.Open "Select * from tbl_contas_receber where proposta = '" & TBProposta!Proposta & "' and Antecipacao = 'False' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                If TBContas.EOF = False Then
                    Permitido1 = True
                    Do While TBContas.EOF = False
                        TBContas!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBContas!ID_nota = ID_nota
                        TBContas.Update
                        
                        Conexao.Execute "Update tbl_Detalhes_Recebimento Set IDContaReceber = " & TBContas!IDintconta & " where ID_nota = " & ID_nota & " and txt_parcela = '" & TBContas!Parcela & "'"
                        
                        'Fluxo de Caixa
                        Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                        
                        TBContas.MoveNext
                    Loop
                End If
                TBContas.Close
            Else
                TBContas.Open "Select * from tbl_ContasPagar where txt_pedido = '" & TBProposta!Proposta & "' and Antecipacao = 'False' and Despesas_NF = 'False' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                If TBContas.EOF = False Then
                    Permitido1 = True
                    Do While TBContas.EOF = False
                        TBContas!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBContas!ID_nota = ID_nota
                        TBContas.Update
                        
                        'Fluxo de Caixa
                        Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                        
                        TBContas.MoveNext
                    Loop
                End If
                TBContas.Close
            End If
            TBProposta.MoveNext
        Loop
    End If
    TBProposta.Close
    
    If Permitido1 = True Then
        '==================================
        Modulo = Formulario
        Evento = "Vincular duplicata(s)"
        ID_documento = ID_nota
        ProcVerificaTipoNF False
        If txtNFiscal = "" Then NomeCampo = "N° ordem: " & ID_nota Else NomeCampo = "N° nota: " & txtNFiscal
        Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
        Documento1 = ""
        ProcGravaEvento
        '==================================
        ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)
        
        'If usMsgbox("Essa(s) conta(s) já foi(ram) vinculada(s) com as contas criadas através do(s) pedido(s). Deseja criar novas contas?", vbyesno, "CAPRIND v5.0") = vbNo Then
            'Novo_Nota3 = False
            'Permitido2 = False
            'Exit Sub
        'End If
    End If
    
    Permitido1 = True
    With lst_Duplicata
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True And lst_Duplicata.ListItems(InitFor).ListSubItems(4) = "NÃO" Then
                Valor3 = .ListItems(InitFor).ListSubItems(1)
                NovoValor = Replace(Valor3, ",", ".")
                
                'Verifica se é nota de devolução
                NFDevolucao = "Não"
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
                    NFDevolucao = "Sim"
                    'Fornecedor
                    If Opt_saida.Value = True And Len(txttipocliente) = 1 Then GoTo CriarCP
                    'Cliente
                    If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then GoTo CriarCR
                End If
                TBAbrir.Close
                
                If Opt_saida.Value = True Then
                    'Verifica se já existe conta cadastrada (cliente, mês vencimento, valor, sem id da nota) e vincula a nota
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select * from tbl_contas_receber where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "' and month(Vencimento) = '" & Month(lst_Duplicata.ListItems(InitFor)) & "' and year(Vencimento) = '" & Year(lst_Duplicata.ListItems(InitFor)) & "' and Valor = " & NovoValor & " and Id_empresa = " & IDempresa & " and LogSit = 'N' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        If USMsgBox("Já existe uma conta a receber com estes dados, deseja vincular a esta nota?", vbYesNo, "CAPRIND v5.0") = vbYes Then
                            TBReceber!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                            TBReceber!ID_nota = ID_nota
                            
                            'Altera o vencimento e a parcela conforme conta a receber
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBAbrir!txt_Parcela = TBReceber!Parcela
                                TBAbrir!dt_Vencimento = TBReceber!Vencimento
                                
                                'Verifica se a conta a receber já tem boleto gerado
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from tbl_Detalhes_Recebimento where ID <> " & lst_Duplicata.ListItems(InitFor).ListSubItems(3) & " and IdContaReceber = " & TBReceber!IDintconta, Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    TBAbrir!Numero_documento = Right(txtNFiscal, 6) & "/" & Right(TBReceber!Parcela, 2)
                                    TBReceber!txt_ndocumento = TBAbrir!Numero_documento
                                    TBAbrir!Carteira = TBFI!Carteira
                                    TBAbrir!Nosso_Numero = TBFI!Nosso_Numero
                                    TBAbrir!Juros = TBFI!Juros
                                    TBAbrir!Multa = TBFI!Multa
                                    TBAbrir!Desconto = TBFI!Desconto
                                    TBAbrir!Instrucoes = TBFI!Instrucoes
                                    TBAbrir!Data_emissao = TBFI!Data_emissao
                                    TBAbrir!Seq_remessa = TBFI!Seq_remessa
                                    TBFI.Delete
                                Else
                                    TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                    TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                    TBReceber!Tipo_doc = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                                End If
                                TBFI.Close
                                
                                'Grava ID da conta a receber
                                TBAbrir!IdContaReceber = TBReceber!IDintconta
                                Conexao.Execute "Update tbl_Detalhes_Recebimento_Nboletos Set IdContaReceber = " & TBReceber!IDintconta & " where Nosso_numero = '" & TBAbrir!Nosso_Numero & "'"
                                
                                TBAbrir.Update
                            End If
                            TBAbrir.Close
                            TBReceber.Update
                            
                            'Fluxo de Caixa
                            Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo)
                            
                            Conexao.Execute "DELETE from familia_financeiro where idconta = " & TBReceber!IDintconta & " and TipoConta = 'R' and Deposito_transf = 'False'"
                            ProcCriaFamiliaFinanceiro
                            
                            ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)
                        Else
                            GoTo CriarCR
                        End If
                    Else
CriarCR:
                        If Permitido1 = True Then Conexao.Execute "DELETE from familia_financeiro where idnota = " & ID_nota & " and Deposito_transf = 'False'"
                        
                        'Insere dados na tabela contas a receber
                        Set TBReceber = CreateObject("adodb.recordset")
                        TBReceber.Open "Select * from tbl_contas_receber where id_nota = " & ID_nota & " and parcela = '" & lst_Duplicata.ListItems(InitFor).ListSubItems(2) & "' and ID_empresa = " & IDempresa & " and status = 'TÍTULO EM ABERTO' order by vencimento", Conexao, adOpenKeyset, adLockOptimistic
                        If TBReceber.EOF = True Then
                            TBReceber.AddNew
                            TBReceber!Parcial = False
                            TBReceber!titulodesc = False
                            TBReceber!Bloqueado = False
                            TBReceber!Logsit = "N"
                            TBReceber!IDtrocatitulo = 0
                            TBReceber!Antecipacao = False
                            TBReceber!status = "TÍTULO EM ABERTO"
                            TBReceber!Responsavel = pubUsuario
                            
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select txt_Portador_Banco, txt_tipopagto, Tipo_doc from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                TBReceber!Tipo_doc = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                            End If
                            TBAbrir.Close
                        End If
                        
                        TBReceber!NFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBReceber!ID_nota = ID_nota
                        TBReceber!Data_transacao = Date
                        TBReceber!emissao = txt_DtEmissao.Text
                        TBReceber!Nome_Razao = txt_Razao.Text
                        TBReceber!IDCliente = txtIDCliente
                        TBReceber!Cidade = txt_Municipio.Text
                        TBReceber!Estado = cbo_UF.Text
                        
                        If NFDevolucao = "Sim" Then
                            TBReceber!Devolucao = True
                            TBReceber!valor = "-" & .ListItems(InitFor).ListSubItems(1)
                        Else
                            TBReceber!Devolucao = False
                            TBReceber!valor = .ListItems(InitFor).ListSubItems(1)
                        End If
                        TBReceber!ValorExtenso = FunValorExtenso(TBReceber!valor)
                        TBReceber!Vencimento = lst_Duplicata.ListItems(InitFor)
                        TBReceber!Parcela = lst_Duplicata.ListItems(InitFor).ListSubItems(2)
                        TBReceber!ID_empresa = IDempresa
                        TBReceber!Tipo = "CL"
                        
                        'Grava número do documento conf. boleto e salva campo obs
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select Numero_documento, Obs from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            TBReceber!txt_ndocumento = IIf(IsNull(TBAbrir!Numero_documento), "", TBAbrir!Numero_documento)
                            TBReceber!Observacoes = TBAbrir!Obs
                        Else
                            TBReceber!txt_ndocumento = "NF" & IIf(txtNFiscal = "", Null, txtNFiscal)
                        End If
                        TBAbrir.Close
                        TBReceber.Update
                        intidconta = TBReceber!IDintconta
                        
                        'Grava ID da conta a receber
                        Conexao.Execute "Update tbl_Detalhes_Recebimento Set IdContaReceber = " & intidconta & " where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3)
                        
                        'Fluxo de Caixa
                        Set TBFluxo = CreateObject("adodb.recordset")
                        TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo), Conexao, adOpenKeyset, adLockOptimistic
                        If TBFluxo.EOF = True Then TBFluxo.AddNew
                        TBFluxo!IDintconta = TBReceber!IDintconta
                        TBFluxo!Operacao = "À Creditar"
                        TBFluxo!Data = TBReceber!Vencimento
                        TBFluxo!valor = TBReceber!valor
                        TBFluxo!Descricao = TBReceber!Nome_Razao
                        TBFluxo!status = "N"
                        TBFluxo!int_NotaFiscal = TBReceber!NFiscal
                        TBFluxo!Instituicao = TBReceber!Banco
                        TBFluxo!ID_empresa = IDempresa
                        TBFluxo!Bloqueado = False
                        TBFluxo.Update
                        Conexao.Execute "Update tbl_contas_receber Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
                        TBFluxo.Close
                        
                        ProcCriaFamiliaFinanceiro
                        
                        valor = IIf(txt_VlrTotalProd <> "", txt_VlrTotalProd.Text, 0)
                        
                        Set TBLISTA = CreateObject("adodb.recordset")
                        TBLISTA.Open "SELECT P.ID_CC, SUM(ISNULL(NFP.dbl_ValorTotal, 0)) as ValorTotal from (tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao NP ON NP.IDCountCfop = NFP.ID_CFOP) INNER JOIN Projproduto P ON P.Desenho = NFP.int_Cod_Produto where NFP.ID_nota = " & txtId & " and NP.CreditaCentroCusto = 'True' and P.ID_CC IS NOT NULL and P.ID_CC <> 0 group by P.ID_CC HAVING SUM(ISNULL(NFP.dbl_ValorTotal, 0)) > 0", Conexao, adOpenKeyset, adLockOptimistic
                        If TBLISTA.EOF = False Then
                            Do While TBLISTA.EOF = False
                                qt = (TBLISTA!ValorTotal / valor) * 100
                                Qtd = Format(TBReceber!valor * qt) / 100
                                
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from CC_realizado", Conexao, adOpenKeyset, adLockOptimistic
                                TBFI.AddNew
                                ProcEnviaDadosCredCC TBLISTA!ID_CC, 0
                                TBFI.Update
                                IDlista = TBFI!ID
                                
                                'Grava movimentação no centro consolidado
                                Set TBAfericao = CreateObject("adodb.recordset")
                                TBAfericao.Open "Select * from Usuarios_Setor_Consolidacao where ID_CC_consolidado = " & TBLISTA!ID_CC, Conexao, adOpenKeyset, adLockOptimistic
                                If TBAfericao.EOF = False Then
                                    Do While TBAfericao.EOF = False
                                        Set TBFI = CreateObject("adodb.recordset")
                                        TBFI.Open "Select * from CC_realizado where ID_CC = " & TBAfericao!ID_CC & " and ID_origem = " & IDlista, Conexao, adOpenKeyset, adLockOptimistic
                                        If TBFI.EOF = True Then TBFI.AddNew
                                        ProcEnviaDadosCredCC TBAfericao!ID_CC, IDlista
                                        TBFI.Update
                                        TBFI.Close
                                        
                                        Set TBCiclo = CreateObject("adodb.recordset")
                                        TBCiclo.Open "Select * from Usuarios_Setor_Consolidacao where ID_CC_consolidado = " & TBAfericao!ID_CC, Conexao, adOpenKeyset, adLockOptimistic
                                        If TBCiclo.EOF = False Then
                                            Do While TBCiclo.EOF = False
                                                Set TBFI = CreateObject("adodb.recordset")
                                                TBFI.Open "Select * from CC_realizado where ID_CC = " & TBCiclo!ID_CC & " and ID_origem = " & IDlista, Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFI.EOF = True Then TBFI.AddNew
                                                ProcEnviaDadosCredCC TBCiclo!ID_CC, IDlista
                                                TBFI.Update
                                                TBFI.Close
                                                
                                                TBCiclo.MoveNext
                                            Loop
                                        End If
                                        TBCiclo.Close
                                        
                                        TBAfericao.MoveNext
                                    Loop
                                End If
                                TBAfericao.Close
                                
                                TBLISTA.MoveNext
                            Loop
                        End If
                        TBLISTA.Close
                    End If
                    TBReceber.Close
                Else
                    'Verifica se já existe conta cadastrada (fornecedor, mês pagamento, valor, sem id da nota) e vincula a nota
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select * from tbl_contaspagar where int_codforn = " & txtIDCliente & " and txt_fornecedor = '" & txt_Razao & "' and month(dt_Pagamento) = '" & Month(lst_Duplicata.ListItems(InitFor)) & "' and year(dt_Pagamento) = '" & Year(lst_Duplicata.ListItems(InitFor)) & "' and dbl_valorpagto = " & NovoValor & " and Id_empresa = " & IDempresa & " and LogSit = 'N' and (Bloqueado = 'False' or Bloqueado is null) and (id_nota = 0 or id_nota is null)", Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        If USMsgBox("Já existe uma conta a pagar com estes dados, deseja vincular a esta nota?", vbYesNo, "CAPRIND v5.0") = vbYes Then
                            TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                            TBReceber!ID_nota = ID_nota
                            
                            'Altera o vencimento e a parcela conforme conta a pagar
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select dt_Vencimento, txt_Parcela from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBAbrir!dt_Vencimento = TBReceber!dt_Pagamento
                                TBAbrir!txt_Parcela = TBReceber!txt_Parcela
                                TBAbrir.Update
                            End If
                            TBAbrir.Close
                            
                            TBReceber.Update
                            
                            'Fluxo de Caixa
                            Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo)
                            
                            Conexao.Execute "DELETE from familia_financeiro where idconta = " & TBReceber!IDintconta & " and TipoConta = 'P' and Deposito_transf = 'False'"
                            ProcCriaFamiliaFinanceiro
                            
                            ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)
                        Else
                            GoTo CriarCP
                        End If
                    Else
CriarCP:
                        If Permitido1 = True Then Conexao.Execute "DELETE from familia_financeiro where idnota = " & ID_nota & " and Deposito_transf = 'False'"
                        
                        'Insere dados na tabela contas a pagar
                        Set TBReceber = CreateObject("adodb.recordset")
                        TBReceber.Open "Select * from tbl_contaspagar where id_nota = " & ID_nota & " and txt_parcela = '" & lst_Duplicata.ListItems(InitFor).ListSubItems(2) & "' and ID_empresa = " & IDempresa & " and status = 'TÍTULO EM ABERTO' and Despesas_NF = 'False' order by dt_pagamento", Conexao, adOpenKeyset, adLockOptimistic
                        If TBReceber.EOF = True Then
                            TBReceber.AddNew
                            TBReceber!Parcial = False
                            TBReceber!impresso = False
                            TBReceber!Bloqueado = False
                            TBReceber!Logsit = "N"
                            TBReceber!Despesas_NF = False
                            TBReceber!Antecipacao = False
                            TBReceber!status = "TÍTULO EM ABERTO"
                            TBReceber!Responsavel = pubUsuario
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select txt_Portador_Banco, txt_tipopagto, Tipo_doc from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                TBReceber!Banco = IIf(IsNull(TBAbrir!txt_Portador_Banco), Null, TBAbrir!txt_Portador_Banco)
                                TBReceber!FormaBaixa = IIf(IsNull(TBAbrir!txt_tipopagto), "", TBAbrir!txt_tipopagto)
                                TBReceber!Class_conta = IIf(IsNull(TBAbrir!Tipo_doc), "", TBAbrir!Tipo_doc)
                            End If
                            TBAbrir.Close
                        End If
                        TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
                        TBReceber!ID_nota = ID_nota
                        TBReceber!Data_transacao = Date
                        TBReceber!Dt_emissao = txt_DtEmissao.Text
                        TBReceber!dt_Pagamento = lst_Duplicata.ListItems(InitFor)
                        TBReceber!Competencia = IIf(Month(txt_DtEmissao.Text) < 10, "0" & Month(txt_DtEmissao.Text), Month(txt_DtEmissao.Text)) & "/" & Year(txt_DtEmissao.Text)
                        TBReceber!int_codforn = txtIDCliente
                        TBReceber!txt_condpag = ""
                        
                        If NFDevolucao = "Sim" Then
                            TBReceber!Devolucao = True
                            TBReceber!dbl_valorpagto = "-" & .ListItems(InitFor).ListSubItems(1)
                        Else
                            TBReceber!Devolucao = False
                            TBReceber!dbl_valorpagto = .ListItems(InitFor).ListSubItems(1)
                        End If
                        
                        TBReceber!txt_Parcela = lst_Duplicata.ListItems(InitFor).ListSubItems(2)
                        TBReceber!Txt_fornecedor = txt_Razao
                        TBReceber!ID_empresa = IDempresa
                        TBReceber!Tipo = "FO"
                        
                        'Salva Obs
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select Obs from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then TBReceber!txt_observacoes = TBAbrir!Obs
                        TBAbrir.Close
                        
                        TBReceber.Update
                        
                        'Cria centro de custo
                        Conexao.Execute "Update CC_realizado Set ID_Financeiro = " & TBReceber!IDintconta & " where ID_duplicata = " & lst_Duplicata.ListItems(InitFor).ListSubItems(3)
                        
                        'Fluxo de Caixa
                        Set TBFluxo = CreateObject("adodb.recordset")
                        TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo) & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
                        If TBFluxo.EOF = True Then TBFluxo.AddNew
                        TBFluxo!IDintconta = TBReceber!IDintconta
                        TBFluxo!Operacao = "À Debitar"
                        TBFluxo!Data = TBReceber!dt_Pagamento
                        TBFluxo!valor = TBReceber!dbl_valorpagto
                        TBFluxo!Descricao = TBReceber!Txt_fornecedor
                        TBFluxo!status = "N"
                        TBFluxo!int_NotaFiscal = TBReceber!txt_ndocumento
                        TBFluxo!Instituicao = TBReceber!Banco
                        TBFluxo!ID_empresa = IDempresa
                        TBFluxo!Bloqueado = False
                        TBFluxo.Update
                        Conexao.Execute "Update tbl_contaspagar Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
                        TBFluxo.Close
                        ProcCriaFamiliaFinanceiro
                    End If
                    TBReceber.Close
                End If
            End If
            Permitido1 = False
        Next InitFor
    End With
    If Opt_entrada = True Then procEnviarImpostoFinanceiro
End If

If MostrarMsg = True Then USMsgBox ("Nova(s) duplicata(s) enviada(s) para o financeiro com sucesso."), vbInformation, "CAPRIND v5.0"
'==================================
Modulo = Formulario
Evento = "Nova(s) duplicata(s)"
ID_documento = ID_nota
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & ID_nota Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = ""
ProcGravaEvento
'==================================
Novo_Nota3 = False
If NFDevolucao = "Sim" Then USMsgBox ("Essa é uma nota de devolução, não se esqueça de revisar a(s) conta(s) contábil(eis)."), vbInformation, "CAPRIND v5.0"
ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcEnviaDadosCredCC(ID_CC As Long, ID_origem As Long)
On Error GoTo tratar_erro

TBFI!ID_financeiro = TBReceber!IDintconta
TBFI!Data = TBReceber!Vencimento
TBFI!Responsavel = pubUsuario
TBFI!ID_empresa = TBReceber!ID_empresa
TBFI!Operacao = "Crédito"
TBFI!ID_CC = ID_CC
TBFI!valor = Qtd
TBFI!Percentual = qt
TBFI!Bloqueado = False
TBFI!ID_origem = ID_origem

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCriaFamiliaFinanceiro()
On Error GoTo tratar_erro

Frete = 0
Seguro = 0
Acessorias = 0
QuantsolicitadoN2 = 0
ValorICMS = 0

Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Totais_Nota where id_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
    Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
End If

ProcSomaRetencaoServicos

'Verifica produtos de remessa
qt = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as qt from tbl_Detalhes_Nota where id_nota = " & txtId.Text & " and Tipo = 'P' and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    qt = IIf(IsNull(TBProduto!qt), 0, TBProduto!qt)
End If

'Verifica produtos de retorno que somam o valor no total da nota
VlrTotalRetorno = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & txtId.Text & " and Tipo = 'P' and Retorno = 'True' and Soma_retorno_totalnf = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
End If
TBProduto.Close

Valor_Duplicatas = 0
Valor1 = 0
ValorTotal = 0
valor = IIf(txtTotalservicos = "", 0, txtTotalservicos)

'Valor total dos produtos com retenção
Valor1 = IIf(txt_ValorNota = "", 0, txt_ValorNota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - valor
ValorTotal = (Valor1 + valor) - Valor_Retencao_Servico
If Valor_Retencao_Servico = 0 Then
    If Opt_saida.Value = True And (TipoNF = "SA" Or TipoNF = "M1SA") Then
        'Valor total dos serviços com retenção
        ProcVerificaEmpresaCliente
        If Permitido = True Then ProcVerificaImposto
    End If
End If
ValorTotal = Format(ValorTotal - VlrTotalRetorno - qt, "###,##0.00")

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "select NFP.*, P.Compras, P.Vendas from tbl_Detalhes_Nota NFP INNER JOIN projproduto P ON NFP.int_Cod_Produto = P.Desenho where NFP.ID_Nota = " & txtId & " and NFP.Retorno = 'False' and NFP.Remessa = 'False'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        If TBProduto!Tipo = "P" Then
            'Verifica valores para somar com o valor dos produtos
            'Frete
            Frete = IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
            
            'Seguro
            Seguro = IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
            
            'Outras despesas
            Acessorias = IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
            
            'Desconto
            
            QuantsolicitadoN2 = IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto) + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                                        
            'ICMS subst.
            If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then
                InicioCST = Left(TBProduto!txt_CST, 1)
                If Len(TBProduto!txt_CST) = 4 Then FimCST = Right(TBProduto!txt_CST, 3) Else FimCST = Right(TBProduto!txt_CST, 2)
                If FimCST = "10" Or FimCST = "60" Or FimCST = "70" Or FimCST = "90" Then
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "select * from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        ValorICMS = IIf(IsNull(TBAbrir!Valor_ICMS_ST), 0, TBAbrir!Valor_ICMS_ST)
                    End If
                    TBAbrir.Close
                End If
            End If
        Else
            Valor_Retencao_Servico = 0
            If TBProduto!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_PIS_serv), 0, TBProduto!Total_PIS_serv)
            If TBProduto!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_Cofins_serv), 0, TBProduto!Total_Cofins_serv)
            If TBProduto!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_CSLL_serv), 0, TBProduto!Total_CSLL_serv)
            If TBProduto!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_INSS_serv), 0, TBProduto!Total_INSS_serv)
            If TBProduto!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
            If TBProduto!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_IRRF_serv), 0, TBProduto!Total_IRRF_serv)
        End If
        
        If TBProduto!Compras = True And TBProduto!Vendas = True Then
            If Opt_saida.Value = True Then
                NomeCampo = "ID_PC1"
                TextoFiltro = "ID_PC1 is not null and ID_PC1 <> 0"
            Else
                NomeCampo = "ID_PC"
                TextoFiltro = "ID_PC is not null and ID_PC <> 0"
            End If
        Else
            If TBProduto!Compras = True Then
                NomeCampo = "ID_PC"
                TextoFiltro = "ID_PC is not null and ID_PC <> 0"
            Else
                NomeCampo = "ID_PC1"
                TextoFiltro = "ID_PC1 is not null and ID_PC1 <> 0"
            End If
        End If
            
        Set TBFamilia = CreateObject("adodb.recordset")
        TBFamilia.Open "select " & NomeCampo & " as ID_PC from projproduto where desenho = '" & TBProduto!int_Cod_Produto & "' and " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
        If TBFamilia.EOF = False Then
            If TBFamilia!ID_PC <> "" Then
                'Verifica a porcentagem representada pelo valor da duplicata
                Permitido = False
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select CFOP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & txtId & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    Permitido = True
                    If ValorTotal > 0 Then ValorTotal = "-" & ValorTotal
                    
                    'Fornecedor
                    If Opt_saida.Value = True And Len(txttipocliente) = 1 Then
                        Valor2 = TBReceber!dbl_valorpagto
                        TipoConta = "P"
                        'Cliente
                    ElseIf Opt_entrada.Value = True And Len(txttipocliente) = 2 Then
                        Valor2 = TBReceber!valor
                        TipoConta = "R"
                    End If
                Else
                    If Opt_saida.Value = True Then
                        Valor2 = TBReceber!valor
                        TipoConta = "R"
                    Else
                        Valor2 = TBReceber!dbl_valorpagto
                        TipoConta = "P"
                    End If
                End If
                TBAbrir.Close
                
                Valor1 = Format((Valor2 * 100) / ValorTotal, "###,##0.0000000000")
                
                Set TBCiclo = CreateObject("adodb.recordset")
                TBCiclo.Open "select * from familia_financeiro where ID_PC = " & TBFamilia!ID_PC & " and idconta = " & TBReceber!IDintconta & " and TipoConta = '" & TipoConta & "'", Conexao, adOpenKeyset, adLockOptimistic
                If TBCiclo.EOF = True Then TBCiclo.AddNew
                TBCiclo!ID_PC = TBFamilia!ID_PC
                TBCiclo!IDConta = TBReceber!IDintconta
                TBCiclo!IDnota = txtId
                
                If TBProduto!Tipo = "P" Then
                    Qtde = (TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi) + Frete + Seguro + Acessorias + ValorICMS) - (IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS) + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins) + QuantsolicitadoN2)
                Else
                    Qtde = TBProduto!dbl_ValorTotal - Valor_Retencao_Servico
                End If
                If Permitido = True Then Qtde = "-" & Qtde
                valor = (Qtde * Valor1) / 100
                valor = IIf(IsNull(TBCiclo!valor), 0, TBCiclo!valor) + valor
                
                TBCiclo!valor = Format(valor, "###,##0.00")
                TBCiclo!TipoConta = TipoConta
                TBCiclo.Update
                TBCiclo.Close
            End If
        End If
        TBFamilia.Close
        TBProduto.MoveNext
    Loop
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cmdservicos_Click()
On Error GoTo tratar_erro

If NFe_liberada = False Then
    Faturamento_ListaProdudos = False
    frmFaturamento_ListaProduto.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcSalvarTransp()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtId, Familiatext, "a transportadora", "alterar", False, True) = False Then Exit Sub

Permitido1 = True
If NF_cancelada = True Then
    Permitido1 = False
    NomeCampo = "cancelada"
    GoTo Prosseguir
End If
If NF_enviada = True Then
    Permitido1 = False
    NomeCampo = "enviada"
    GoTo Prosseguir
End If
If NFe_liberada = True Then
    Permitido1 = False
    NomeCampo = "enviada para SEFAZ"
End If
Prosseguir:
    If Permitido1 = False Then
        USMsgBox ("Não é permitido salvar, pois a nota já foi " & NomeCampo & "."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
'===================================================================================
'Se não for ordem da faturamento verifica se os principais campos foram preenchidos
'===================================================================================
    If Formulario <> "Estoque/Ordem de faturamento" And cmbFrete.Text <> "9 - Sem Ocorrência de Transporte" Then
        Acao = "salvar"
        
        If cmbFrete = "" Then
            NomeCampo = "o tipo do frete"
            ProcVerificaAcao
            cmbFrete.SetFocus
            Exit Sub
        End If
        
        If txtTransp_uf_Transportadora = "" Then
            NomeCampo = "a UF da transportadora"
            ProcVerificaAcao
            txtTransp_uf_Transportadora.SetFocus
            Exit Sub
        End If
        
        If txtTransp_IE = "" Then
            NomeCampo = "a IE da transportadora"
            ProcVerificaAcao
            txtTransp_IE.SetFocus
            Exit Sub
        End If
        
        If Cmb_transp_marca = "" Then
            NomeCampo = "a marca"
            ProcVerificaAcao
            Cmb_transp_marca.SetFocus
            Exit Sub
        End If
        
        If txtTransp_Placa <> "" And txtTransp_uf = "" Then
            NomeCampo = "a UF da placa"
            ProcVerificaAcao
            txtTransp_uf.SetFocus
            Exit Sub
        End If
        
        If Cmb_via_transp = "" Then
            NomeCampo = "a via de transporte"
            ProcVerificaAcao
            Cmb_via_transp.SetFocus
            Exit Sub
        End If
        
        If Cmb_frete_contratado = "" Then
            NomeCampo = "o indicador da natureza do frete contratado"
            ProcVerificaAcao
            Cmb_frete_contratado.SetFocus
            Exit Sub
        End If
        
        If Txt_numeracao = "" Then
            NomeCampo = "Numeração"
            ProcVerificaAcao
            Txt_numeracao.SetFocus
            Exit Sub
        End If
        
        If Cmb_transp_especie = "" Then
            NomeCampo = "a espécie"
            ProcVerificaAcao
            Cmb_transp_especie.SetFocus
            Exit Sub
        End If

    End If
    
    If Faturamento_NF_Saida = True And txt_ValorNota <> "" Then
'        If txt_ValorNota > 10000 And chkSedex.Value = 1 Then
'            USMsgBox ("Não é permitido salvar transportadora, pois a nota ultrapassou o limite do sedex (R$10.000,00)."), vbExclamation, "CAPRIND v5.0"
'            Exit Sub
'        End If
    End If
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_dados_transp Where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        TBProduto.AddNew
        USMsgBox ("Novos dados de transporte cadastrados com sucesso."), vbInformation, "CAPRIND v5.0"
        Evento = "Novos dados de transporte"
    Else
        If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "a transportadora", False) = False Then Exit Sub
        
        USMsgBox ("Alteração efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
        Evento = "Alterar dados de transporte"
    End If
    TBProduto!ID_nota = txtId.Text
    If Cmb_tipo_transp <> "" Then
    Select Case Cmb_tipo_transp
        Case "Cliente": TipoTransp = "C"
        Case "Fornecedor": TipoTransp = "F"
        Case "Empresa": TipoTransp = "E"
    End Select
    TBProduto!Tipo_transp = TipoTransp
    End If
    TBProduto!IdIntTransp = IIf(txtidinttransp = "", 0, txtidinttransp)
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    
    'FreteConta = ""
    'If opt_emitente.Value = True Then FreteConta = 1
    'If opt_destinatario.Value = True Then FreteConta = 2
    'If Opt_terceiros.Value = True Then FreteConta = 3
    'If opt_sem_frete.Value = True Then FreteConta = 4
    'TBProduto!txt_Frete_Conta = IIf(FreteConta = "", Null, FreteConta)
    If cmbFrete <> "" Then TBProduto!txt_Frete_Conta = Left(cmbFrete, 1)
    
    TBProduto!txt_Placa = Trim(txtTransp_Placa)
    TBProduto!txt_UF_Placa = Trim(txtTransp_uf)
    TBProduto!txt_CNPJ = Trim(txtTransp_cnpj)
    TBProduto!txt_IE = Trim(txtTransp_IE)
    TBProduto!int_numero = Trim(txtTransp_numero.Text)
    TBProduto!int_Qtd_Transp = IIf(txtTransp_qtd.Text = "", Null, Trim(txtTransp_qtd.Text))
    TBProduto!txt_Especie = Trim(Cmb_transp_especie)
    TBProduto!txt_Marca = Trim(Cmb_transp_marca)
    TBProduto!Numeracao = Trim(Txt_numeracao)
    TBProduto!dbl_Peso_Bruto = IIf(txtTransp_pesoBruto = "", Null, txtTransp_pesoBruto)
    TBProduto!dbl_Peso_Liquido = IIf(txtTransp_pesoliquido = "", Null, txtTransp_pesoliquido)
    If Cmb_via_transp <> "" Then TBProduto!Via_transp = Left(Cmb_via_transp, 1)
    TBProduto!Codigo_ANTT = Trim(Txt_codigo_ANTT)
    If Cmb_frete_contratado <> "" Then TBProduto!Frete_contratado = Left(Cmb_frete_contratado, 1)
    TBProduto!txt_Razao = Trim(TxtTransp_nome)
    TBProduto!txt_Endereco = Trim(txtTransp_endereco)
    TBProduto!txt_Municipio = Trim(txtTransp_municipio)
    TBProduto!txt_UF = Trim(txtTransp_uf_Transportadora)
    'If chkSedex.Value = 1 Then TBProduto!Sedex = True Else TBProduto!Sedex = False
    'If Chk_enviar_XML_transp.Value = 1 Then TBProduto!EnviarXML = True Else TBProduto!EnviarXML = False
    TBProduto.Update
    
    '==================================
    Modulo = Formulario
    ID_documento = TBProduto!ID
    ProcVerificaTipoNF False
    If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
    Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
    If TxtTransp_nome <> "" Then Documento1 = "Transportadora: " & TxtTransp_nome Else Documento1 = ""
    ProcGravaEvento
    '==================================
    
    TBProduto.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
On Error GoTo tratar_erro
Select Case SSFaturamento.Tab
    Case 0:
        Select Case KeyCode
            Case vbKeyF2: ProcFiltrarCarteira
            Case vbKeyF3: If Formulario = "Estoque/Ordem de faturamento" Then ProcGerarOF
            Case vbKeyF5: If Formulario = "Estoque/Ordem de faturamento" Then ProcImprimirCartFat
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 1:
        Select Case KeyCode
            Case vbKeyInsert: ProcNovo
            Case vbKeyF2: ProcLocalizar
            Case vbKeyF3: ProcGravar
            Case vbKeyF4: If Cmb_opcao_lista = "Excluir" Then ProcExcluir
            Case vbKeyF5: ProcImprimir
            Case vbKeyF7: If Cmb_opcao_lista = "Copiar" Then ProcCopiar
            Case vbKeyF8:
                If Cmb_opcao_lista = "Validação" Then
                    ProcVerifiFormulario
                    ProcValidarRegistros ListaNota, Formulario
                End If
            Case vbKeyF9: ProcImpostos
            Case vbKeyF10: ProcNFe
            Case vbKeyF11: ProcNFSe
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 2:
        Select Case KeyCode
            Case vbKeyInsert: ProcNovoProduto
            Case vbKeyF3: ProcSalvarProduto
            Case vbKeyF4: If Cmb_opcao_lista_Produtos = "Excluir" Then ProcExcluirProduto
            Case vbKeyF5: ProcImprimir
            Case vbKeyF6: ProcCST
            'Case vbKeyF7: ProcRelacionar
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: Cmd_salvar_ICMS_SN_Click
            Case vbKeyF10: ProcAlterar
            Case vbKeyF11: ProcCancelar
            Case vbKeyF12: ProcImportacao
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 3:
        Select Case KeyCode
            Case vbKeyInsert: Procnovoservico
            Case vbKeyF3: ProcSalvarServico
            Case vbKeyF4: ProcExcluirServico
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: procImpostos_servico
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 4:
        Select Case KeyCode
            Case vbKeyF3: ProcSalvarTransp
            Case vbKeyF4: ProcExcluirTransp
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: ProcCarregaTransporteProposta
            Case vbKeyF10: ProcCarregaTransporteCliente
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 5:
        Select Case KeyCode
            Case vbKeyF3: ProcSalvarDadosAd
            'Case vbKeyF4: ProcExcluirDadosAd
            Case vbKeyF5: ProcImprimir
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: ProcRedespacho
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
    Case 6:
        Select Case KeyCode
            Case vbKeyInsert: ProcGerarDuplicatas
            Case vbKeyF3: ProcEnviarDupFinanceiro IIf(txtId = "", 0, txtId), True
            Case vbKeyF4: ProcExcluirDuplicatas
            Case vbKeyF5: ProcImprimirDuplicatas
            Case vbKeyF7: ProcPlanoContas
            Case vbKeyF8: ProcImpostos
            Case vbKeyF9: procGerarBoleto
            Case vbKeyF10: If Opt_entrada.Value = True Then ProcCentroCusto
            Case vbKeyF1: ProcAjuda
            Case vbKeyEscape: ProcSair
        End Select
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAlterar()
On Error GoTo tratar_erro

If FunVerifValidacaoRegistro("salvar", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "alterações dos valores", False) = False Then Exit Sub
FunVerifAlteracaoNF txtId, True, OptServico
'If Permitido1 = False Or Permitido = False Then
'    USMsgBox ("Não é permitido alterar os valores, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
'    Exit Sub
'End If
If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
If USMsgBox("Esta é uma " & NomeCampo & " de ajuste, complementar ou importação?", vbYesNo, "CAPRIND v5.0") = vbYes Then
    NF_alterada = True
    Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'True' where id = " & txtId
    Set TBTotaisnota = CreateObject("adodb.recordset")
    TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
    If TBTotaisnota.EOF = True Then TBTotaisnota.AddNew
    TBTotaisnota!ID_nota = txtId
    TBTotaisnota!dbl_Base_ICMS = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
    TBTotaisnota!dbl_Valor_ICMS = IIf(txt_VlrICMS = "", 0, txt_VlrICMS)
    TBTotaisnota!dbl_Base_ICMS_Subst = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
    TBTotaisnota!dbl_Valor_ICMS_Subst = IIf(txt_ICMSs = "", 0, txt_ICMSs)
   
   If NotaFiscalPronta = False Then
    TBTotaisnota!dbl_Valor_Total_IPI = IIf(txt_TotalIPI = "", 0, txt_TotalIPI)
   End If
   
    TBTotaisnota!dbl_Valor_Frete = IIf(txt_VlrFrete = "", 0, txt_VlrFrete)
    TBTotaisnota!dbl_Valor_Seguro = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro)
    TBTotaisnota!dbl_Desp_Adicionais = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp)
    TBTotaisnota!dbl_Valor_Total_Nota = IIf(txt_ValorNota = "", 0, txt_ValorNota)
    TBTotaisnota.Update
    TBTotaisnota.Close
    ProcCarregaLista
    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    ProcCarregaLista 'Obrigatório para recarregar a lista depois de calculado
Else
    NF_alterada = False
    If IIf(txt_VlrFrete = "", 0, txt_VlrFrete) > 0 Then
        If USMsgBox("O valor do frete tem IPI?", vbYesNo, "CAPRIND v5.0") = vbYes Then TextoFiltro = "Tem_IPI_frete = 'True'" Else TextoFiltro = "Tem_IPI_frete = 'False'"
        Conexao.Execute "UPDATE tbl_Detalhes_Nota Set " & TextoFiltro & " where ID_nota = " & txtId
    End If
    ValorPago = IIf(txt_VlrFrete = "", 0, txt_VlrFrete) 'Verifica valor do frete
    Seguro1 = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) 'Verifica valor de seguro
    Acessorias1 = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) 'Verifica valor de acessorias
    Desconto1 = IIf(Txt_valor_total_desc = "", 0, Txt_valor_total_desc) 'Verifica valor do desconto

    'Valor Total de produtos
    VlttTotal = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "select SUM(dbl_ValorTotal) as ValorNF_Frete from tbl_Detalhes_Nota where ID_Nota = " & txtId & " and Retorno = 'False' and Remessa = 'False' and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        VlttTotal = IIf(IsNull(TBProduto!ValorNF_Frete), 0, TBProduto!ValorNF_Frete)
    End If
    
    'Quantidade de produtos na NF com aliquota de IPI diferente de 0
    ValorTotalPago = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select SUM(dbl_ValorTotal) as ValorNF_IPI from tbl_Detalhes_Nota where id_nota = " & txtId.Text & " and int_IPI <> 0 and Retorno = 'False' and Remessa = 'False' and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        ValorTotalPago = IIf(IsNull(TBProduto!ValorNF_IPI), 0, TBProduto!ValorNF_IPI)
    End If

    Contador = 0
    valor = 0
    Valor1 = 0
    Valor2 = 0
    Valor3 = 0
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select NFP.*, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & txtId.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        Do While TBProduto.EOF = False
            Frete = 0
            Seguro = 0
            Acessorias = 0
            QuantsolicitadoN2 = 0 'Desconto
        
            'Verifica valores para somar na base de calculo
            VltUnit = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
            If VlttTotal <> 0 Then Qtd = (VltUnit * 100) / VlttTotal
            
            Contador = Contador + 1
            If Contador = TBProduto.RecordCount Then
                If ValorPago <> 0 Then Frete = ValorPago - valor 'Frete
                If Seguro1 <> 0 Then Seguro = Seguro1 - Valor1 'Seguro
                If Acessorias1 <> 0 Then Acessorias = Acessorias1 - Valor2 'Acessorias
                If Desconto1 <> 0 Then QuantsolicitadoN2 = Desconto1 - Valor3 'Desconto
            Else
                If ValorPago <> 0 Then Frete = Format((ValorPago * Qtd) / 100, "###,##0.00") 'Frete
                If Seguro1 <> 0 Then Seguro = Format((Seguro1 * Qtd) / 100, "###,##0.00") 'Seguro
                If Acessorias1 <> 0 Then Acessorias = Format((Acessorias1 * Qtd) / 100, "###,##0.00") 'Acessorias
                If Desconto1 <> 0 Then QuantsolicitadoN2 = (Desconto1 * Qtd) / 100 'Desconto
            End If
            TBProduto!Valor_frete = Format(Frete, "###,##0.00")
            If TBProduto!Tem_IPI_frete = True And TBProduto!dbl_valoripi <> 0 Then
                TBProduto!dbl_valoripi = Format(TBProduto!dbl_valoripi + ((TBProduto!Valor_frete * TBProduto!int_IPI) / 100), "###,##0.00")
            End If
            TBProduto!Valor_seguro = Format(Seguro, "###,##0.00")
            TBProduto!Valor_acessorias = Format(Acessorias, "###,##0.00")
            TBProduto!Valor_desconto = Format(QuantsolicitadoN2, "###,##0.00")
            
            ProcRecalculaImpostos
            TBProduto.Update
            
            ProcRecalculaICMS
            
            valor = valor + TBProduto!Valor_frete
            Valor1 = Valor1 + TBProduto!Valor_seguro
            Valor2 = Valor2 + TBProduto!Valor_acessorias
            Valor3 = Valor3 + TBProduto!Valor_desconto
            TBProduto.MoveNext
        Loop
    End If
    TBProduto.Close
    ProcCarregaLista
   If NotaFiscalPronta = False Then
    ProcGravarTotaisNota
   End If
   
    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
   
End If
USMsgBox ("Alteração dos valores realizada com sucesso."), vbInformation, "CAPRIND v5.0"
'==================================
Modulo = Formulario
Evento = "Alterar valores"
ID_documento = txtId
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCancelar()
On Error GoTo tratar_erro

If FunVerifValidacaoRegistro("cancelar", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "alterações dos valores", False) = False Then Exit Sub
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido cancelar a alteração dos valores, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & txtId
Conexao.Execute "Update tbl_Detalhes_Nota Set dbl_ValorIPI = ROUND(dbl_ValorIPI - ((Valor_frete * int_IPI) / 100), 2) where ID_nota = " & txtId & " and Tem_IPI_frete = 'True'"
Conexao.Execute "Update tbl_Detalhes_Nota Set Valor_frete = 0, Tem_IPI_frete = 'False', Valor_seguro = 0, Valor_acessorias = 0, Valor_desconto = 0 where ID_nota = " & txtId
NF_alterada = False
Cancelar_alt_totais = True

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFP.*, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & txtId.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        ProcRecalculaImpostos
        TBProduto.Update
        
        ProcRecalculaICMS
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close

ProcLimpaCamposProd
ProcLimpaCamposTotaisNota
ProcCarregaLista
ProcCarregaListaServicos
ProcGravarTotaisNota
ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
USMsgBox ("Cancelamento da alteração dos valores efetuado com sucesso."), vbInformation, "CAPRIND v5.0"
'==================================
Modulo = Formulario
Evento = "Cancelar alteração dos valores"
ID_documento = txtId
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = ""
ProcGravaEvento
'==================================
ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
Cancelar_alt_totais = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcRecalculaImpostos()
On Error GoTo tratar_erro

Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)

ProcVerifImpostosEmpresa IDempresa, TBProduto!retorno, "", False, 0, False, TabelaSN, Lbl2.Caption

TBProduto!PIS_Prod = PIS_Prod
If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
TBProduto!Cofins_Prod = Cofins_Prod
If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
TBProduto!CSLL_Prod = CSLL_Prod
If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
TBProduto!IRPJ_Prod = IRPJ_Prod
If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
TBProduto!ICMS_SN = ICMS_SN

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If IsNull(TBProduto!ID_CF) = False Then
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then
            'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
            If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And chkRetorno.Value = 0 Then
                TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "###,##0.00")
                TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "###,##0.00")
            Else
                TBProduto!Valor_Retencao_PIS = 0
                TBProduto!Valor_Retencao_Cofins = 0
            End If
    
            If DestacaImpostos = "SIM" And Regime <> 1 And TBProduto!retorno = False Then
                PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
                Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
                If PIS_Prod <> 0 Then
                    TBProduto!PIS_Prod = PIS_Prod
                    TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                End If
                If Cofins_Prod <> 0 Then
                    TBProduto!Cofins_Prod = Cofins_Prod
                    TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                End If
            Else
                TBProduto!PIS_Prod = 0
                TBProduto!Total_PIS_prod = 0
                TBProduto!Cofins_Prod = 0
                TBProduto!Total_Cofins_prod = 0
            End If
            
            'Calcula valor aproximado de tributos
            TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, IIf(IsNull(TBProduto!txt_CST), 0, TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False)
            If TBProduto!Aliq_aprox_tributos = 0 Then
                TBProduto!Valor_aprox_tributos = 0
            Else
                TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
            End If
        End If
        TBFI.Close
    Else
        TBProduto!Valor_Retencao_PIS = 0
        TBProduto!Valor_Retencao_Cofins = 0
        TBProduto!PIS_Prod = 0
        TBProduto!Total_PIS_prod = 0
        TBProduto!Cofins_Prod = 0
        TBProduto!Total_Cofins_prod = 0
        TBProduto!Aliq_aprox_tributos = 0
        TBProduto!Valor_aprox_tributos = 0
    End If
    Valor_total = 0
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcRecalculaICMS()
On Error GoTo tratar_erro

ProcAtualizaCST IDempresa, txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select id_CFOP FROM tbl_NaturezaOperacao WHERE IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and (Vendas = 'True' or MaoObra = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
    PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
    ProcCalculaBC IDempresa, TBCFOP!ID_CFOP, 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), Aplicacao, txtIDCliente, txt_Razao

    ProcSubstituicaoTributaria cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, Format((IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) / IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), "###,##0.0000000000"), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), IDempresa
End If
TBCFOP.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcEnviaDadosPedido(ID_pedido As Long, Pedido_int As Boolean)
On Error GoTo tratar_erro

If Pedido_int = True Then
    NomeTabelaFiltro = "vendas_proposta"
    TextoFiltro = "Cotacao = " & ID_pedido
Else
    NomeTabelaFiltro = "Compras_pedido"
    TextoFiltro = "IDPedido = " & ID_pedido
End If
Set TBVendas = CreateObject("adodb.recordset")
TBVendas.Open "Select * from " & NomeTabelaFiltro & " where " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
If TBVendas.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    If Pedido_int = True Then TextoFiltro1 = "Proposta = '" & TBVendas!Ncotacao & "' and Revisao = " & TBVendas!Revisao Else TextoFiltro1 = "Proposta = '" & TBVendas!Pedido & "' and Revisao = 0"
    TBGravar.Open "Select * from tbl_proposta_nota where ID_nota = " & txtId & " and " & TextoFiltro1, Conexao, adOpenKeyset, adLockOptimistic
    If TBGravar.EOF = True Then TBGravar.AddNew
    If Pedido_int = True Then
        TBGravar!Proposta = TBVendas!Ncotacao
        TBGravar!Revisao = TBVendas!Revisao
    Else
        TBGravar!Proposta = TBVendas!Pedido
        TBGravar!Revisao = 0
    End If
    TBGravar!NF = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBGravar!ID_nota = txtId
    TBGravar.Update
    TBGravar.Close
End If
TBVendas.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub Procenviadadoslista(ID_carteira As Long, Descricao_comercial As Boolean, Agrupar As Boolean, Pedido_int As Boolean, qtdeliberar As Double)
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
If Pedido_int = True Then
    TBLISTA.Open "Select * FROM vendas_carteira WHERE Codigo = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
    If TBLISTA.EOF = False Then
      If Agrupar_Produtos = True Then
      
      'Se calcular valor do pis em cima do desconto
             If FunVerifCalcIPISDesc(txtIDEmpresa.Text) = True Then
             
                If OutraMoeda = True Then
                valor = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000")
                Else
                valor = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
                End If
                
            Else
                'If OutraMoeda = True Then valor = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000") Else valor = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
                If OutraMoeda = True Then
                valor = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000")
                Else
                valor = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
                End If
                
            End If
      NovoValor = Replace(valor, ",", ".")
      TextoFiltro = "where ID_nota = " & txtId & " and int_Cod_Produto = '" & TBLISTA!Desenho & "' and dbl_ValorUnitario = " & NovoValor & " and PCCliente = '" & TBLISTA!PCCliente & "'"
      If IsNull(TBLISTA!N_item) = False And TBLISTA!N_item <> "" Then TextoFiltro = TextoFiltro & " and N_item = '" & TBLISTA!N_item & "'"
      If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TextoFiltro = TextoFiltro & " and ID_CF = " & TBLISTA!ID_CF
   Else
     TextoFiltro = ""
   End If
'Verifica se o mesmo item já foi cadastrado na ordem
   Set TBProduto = CreateObject("adodb.recordset")
   TBProduto.Open "Select * from tbl_detalhes_nota " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
   If Agrupar_Produtos = True Then
       If TBProduto.EOF = True Then TBProduto.AddNew
   Else
       TBProduto.AddNew
   End If
  '      'Debug.print txtProposta.Text
        
        TBProduto!Tipo = "P"
        TBProduto!int_Cod_Produto = TBLISTA!Desenho
        TBProduto!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
        TBProduto!N_item = IIf(IsNull(TBLISTA!N_item), "", TBLISTA!N_item)
        If Descricao_comercial = False Then TBProduto!Txt_descricao = Left(TBLISTA!descricao_tecnica, 105) Else TBProduto!Txt_descricao = Left(TBLISTA!Descricao, 105)
        TBProduto!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
        TBProduto!txt_Unid = TBLISTA!Unidade
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        
        If Formulario = "Estoque/Ordem de faturamento" Then
        TBLISTA!qtdeliberada = TBLISTA!qtdeliberada + qtdeliberar
        Else
        TBLISTA!QtdeFaturada = TBLISTA!QtdeFaturada + qtdeliberar
        End If
        
        If FunVerifCalcIPISDesc(txtIDEmpresa.Text) = True Then
            If OutraMoeda = True Then
            TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000")
            Else
            TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
            End If
            
            TBProduto!Valor_desconto = Format(TBLISTA!ValorDesconto * qtdeliberar, "###,##0.0000000000")
        Else
                  If OutraMoeda = True Then
                  TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario * ValorMoeda, "###,##0.0000000000")
                  Else
                  TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario, "###,##0.0000000000")
                  End If
        End If
'=====================================================================================
        Valor_total = Format(TBProduto!dbl_ValorUnitario * qtdeliberar, "0.00")
        Valor_desconto = Format(TBLISTA!ValorDesconto, "0.00")
        Valor_total = Valor_total - Valor_desconto
        VlrIPI = Format((Valor_total * TBLISTA!int_IPI) / 100, "0.00")
'=====================================================================================
   '     Valor_total = (TBProduto!dbl_ValorUnitario * qtdeliberar) ' + IIf(IsNull(TBLISTA!vFrete), 0, TBLISTA!vFrete)
''===================================================================================
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from Clientes_Impostos where IDCliente = " & txtIDCliente & " and ID_CF = " & TBLISTA!ID_CF & " and PorcentagemIPI <> 0", Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
                VlrIPI = Valor_total / TBAliquota!PorcentagemIPI
                VlrIPI = Format((VlrIPI - Valor_total) * qtdeliberar, "0.00")
            End If
            TBAliquota.Close
        End If
        
        If Agrupar_Produtos = True Then
        TBProduto!dbl_valoripi = Format(TBProduto!dbl_valoripi + VlrIPI, "0.00")
        Else
        TBProduto!dbl_valoripi = Format(VlrIPI, "0.00")
        End If
        
        TBProduto!ID_CFOP = IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP)
        
        ID_CFOP = IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP)
        

        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TBProduto!ID_CF = TBLISTA!ID_CF
        If IsNull(TBLISTA!txt_CST) = False And TBLISTA!txt_CST <> "" Then TBProduto!txt_CST = TBLISTA!txt_CST
        
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            TBProduto!Codproduto = TBFIltro!Codproduto
            
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
            ID_CFOP = TBAliquota!ID_CFOP
                If IsNull(TBLISTA!txt_CST) = True Or TBLISTA!txt_CST = "" Then
                    If IsNull(TBAliquota!CST_ICMS) = False And TBAliquota!CST_ICMS <> "" Then TBProduto!txt_CST = TBAliquota!CST_ICMS
                    
                    If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select CST.CST FROM CST INNER JOIN Regioes ON CST.ID_UF = Regioes.ID where CST.ID_CF = " & IIf(IsNull(TBLISTA!ID_CF), 0, TBLISTA!ID_CF) & " and Regioes.UF = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If IsNull(TBAbrir!CST) = False And TBAbrir!CST <> "" Then TBProduto!txt_CST = TBAbrir!CST
                        End If
                        TBAbrir.Close
                    End If
                End If
                If IsNull(TBAliquota!CST_IPI) = False And TBAliquota!CST_IPI <> "" Then TBProduto!CST_IPI = TBAliquota!CST_IPI
                If IsNull(TBAliquota!CST_PIS) = False And TBAliquota!CST_PIS <> "" Then TBProduto!CST_PIS = TBAliquota!CST_PIS
                If IsNull(TBAliquota!CST_Cofins) = False And TBAliquota!CST_Cofins <> "" Then TBProduto!CST_Cofins = TBAliquota!CST_Cofins
            End If
            TBAliquota.Close
            
            If IsNull(TBFIltro!FINAME) = False And TBFIltro!FINAME <> "" Then TBProduto!Complemento_descricao = "CÓD. FINAME: " & TBFIltro!FINAME
        End If
        TBFIltro.Close
        
        If IsNull(TBLISTA!N_Serie) = False And TBLISTA!N_Serie <> "" Then
            If IsNull(TBProduto!Complemento_descricao) = False And TBProduto!Complemento_descricao <> "" Then
                Complemento_descricao = Left(TBProduto!Complemento_descricao & " - N. DE SÉRIE: " & TBLISTA!N_Serie, 60)
            Else
                Complemento_descricao = Left("N. DE SÉRIE: " & TBLISTA!N_Serie, 60)
            End If
            TBProduto!Complemento_descricao = Complemento_descricao
        End If
        
        ProcControleImposto IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
        ProcVerifImpostosEmpresa IDempresa, IIf(IsNull(TBLISTA!retorno), False, TBLISTA!retorno), "", False, 0, False, TabelaSN, Lbl2.Caption
        'Novo cálculo simples nacional 2018
        If DAS <> 0 Then
            NovoValor = Replace(DAS, ",", ".")
            Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & txtId
        End If
        If TBProduto!CST_PIS = "01" Or TBProduto!CST_PIS = "03" Or TBProduto!CST_PIS = "49" Or TBProduto!CST_PIS = "98" Or TBProduto!CST_PIS = "99" Then
            TBProduto!PIS_Prod = PIS_Prod
        Else
            PIS_Prod = 0
            TBProduto!PIS_Prod = 0
        End If
        If TBProduto!CST_Cofins = "01" Or TBProduto!CST_Cofins = "02" Or TBProduto!CST_Cofins = "03" Or TBProduto!CST_Cofins = "49" Or TBProduto!CST_Cofins = "98" Or TBProduto!CST_Cofins = "99" Then
            TBProduto!Cofins_Prod = Cofins_Prod
        Else
            Cofins_Prod = 0
            TBProduto!Cofins_Prod = 0
        End If
        TBProduto!CSLL_Prod = CSLL_Prod
        TBProduto!IRPJ_Prod = IRPJ_Prod
        TBProduto!cpp = CPP_Prod
        TBProduto!ICMS_SN = ICMS_SN
'=======================================================================================================
        If Agrupar_Produtos = True Then
            TBProduto!Total_PIS_prod = TBProduto!Total_PIS_prod + Format((Valor_total * PIS_Prod) / 100, "0.00")
            TBProduto!Total_Cofins_prod = TBProduto!Total_Cofins_prod + Format((Valor_total * Cofins_Prod) / 100, "0.00")
            TBProduto!Total_CSLL_prod = TBProduto!Total_CSLL_prod + Format((Valor_total * CSLL_Prod) / 100, "0.00")
            TBProduto!Total_IRPJ_prod = TBProduto!Total_IRPJ_prod + Format((Valor_total * IRPJ_Prod) / 100, "0.00")
            TBProduto!Total_CPP = TBProduto!Total_CPP + Format((Valor_total * CPP_Prod) / 100, "0.00")
            TBProduto!int_Qtd = TBProduto!int_Qtd + qtdeliberar
            TBProduto!Saldo = TBProduto!Saldo + qtdeliberar
            TBProduto!dbl_ValorTotal = TBProduto!dbl_ValorTotal + (Format(TBLISTA!preco_unitario * TBProduto!int_Qtd, "0.00"))
            TBProduto!Valor_desconto = TBProduto!Valor_desconto + TBLISTA!ValorDesconto
            vDesc = TBProduto!Valor_desconto
'========================================================================================================
        Else
            If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "0.00") Else TBProduto!Total_PIS_prod = 0
            If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "0.00") Else TBProduto!Total_Cofins_prod = 0
            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "0.00") Else TBProduto!Total_CSLL_prod = 0
            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "0.00") Else TBProduto!Total_IRPJ_prod = 0
            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "0.00") Else TBProduto!Total_CPP = 0
            TBProduto!int_Qtd = qtdeliberar
            TBProduto!Saldo = qtdeliberar
            TBProduto!dbl_ValorTotal = Format(TBLISTA!preco_unitario * TBProduto!int_Qtd, "0.00")
            TBProduto!Valor_desconto = TBLISTA!ValorDesconto
       
        End If
'=========================================================================================================
' Valor total sem desconto e valor do desconto no item
'=========================================================================================================
'        TBProduto!dbl_ValorTotal = Format(TBLISTA!preco_unitario * TBProduto!int_Qtd, "0.00")
'        TBProduto!Valor_Desconto = TBLISTA!ValorDesconto
'========================================================================================================
' Soma valor do frete ao valor total do produto
'========================================================================================================
        TBProduto!Valor_frete = IIf(IsNull(TBLISTA!vFrete), "0", TBLISTA!vFrete)
        TOTALvFrete = TOTALvFrete + TBProduto!Valor_frete
        
        TBProduto!txt_Unid = TBLISTA!Unidade
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        
        'Calcula quantidade se a unidade for diferente
        If FunVerifUNConversao(TBLISTA!Unidade, TBLISTA!Unidade_com) = True Then
            TBProduto!Qtde_estoque = FunConverteUN(TBLISTA!Unidade, TBLISTA!Unidade_com, TBProduto!int_Qtd, TBLISTA!Desenho)
        Else
            TBProduto!Qtde_estoque = Null
        End If
        
        TBProduto!int_ICMS = TBLISTA!IntICMS
        TBProduto!int_IPI = TBLISTA!int_IPI
        TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBProduto!ID_nota = txtId.Text
        TBProduto!PCCliente = TBLISTA!PCCliente
        TBProduto!retorno = TBLISTA!retorno
        If Soma_retorno_total_NF = True Then TBProduto!Soma_retorno_totalnf = True Else TBProduto!Soma_retorno_totalnf = False
                
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBLISTA!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                If TBFI!Retem_PIS_Cofins = True Then
                    If Agrupar_Produtos = True Then
                        TBProduto!Valor_Retencao_PIS = Format(TBProduto!Valor_Retencao_PIS + (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format(TBProduto!Valor_Retencao_Cofins + (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    Else
                        TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    End If
                End If
                
                'Calcula valor aproximado de tributos
                TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, IIf(IsNull(TBProduto!txt_CST), 0, TBProduto!txt_CST), IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP), False)
                If TBProduto!Aliq_aprox_tributos = 0 Then
                    TBProduto!Valor_aprox_tributos = 0
                Else
                    If Agrupar_Produtos = True Then TBProduto!Valor_aprox_tributos = Format(TBProduto!Valor_aprox_tributos + (Valor_total * TBProduto!Aliq_aprox_tributos) / 100, "0.00") Else TBProduto!Valor_aprox_tributos = Format((Valor_total * TBProduto!Aliq_aprox_tributos) / 100, "0.00")
                End If
            Else
                Retem_PIS_Cofins = False
            End If
            TBFI.Close
        End If
        TBProduto.Update
        
        ProcRecalculaICMS
        
        TBLISTA.Update
        ProcGravarPedidosProdServ TBProduto!ID_nota, TBProduto!Int_codigo, TBLISTA!CODIGO, TBLISTA!Desenho, qtdeliberar
        ProcGravarQtdeFaturadaProdServ TBLISTA!CODIGO, TBLISTA!Desenho
        TBProduto.Close
    End If
Else
    TBLISTA.Open "Select * FROM Compras_pedido_lista WHERE IDLista = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
    If TBLISTA.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "Select * from tbl_detalhes_nota", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Tipo = "P"
        TBProduto!int_Cod_Produto = TBLISTA!Desenho
        TBProduto!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
        If Descricao_comercial = False Then TBProduto!Txt_descricao = Left(TBLISTA!Descricao, 105) Else TBProduto!Txt_descricao = Left(TBLISTA!Descricao_comercial, 105)
        TBProduto!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
        TBProduto!txt_Unid = TBLISTA!Un
        TBProduto!Unidade_com = TBLISTA!Unidade_com
        If OutraMoeda = True Then TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000") Else TBProduto!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
        'VALOR_TOTAL = Format(tbproduto!dbl_ValorUnitario * qtdeliberar, "0.00")
        Valor_total = TBProduto!dbl_ValorUnitario * qtdeliberar
        VlrIPI = Format((Valor_total * IIf(IsNull(TBLISTA!IPI), 0, TBLISTA!IPI)) / 100, "0.00")
        TBProduto!dbl_valoripi = Format(VlrIPI, "0.00")
        
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = False Then
            TBProduto!Codproduto = TBFIltro!Codproduto
            If IsNull(TBFIltro!ID_CF) = False And TBFIltro!ID_CF <> "" Then TBProduto!ID_CF = TBFIltro!ID_CF
            If IsNull(TBFIltro!FINAME) = False And TBFIltro!FINAME <> "" Then TBProduto!Complemento_descricao = "CÓD. FINAME: " & TBFIltro!FINAME
        End If
        TBFIltro.Close
        If IsNull(TBLISTA!ID_CF) = False And TBLISTA!ID_CF <> "" Then TBProduto!ID_CF = TBLISTA!ID_CF
        
        TBProduto!int_Qtd = qtdeliberar
        TBProduto!Saldo = qtdeliberar
        TBProduto!dbl_ValorTotal = Format(Valor_total, "0.00")
        TBProduto!int_ICMS = TBLISTA!ICMS
        TBProduto!int_IPI = IIf(IsNull(TBLISTA!IPI), 0, TBLISTA!IPI)
        TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
        TBProduto!ID_nota = txtId.Text
        TBProduto!Remessa = TBLISTA!Remessa
        TBProduto!Soma_retorno_totalnf = False
                
        If IsNull(TBProduto!ID_CF) = False And TBProduto!ID_CF <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                If TBFI!Retem_PIS_Cofins = True Then
                    If Agrupar_Produtos = True Then
                        TBProduto!Valor_Retencao_PIS = Format(TBProduto!Valor_Retencao_PIS + (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format(TBProduto!Valor_Retencao_Cofins + (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    Else
                        TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "0.00")
                        TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "0.00")
                    End If
                End If
                
                'Verifica valor aproximado dos impostos LEI 12741
                TBProduto!Aliq_aprox_tributos = 0
                TBProduto!Valor_aprox_tributos = 0
            Else
                Retem_PIS_Cofins = False
            End If
            TBFI.Close
        End If
        TBProduto.Update
        
        ProcRecalculaICMS
        
        TBLISTA.Update
        ProcGravarPedidosProdServ TBProduto!ID_nota, TBProduto!Int_codigo, TBLISTA!IDlista, TBLISTA!Desenho, qtdeliberar
        TBProduto.Close
    End If
End If
'Debug.print txtDados_DadosAdicionais

'================================================
' Informa os dados novos
'================================================
If Formulario <> "Estoque/Ordem de faturamento" Then
With frmFaturamento_Prod_Serv

If Faturamento_NF_Saida = True Then
Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close

    ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
    'txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.00"))
'======================================================================================
    If AliquotaSN = 0 Then
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
    Else
    txtICMSSN = Format(AliquotaSN, "###,##0.0000")
    End If
'======================================================================================
    
End If
End With
Else
With frmEstoque_Ordem_Faturamento

If Faturamento_NF_Saida = True Then
Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close

    ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
    'txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.00"))
'======================================================================================
    If AliquotaSN = 0 Then
    txtICMSSN = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
    Else
    txtICMSSN = Format(AliquotaSN, "###,##0.0000")
    End If
'======================================================================================
    
End If
End With

End If
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcGravarPedidosProdServ(ID_nota As Long, ID_prod_NF As Long, ID_carteira As Long, Codinterno As String, quantidade As Double)
On Error GoTo tratar_erro

Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * FROM tbl_Detalhes_Nota_pedidos where ID_nota = " & ID_nota & " and ID_prod_NF = " & ID_prod_NF & " and ID_carteira = " & ID_carteira & " and Codinterno = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then TBGravar.AddNew
TBGravar!ID_nota = ID_nota
TBGravar!ID_prod_NF = ID_prod_NF
TBGravar!ID_carteira = ID_carteira
TBGravar!Codinterno = Codinterno
TBGravar!quantidade = quantidade
TBGravar.Update
TBGravar.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcEnviadadosListaServicos(ID_carteira As Long, Descricao_comercial As Boolean, qtdeliberar As Double)
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * FROM vendas_carteira WHERE Codigo = " & ID_carteira, Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select * from tbl_detalhes_nota", Conexao, adOpenKeyset, adLockOptimistic
    TBItem.AddNew
    TBItem!Tipo = "S"
    TBItem!int_Cod_Produto = TBLISTA!Desenho
    TBItem!N_referencia = IIf(IsNull(TBLISTA!N_referencia), "", TBLISTA!N_referencia)
    If Descricao_comercial = False Then TBItem!Txt_descricao = Left(TBLISTA!descricao_tecnica, 105) Else TBItem!Txt_descricao = Left(TBLISTA!Descricao, 105)
    TBItem!txt_Unid = TBLISTA!Unidade
    TBItem!Unidade_com = TBLISTA!Unidade_com
    TBItem!Familia = IIf(IsNull(TBLISTA!Familia), "", TBLISTA!Familia)
    TBItem!ID_CFOP = IIf(IsNull(TBLISTA!ID_CFOP), 0, TBLISTA!ID_CFOP)
    
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select Codproduto from projproduto where desenho = '" & TBLISTA!Desenho & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        TBItem!Codproduto = TBProduto!Codproduto
    End If
    TBProduto.Close
    
    If Formulario = "Estoque/Ordem de faturamento" Then TBLISTA!qtdeliberada = TBLISTA!qtdeliberada + qtdeliberar Else TBLISTA!QtdeFaturada = TBLISTA!QtdeFaturada + qtdeliberar
    
    If OutraMoeda = True Then
        TBItem!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto * ValorMoeda, "###,##0.0000000000")
    Else
        TBItem!dbl_ValorUnitario = Format(TBLISTA!preco_unitario_desconto, "###,##0.0000000000")
    End If
    
    TBItem!int_Qtd = qtdeliberar
    Valor_total = TBItem!dbl_ValorUnitario * qtdeliberar
    TBItem!dbl_ValorTotal = Format(Valor_total, "0.00")
    If Formulario <> "Estoque/Ordem de faturamento" Then TBItem!int_NotaFiscal = IIf(txtNFiscal.Text <> "", txtNFiscal.Text, 0)
    TBItem!Servico_cliente = TBLISTA!Servico_cliente
    
    ProcControleImposto TBItem!ID_CFOP, IIf(txtIDCliente = "", 0, txtIDCliente)
    ProcVerifImpostosEmpresa IDempresa, False, TBItem!int_Cod_Produto, TBItem!Servico_cliente, Valor_total, True, TabelaSN, Lbl2.Caption
    If DAS <> 0 Then
        NovoValor = Replace(DAS, ",", ".")
        Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & txtId
    End If
    TBItem!PIS_Serv = PIS_Serv
    If TBItem!PIS_Serv <> 0 Then TBItem!Total_PIS_serv = Format((Valor_total * TBItem!PIS_Serv) / 100, "0.00") Else TBItem!Total_PIS_serv = 0
    TBItem!Cofins_Serv = Cofins_Serv
    If TBItem!Cofins_Serv <> 0 Then TBItem!Total_Cofins_serv = Format((Valor_total * TBItem!Cofins_Serv) / 100, "0.00") Else TBItem!Total_Cofins_serv = 0
    TBItem!CSLL_Serv = CSLL_Serv
    If TBItem!CSLL_Serv <> 0 Then TBItem!Total_CSLL_serv = Format((Valor_total * TBItem!CSLL_Serv) / 100, "0.00") Else TBItem!Total_CSLL_serv = 0
    TBItem!ISS = ISS_Serv
    If TBItem!ISS <> 0 Then TBItem!VlrISS = Format((Valor_total * TBItem!ISS) / 100, "0.00") Else TBItem!VlrISS = 0
    TBItem!INSS_Serv = INSS_Serv
    If TBItem!INSS_Serv <> 0 Then TBItem!Total_INSS_serv = Format((Valor_total * TBItem!INSS_Serv) / 100, "0.00") Else TBItem!Total_INSS_serv = 0
    TBItem!IRRF_Serv = IRRF_Serv
    If TBItem!IRRF_Serv <> 0 Then TBItem!Total_IRRF_serv = Format((Valor_total * TBItem!IRRF_Serv) / 100, "0.00") Else TBItem!Total_IRRF_serv = 0
    TBItem!cpp = CPP_Serv
    If TBItem!cpp <> 0 Then TBItem!Total_CPP = Format((Valor_total * TBItem!cpp) / 100, "0.00") Else TBItem!Total_CPP = 0
    TBItem!IRPJ_Serv = IRPJ_Serv
    If TBItem!IRPJ_Serv <> 0 Then TBItem!Total_IRPJ_serv = Format((Valor_total * TBItem!IRPJ_Serv) / 100, "0.00") Else TBItem!Total_IRPJ_serv = 0
            
    TBItem!ID_nota = txtId.Text
    TBItem!PCCliente = TBLISTA!PCCliente
    
    'Calcula valor aproximado de tributos
    TBItem!Aliq_aprox_tributos = FunCalcularAproxTrib(TBItem!PIS_Serv + TBItem!Cofins_Serv, "", IIf(IsNull(TBItem!ID_CFOP), 0, TBItem!ID_CFOP), True)
    If TBItem!Aliq_aprox_tributos = 0 Then
        TBItem!Valor_aprox_tributos = 0
    Else
        TBItem!Valor_aprox_tributos = Format((TBItem!dbl_ValorTotal * TBItem!Aliq_aprox_tributos) / 100, "0.00")
    End If
    
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(TBLISTA!Unidade, TBLISTA!Unidade_com) = True Then
        TBItem!Qtde_estoque = FunConverteUN(TBLISTA!Unidade, TBLISTA!Unidade_com, TBItem!int_Qtd, TBLISTA!Desenho)
    Else
        TBItem!Qtde_estoque = Null
    End If
    
    TBItem.Update
    TBLISTA.Update
    
    ProcGravarPedidosProdServ TBItem!ID_nota, TBItem!Int_codigo, TBLISTA!CODIGO, TBLISTA!Desenho, qtdeliberar
    ProcGravarQtdeFaturadaProdServ TBLISTA!CODIGO, TBLISTA!Desenho
    TBItem.Close
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposNota()
On Error GoTo tratar_erro

IDpedido = 0
IDAntigo = 0
txtId = ""
Cmb_modelo = "55 - Nota Fiscal Eletrônica"
txtNFiscal.Text = ""
txtserie = ""
optProduto.Value = True
Opt_saida.Value = True

'optServico.Value = False
'txt_proposta.Clear
Txt_rev.Text = ""
txt_DtEmissao.Text = Date
Txt_hora_emissao = Format(Now, "hh:mm:ss")
txt_EntSai.Text = Format(Date, "dd/mm/yyyy")
mskHoraSaida.Text = Format(Now, "hh:mm:ss")
txtDtValidacao = ""
txtRespValidacao = ""
txt_IE.Text = ""
txt_IEST.Text = ""
txttipocliente = ""
txt_CNPJ_CPF.Text = ""
txtIDCliente.Text = ""
txt_Razao.Text = ""
txt_Endereco.Text = ""
txtNumero = ""
txt_Bairro.Text = ""
txt_Municipio.Text = ""
Txt_CEP.Text = ""
cbo_UF.Text = ""
txt_FoneFAX.Text = ""
txtMoedaPrincipal = ""
txtVlrMoedaPrincipal = ""
'Txt_chave_acesso = ""
'cmbForma_pagamento.ListIndex = -1
cmbFinalidade_emissao.ListIndex = -1
Cmb_consumidor.ListIndex = -1
cmbEntrega.Clear
'Txt_obs = ""
Opt_sim.Value = False
Opt_nao.Value = False
'cmdcliente.Enabled = True
NF_enviada = False
NF_alterada = False
NFe_liberada = False
CodigoLista = 0
'TabelaSN = 0
RegimeEmpresa = 0
'If Formulario = "Faturamento/Nota fiscal/Própria" Then
'    Caption = "Administrativo - Faturamento - Nota fiscal - Própria"
'ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
'        Caption = "Administrativo - Faturamento - Nota fiscal - Terceiros"
'    ElseIf Formulario = "Estoque/Ordem de faturamento" Then
'            Caption = "Estoque - Ordem de faturamento"
'    ElseIf Formulario = "Estoque/Nota fiscal" Then
'            Caption = "Estoque - Nota fiscal"
'End If


ProcLimparTudo

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosNota(ID_nota As Long)
On Error GoTo tratar_erro

Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)

    If IsNull(TBControleNF!ID_empresa) = False And TBControleNF!ID_empresa <> "" Then txtIDEmpresa.Text = TBControleNF!ID_empresa 'ProcPuxaDadosComboEmpresa 'Cmb_empresa, TBControleNF!ID_empresa
    If Formulario = "Faturamento/Nota fiscal/Própria" Then
        Caption = "Faturamento - Nota fiscal - Própria (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
    ElseIf Formulario = "Faturamento/Nota fiscal/Terceiros" Then
            Caption = "Faturamento - Nota fiscal - Terceiros (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
        ElseIf Formulario = "Estoque/Ordem de faturamento" Then
            Caption = "Estoque - Ordem de faturamento (Ordem : " & TBControleNF!ID & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
        ElseIf Formulario = "Estoque/Nota fiscal" Then
                Caption = "Estoque - Nota fiscal (Nota fiscal : " & TBControleNF!int_NotaFiscal & " - Tipo : " & TBControleNF!TipoNF & " - Série : " & TBControleNF!Serie & ")"
    End If
    
    With Cmb_modelo
        Select Case TBControleNF!Modelo
            Case "01": .Text = "01 - Nota Fiscal"
            Case "1B": .Text = "1B - Nota Fiscal Avulsa"
            Case "02": .Text = "02 - Nota Fiscal de Venda a Consumidor"
            Case "2D": .Text = "2D - Cupom Fiscal emitido por ECF"
            Case "2E": .Text = "2E - Bilhete de Passagem emitido por ECF"
            Case "04": .Text = "04 - Nota Fiscal de Produtor"
            Case "06": .Text = "06 - Nota Fiscal de Conta de Energia Elétrica"
            Case "07": .Text = "07 - Nota Fiscal de Serviço de Transporte"
            Case "08": .Text = "08 - Conhecimento de Transporte Rodoviário de Cargas"
            Case "8B": .Text = "8B - Conhecimento de Transporte de Cargas Avulso"
            Case "09": .Text = "09 - Conhecimento de Transporte Aquaviário de Cargas"
            Case "10": .Text = "10 - Conhecimento Aéreo"
            Case "11": .Text = "11 - Conhecimento de Transporte Ferroviário de Cargas"
            Case "13": .Text = "13 - Bilhete de Passagem Rodoviário"
            Case "14": .Text = "14 - Bilhete de Passagem Aquaviário"
            Case "15": .Text = "15 - Bilhete e Nota de Bagagem"
            Case "16": .Text = "16 - Bilhete de Passagem Ferroviário"
            Case "17": .Text = "17 - Despacho de Transporte"
            Case "18": .Text = "18 - Resumo de Movimento Diário"
            Case "20": .Text = "20 - Ordem de Coleta de Cargas"
            Case "21": .Text = "21 - Nota Fiscal de Serviço de Comunicação"
            Case "22": .Text = "22 - Nota Fiscal de Serviço de Telecomunicações"
            Case "23": .Text = "23 - Guia Nacional de Recolhimento de Tributos Estaduais"
            Case "24": .Text = "24 - Autorização de Carregamento e Transporte"
            Case "25": .Text = "25 - Manifesto de Carga"
            Case "26": .Text = "26 - Conhecimento de Transporte Multimodal de Cargas"
            Case "27": .Text = "27 - Nota Fiscal de Serviço de Transporte Ferroviário"
            Case "28": .Text = "28 - Nota Fiscal/Conta de Fornecimento de Gás Canalizado"
            Case "29": .Text = "29 - Nota Fiscal/Conta de Fornecimento de Água Canalizada"
            Case "30": .Text = "30 - Bilhete/Recibo do Passageiro"
            Case "55": .Text = "55 - Nota Fiscal Eletrônica"
            Case "57": .Text = "57 - Conhecimento de Transporte Eletrônico  CT-e"
        End Select
    End With
    
    txtNFiscal.Text = IIf(IsNull(TBControleNF!int_NotaFiscal), "", TBControleNF!int_NotaFiscal)
    NF = TBControleNF!int_NotaFiscal
    txtId.Text = TBControleNF!ID
    TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
    RegimeEmpresa = IIf(IsNull(TBControleNF!Regime), 0, TBControleNF!Regime)
    
    With txtserie
        .Text = IIf(IsNull(TBControleNF!Serie), "", TBControleNF!Serie)
        If Faturamento_NF_Saida = True Then
            .Locked = True
            .TabStop = False
        Else
            .Locked = False
            .TabStop = True
        End If
    End With
    
    If IsNull(TBControleNF!TipoNF) = False And TBControleNF!TipoNF <> "" Then
        Select Case TBControleNF!TipoNF
            Case "M1":
            optProduto.Value = True
            USToolBar1.ButtonState(12) = 5
            USToolBar1.ButtonState(11) = 0
            
            Case "SA":
            OptServico.Value = True
            USToolBar1.ButtonState(12) = 0
            USToolBar1.ButtonState(11) = 5
            
        End Select
        USToolBar1.Refresh
        
        TipoNF = TBControleNF!TipoNF
    End If
    
    txttipocliente.Text = IIf(IsNull(TBControleNF!txt_tipocliente), "", TBControleNF!txt_tipocliente)
    txtNumero.Text = IIf(IsNull(TBControleNF!Numero), "", TBControleNF!Numero)
    Txt_proposta.Clear
    Set TBAcessos = CreateObject("adodb.recordset")
    TBAcessos.Open "Select * from tbl_proposta_nota where id_nota = " & TBControleNF!ID, Conexao, adOpenKeyset, adLockOptimistic
    If TBAcessos.EOF = False Then
    Txt_proposta.Clear
        Do While TBAcessos.EOF = False
            Txt_proposta.AddItem TBAcessos!Proposta
            Txt_proposta.Text = TBAcessos!Proposta
            TBAcessos.MoveNext
            ComPedido = True
        Loop
    Else
    ComPedido = False
    End If
    TBAcessos.Close
    If TBControleNF!int_TipoNota = 1 Then Opt_saida.Value = True Else Opt_entrada.Value = True
    
    'Verifica se tem conta gerada e bloqueia as options de entrada e saída
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_Detalhes_Recebimento where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        'Opt_saida.Enabled = False
        'Opt_entrada.Enabled = False
    Else
        If Faturamento_NF_Saida = True Then
            Opt_saida.Enabled = True
            Opt_entrada.Enabled = True
        Else
            'Opt_saida.Enabled = False
            Opt_entrada.Enabled = True
        End If
    End If
    TBContas.Close
    
    'Status da NF
    If TBControleNF!Int_status = 1 Then
        opt_Ativa.Value = True
        NF_cancelada = False
    Else
        opt_Cancelada.Value = True
        NF_cancelada = True
        StrSql = "Update tbl_Dados_Nota_Fiscal Set int_status = '2' Where ID = '" & txtId.Text & "'"
        Conexao.Execute StrSql
    End If
    
    If IsNull(TBControleNF!Id_Int_Cliente) = False Then
        txtIDCliente.Text = TBControleNF!Id_Int_Cliente
    Else
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select IDCliente from clientes where nomerazao = '" & txt_Razao & "' order by nomerazao", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            txtIDCliente.Text = TBClientes!IDCliente
        Else
            txtIDCliente.Text = 0
        End If
        TBClientes.Close
    End If
    IDCliente = txtIDCliente
    
    Novo_Nota = False
    GerarOF = False
    
    txt_DtEmissao.Text = IIf(IsNull(TBControleNF!dt_DataEmissao), Date, Format(TBControleNF!dt_DataEmissao, "dd/mm/yyyy"))
    Txt_hora_emissao = IIf(IsNull(TBControleNF!Hora_emissao), "__:__:__", Left(TBControleNF!Hora_emissao, 8))
    If IsNull(TBControleNF!dt_Saida_Entrada) = False And TBControleNF!dt_Saida_Entrada <> "" Then txt_EntSai = Format(TBControleNF!dt_Saida_Entrada, "dd/mm/yyyy") Else txt_EntSai = "__/__/____"
    mskHoraSaida = IIf(IsNull(TBControleNF!txt_Hora_Saida), "__:__:__", Left(TBControleNF!txt_Hora_Saida, 8))
    
    If Formulario = "Estoque/Ordem de faturamento" Then
        txtDtValidacao = IIf(IsNull(TBControleNF!DtValidacaoOF), "", TBControleNF!DtValidacaoOF)
        txtRespValidacao = IIf(IsNull(TBControleNF!RespValidacaoOF), "", TBControleNF!RespValidacaoOF)
    Else
        txtDtValidacao = IIf(IsNull(TBControleNF!DtValidacao), "", TBControleNF!DtValidacao)
        txtRespValidacao = IIf(IsNull(TBControleNF!RespValidacao), "", TBControleNF!RespValidacao)
    End If
    
    txt_IE = IIf(IsNull(TBControleNF!txt_IE_Cliente), "", TBControleNF!txt_IE_Cliente)
    txt_IEST = IIf(IsNull(TBControleNF!txt_Inscr_Substituto), "", TBControleNF!txt_Inscr_Substituto)
    txt_Razao = IIf(IsNull(TBControleNF!txt_Razao_Nome), "", TBControleNF!txt_Razao_Nome)
    Cliente = txt_Razao
    If txttipocliente <> "" And TBControleNF!txt_UF <> "EX" Then txt_CNPJ_CPF.Text = IIf(IsNull(TBControleNF!txt_CNPJ_CPF), "", TBControleNF!txt_CNPJ_CPF)
    txt_Endereco = IIf(IsNull(TBControleNF!txt_Endereco), "", TBControleNF!txt_Endereco)
    txt_Bairro = IIf(IsNull(TBControleNF!txt_Bairro), "", TBControleNF!txt_Bairro)
    Txt_CEP = IIf(IsNull(TBControleNF!Txt_CEP), "", TBControleNF!Txt_CEP)
    txt_Municipio = IIf(IsNull(TBControleNF!txt_Municipio), "", TBControleNF!txt_Municipio)
    txt_FoneFAX = IIf(IsNull(TBControleNF!txt_Fone_Fax), "", TBControleNF!txt_Fone_Fax)
    
    'NF impressa
    Opt_nao.Value = True
    'cmdcliente.Enabled = True
    NF_enviada = False
    If Frame1(5).Visible = True Then
        If TBControleNF!Imprimir = True Then
            Opt_sim.Value = True
            'cmdcliente.Enabled = False
            NF_enviada = True
        End If
    End If
    
    'Chave de acesso e NFe liberada
    NFe_liberada = False
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If TBControleNF!int_TipoNota = 1 And (TBAbrir!status = 100 Or TBAbrir!status = 101) Then NFe_liberada = True
        
        Txt_chave_acesso = IIf(IsNull(TBAbrir!Chave_acesso), "", TBAbrir!Chave_acesso)
        txt_nsNRec = IIf(IsNull(TBAbrir!nsNRec), "", TBAbrir!nsNRec)
'        With cmbForma_pagamento
'            Select Case TBAbrir!Forma_pagamento
'                Case "0": .Text = "0 - pagamento à vista"
'                Case "1": .Text = "1 - pagamento à prazo"
'                Case "2": .Text = "2 - outros"
'            End Select
'        End With
        With cmbFinalidade_emissao
            Select Case TBAbrir!Finalidade_emissao
                Case "1": .Text = "1 - Normal"
                Case "2": .Text = "2 - Complementar"
                Case "3": .Text = "3 - Ajuste"
                Case "4": .Text = "4 - Devolução/Retorno"
            End Select
        End With
        With Cmb_consumidor
            Select Case TBAbrir!Consumidor_final
                Case "0": .Text = "0 - Não"
                Case "1": .Text = "1 - Sim"
            End Select
        End With
    End If
    TBAbrir.Close
    
   ' If NFe_liberada = True Then Frame1(3).Loc = False Else Frame1(3).Enabled = True
    
    'NF alterada (totalização)
    If TBControleNF!Alterar = True Then NF_alterada = True Else NF_alterada = False
    
    ProcCarregaEntrega
'    ProcCarregaCobranca
    
    If IsNull(TBControleNF!txt_UF) = False Then cbo_UF = TBControleNF!txt_UF
1:
    txtMoedaPrincipal = IIf(IsNull(TBControleNF!Moeda), "", TBControleNF!Moeda)
    txtVlrMoedaPrincipal = IIf(IsNull(TBControleNF!ValorMoeda), "", Format(TBControleNF!ValorMoeda, "###,##0.00"))
   ' Txt_obs = IIf(IsNull(TBControleNF!Obs), "", TBControleNF!Obs)
    
    If TBControleNF!pedido_interno = True Then Faturamento_Vendas_PI = True Else Faturamento_Vendas_PI = False
End If
TBControleNF.Close
Frame1(6).Enabled = True
'ProcLimparTudo

If NF_alterada = True Then ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)

Exit Sub
tratar_erro:
    If Err.Number = 383 Then
        USMsgBox ("Este destinatário não é compativel com esta CFOP, favor revisar."), vbExclamation, "CAPRIND v5.0"
        GoTo 1
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaTotaisNota(ID_nota As Long)
On Error GoTo tratar_erro

'If NotaFiscalPronta = True Then Exit Sub

If txtId = "" Then Exit Sub
ProcLimpaCamposTotaisNota
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    txtVLRMPA = IIf(IsNull(TBTotaisnota!VlrMPA), "0,00", Format(TBTotaisnota!VlrMPA, "###,##0.00"))
    txtVLRMOA = IIf(IsNull(TBTotaisnota!VLRMOA), "0,00", Format(TBTotaisnota!VLRMOA, "###,##0.00"))
    
    'Verifica se a empresa ou o fornecedor é SN e libera o campo de crédito
    If Faturamento_NF_Saida = True Then
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select Simples from empresa where codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    Else
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select Simples from clientes where ID = " & txtIDCliente.Text & " and NomeRazao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBFIltro.EOF = True Then
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select Simples from compras_fornecedores where IDCliente = " & txtIDCliente.Text & " and Nome_Razao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
        End If
    End If
    If TBFIltro.EOF = False Then
        With txtICMSSN
            .Text = "0,00"
            .Locked = True
            .TabStop = False
            If TBFIltro!Simples = True Then
                If Faturamento_NF_Saida = True And (Opt_saida.Value = True Or Opt_entrada.Value = True And cbo_UF <> "EX") Then
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select ICMS_SN from tbl_Detalhes_Nota where ID_nota = " & txtId & " and ICMS_SN IS NOT NULL and ICMS_SN > 0", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        '======================================================================================
 '                           If AliquotaSN = 0 Then
                            .Text = IIf(IsNull(TBProduto!ICMS_SN), 0, Format(TBProduto!ICMS_SN, "###,##0.0000"))
'                            Else
 '                           .Text = Format(AliquotaSN, "###,##0.0000")
'                            End If
                        '======================================================================================
                    
 '                       .Text = IIf(IsNull(TBProduto!ICMS_SN), 0, Format(TBProduto!ICMS_SN, "###,##0.00"))
                    Else
                   Set TBControleNF = CreateObject("adodb.recordset")
                       TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                       If TBControleNF.EOF = False Then
                       TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
                       End If
                       TBControleNF.Close

                        ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
                        .Text = IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
                    End If
                    TBProduto.Close
                End If
                .Locked = False
                .TabStop = True
            End If
        End With
    End If
    TBFIltro.Close
    
    TBTotaisnota!Valor_total_ICMS_SN = IIf(txtValorICMSSN = "", 0, txtValorICMSSN)
    TBTotaisnota.Update
    
'    txt_BaseICMS.Text = Format(TBTotaisnota!dbl_Base_ICMS, "###,##0.00")
'    txt_vlrICMS.Text = Format(TBTotaisnota!dbl_Valor_ICMS, "###,##0.00")
'    txt_baseICMSs.Text = Format(TBTotaisnota!dbl_Base_ICMS_Subst, "###,##0.00")
'    txt_ICMSs.Text = Format(TBTotaisnota!dbl_Valor_ICMS_Subst, "###,##0.00")
'    txt_vlrtotalprod.Text = Format(TBTotaisnota!dbl_Valor_Total_Produtos, "###,##0.00")
'    txt_VlrFrete.Text = Format(TBTotaisnota!dbl_Valor_Frete, "###,##0.00")
'    txt_vlrSeguro.Text = Format(TBTotaisnota!dbl_Valor_Seguro, "###,##0.00")
'    txt_OutrasDisp.Text = Format(TBTotaisnota!dbl_Desp_Adicionais, "###,##0.00")
'    txt_TotalIPI.Text = Format(TBTotaisnota!dbl_Valor_Total_IPI, "###,##0.00")
'    Txt_valor_total_desc = Format(TBTotaisnota!Valor_total_desconto, "###,##0.00")
'    Txt_valor_total_desc_SUFRAMA = Format(TBTotaisnota!Valor_total_desconto_SUFRAMA, "###,##0.00")
    txt_ValorNota.Text = Format(TBTotaisnota!dbl_Valor_Total_Nota, "###,##0.00")
    
    If NF_alterada = True Then
        txtVLRMPA.ForeColor = &HFF&
        txtVLRMOA.ForeColor = &HFF&
        txt_BaseICMS.ForeColor = &HFF&
        txt_VlrICMS.ForeColor = &HFF&
        txt_baseICMSs.ForeColor = &HFF&
        txt_ICMSs.ForeColor = &HFF&
        txt_VlrTotalProd.ForeColor = &HFF&
        txt_VlrFrete.ForeColor = &HFF&
        txt_vlrSeguro.ForeColor = &HFF&
        txt_OutrasDisp.ForeColor = &HFF&
        txt_TotalIPI.ForeColor = &HFF&
        Txt_valor_total_desc.ForeColor = &HFF&
        Txt_valor_total_desc_SUFRAMA.ForeColor = &HFF&
        txt_ValorNota.ForeColor = &HFF&
    Else
        txtVLRMPA.ForeColor = &H80000008
        txtVLRMOA.ForeColor = &H80000008
        txt_BaseICMS.ForeColor = &H80000008
        txt_VlrICMS.ForeColor = &H80000008
        txt_baseICMSs.ForeColor = &H80000008
        txt_ICMSs.ForeColor = &H80000008
        txt_VlrTotalProd.ForeColor = &H80000008
        txt_VlrFrete.ForeColor = &H80000008
        txt_vlrSeguro.ForeColor = &H80000008
        txt_OutrasDisp.ForeColor = &H80000008
        txt_TotalIPI.ForeColor = &H80000008
        Txt_valor_total_desc.ForeColor = &H80000008
        Txt_valor_total_desc_SUFRAMA.ForeColor = &H80000008
        txt_ValorNota.ForeColor = &H80000008
    End If
    
    'Serviços
    txtTotalservicos.Text = Format(IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota_Serv) = False, TBTotaisnota!dbl_Valor_Total_Nota_Serv, 0), "###,##0.00")
    Txt_valorISS = Format(TBTotaisnota!dbl_valor_total_iss, "###,##0.00")
    txtTotal_PIS = Format(TBTotaisnota!Total_PIS_serv, "###,##0.00")
    txtTotal_Cofins = Format(TBTotaisnota!Total_Cofins_serv, "###,##0.00")
    txtTotal_CSLL = Format(TBTotaisnota!Total_CSLL_serv, "###,##0.00")
    txtTotal_INSS = Format(TBTotaisnota!Total_INSS_serv, "###,##0.00")
    txtTotal_IRRF = Format(TBTotaisnota!Total_IRRF_serv, "###,##0.00")
'=============================================================================================================
'    txt_ValorNota2.Text = Format(IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota) = False, TBTotaisnota!dbl_Valor_Total_Nota, 0), "###,##0.00")
    txt_ValorNota2.Text = Format(IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota_Serv) = False, TBTotaisnota!dbl_Valor_Total_Nota_Serv, 0), "###,##0.00")
'====================================================================================================================

End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosAdicionais()
On Error GoTo tratar_erro

txtDados_Corpo = ""
txtDados_DadosAdicionais = ""
Set TBCodigoDesc = CreateObject("adodb.recordset")
TBCodigoDesc.Open "Select * from tbl_dadosadicionais where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBCodigoDesc.EOF = False And IsNull(TBCodigoDesc!mem_DadosAdicionais) = False Then
    txtDados_Corpo = IIf(IsNull(TBCodigoDesc!mem_corpo) = False, TBCodigoDesc!mem_corpo, "")
    txtDados_DadosAdicionais = IIf(IsNull(TBCodigoDesc!mem_DadosAdicionais) = False, TBCodigoDesc!mem_DadosAdicionais, "")
Else
    ProcAtualizarDadosAdicionais 'txtDados_DadosAdicionais = FunCarregaCampoDACFOP(txtid)
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunCarregaCampoDACFOP(ID_nota As Long) As String
On Error GoTo tratar_erro

'Carrega os dados adicionais das CFOP dos produtos
Dados_acicionais = ""
Familiatext = ""

Set TBComponente = CreateObject("adodb.recordset")
TBComponente.Open "Select CFOP.txt_dados_adicionais, CFOP.IDCountCfop, NFP.ICMS_SN from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.txt_dados_adicionais IS NOT NULL group by CFOP.txt_dados_adicionais,CFOP.IDCountCfop, NFP.ICMS_SN", Conexao, adOpenKeyset, adLockOptimistic
If TBComponente.EOF = False Then
    Do While TBComponente.EOF = False
        Dados_acicionais = IIf(IsNull(TBComponente!txt_dados_adicionais), "", TBComponente!txt_dados_adicionais)
        If txtIDCliente <> "0" And txtIDCliente <> "" And txttipocliente <> "E" And txttipocliente <> "F" And txttipocliente <> "J" And txttipocliente <> "FP" Then
            Set TBCQ = CreateObject("adodb.recordset")
            TBCQ.Open "Select * from tbl_NaturezaOperacao_cliente where ID_CFOP = " & TBComponente!IDCountCfop & " and ID_cliente = " & txtIDCliente, Conexao, adOpenKeyset, adLockOptimistic
            If TBCQ.EOF = False Then Dados_acicionais = IIf(IsNull(TBCQ!dados_adicionais), "", TBCQ!dados_adicionais)
            TBCQ.Close
        End If
        If Dados_acicionais <> "" And Familiatext <> Dados_acicionais Then
            DAtexto = Replace(Dados_acicionais, Left("@NfAliqICMSSN", 13), txtICMSSN)
'=================================================================================================
' Valor aproximado dos tributos
'=================================================================================================
           Set TBAbrir = CreateObject("adodb.recordset")
           TBAbrir.Open "Select * from tbl_Totais_Nota where ID_nota = " & ID_nota & "", Conexao, adOpenKeyset, adLockOptimistic
           If TBAbrir.EOF = False Then
           valorDAS = TBAbrir!Total_DAS
           Else
           valorDAS = "0,00"
           End If
           TBAbrir.Close
            DAtexto = Replace(DAtexto, Left("@NfVlrAproxTrib", 15), Format(valorDAS, "###,##0.00"))
'==================================================================================================
            DAtexto = Replace(DAtexto, Left("@NfVlrICMSSN", 12), Format(txtValorICMSSN, "###,##0.00"))
            If FunCarregaCampoDACFOP = "" Then
                FunCarregaCampoDACFOP = DAtexto
            Else
                FunCarregaCampoDACFOP = FunCarregaCampoDACFOP & vbCrLf & DAtexto
            End If
        End If
        Familiatext = Dados_acicionais
        'Debug.print Familiatext
        TBComponente.MoveNext
    Loop
End If
TBComponente.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Sub ProcLimpaCamposDuplicata()
On Error GoTo tratar_erro

cbo_PortBanco.ListIndex = -1
txt_Agencia = ""
txt_conta = ""
Txt_ID_duplicata = 0
'txtValorDuplicata.Text = ""
'txt_Vencimento.Value = Date
'txt_Duplicata.Text = "___/___"
ProcCarregaComboForma
cmbtipo_conta.ListIndex = -1
txt_Cond_Recebimento = ""
'txtObs_Duplicata = ""
lst_Duplicata.ListItems.Clear

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposTransp()
On Error GoTo tratar_erro

txtidinttransp.Text = ""
Cmb_tipo_transp.ListIndex = -1
TxtTransp_nome.Text = ""
txtTransp_endereco.Text = ""
txtTransp_numero.Text = ""
'opt_emitente.Value = False
'opt_destinatario.Value = False
'Opt_terceiros.Value = False
'opt_sem_frete.Value = False
'cmbFrete.ListIndex = -1
txtTransp_municipio.Text = ""
txtTransp_uf_Transportadora = ""
txtTransp_cnpj.Text = ""
With txtTransp_IE
    .Text = ""
    .Locked = False
    .TabStop = True
End With
txtTransp_Placa.Text = ""
txtTransp_uf.ListIndex = -1
txtTransp_qtd.Text = "0"
ProcCarregaComboTranspMarcaEspecie Cmb_transp_especie, "E"
ProcCarregaComboTranspMarcaEspecie Cmb_transp_marca, "M"
Txt_numeracao = ""
txtTransp_pesoBruto.Text = ""
txtTransp_pesoliquido.Text = ""
Cmb_via_transp.ListIndex = -1
Txt_codigo_ANTT = ""
Cmb_frete_contratado.ListIndex = -1
'chkSedex.Value = 0
'Chk_enviar_XML_transp.Value = 1
'lst_DadosTransp.ListItems.Clear

If Formulario = "Estoque/Ordem de faturamento" Then

End If


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaBanco()
On Error GoTo tratar_erro
Dim Portbanco As String

If cbo_PortBanco.Text <> "" Then
Exit Sub
End If

cbo_PortBanco.Clear
Set TBOrdem = CreateObject("adodb.recordset")
TBOrdem.Open "Select txt_descricao, Id from tbl_instituicoes Where Bloqueado = 'False' and DtValidacao IS NOT NULL Group by txt_descricao, Id", Conexao, adOpenKeyset, adLockOptimistic
If TBOrdem.EOF = False Then
    Do While TBOrdem.EOF = False
        cbo_PortBanco.AddItem TBOrdem!Txt_descricao
        cbo_PortBanco.ItemData(cbo_PortBanco.NewIndex) = TBOrdem!ID
        TBOrdem.MoveNext
    Loop
End If
TBOrdem.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub cbo_PortBanco_Click()
On Error GoTo tratar_erro

Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_instituicoes where txt_descricao = '" & cbo_PortBanco.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
    txt_Agencia.Text = IIf(IsNull(TBLISTA!txt_Agencia), "", TBLISTA!txt_Agencia)
    txt_conta.Text = IIf(IsNull(TBLISTA!txt_conta), "", TBLISTA!txt_conta)
End If
TBLISTA.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDuplicatas()
On Error GoTo tratar_erro
Dim Banco As String
    
If cmb_tipopagto.Text = "" And txt_Cond_Recebimento.Text = "" Then condicao_duplicata = "Alterar"


ProcCarregaBanco

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * From tbl_Detalhes_Recebimento WHERE id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    NomeCampo = "o banco"
    If IsNull(TBAbrir!txt_Portador_Banco) = False And TBAbrir!txt_Portador_Banco <> "" Then cbo_PortBanco = TBAbrir!txt_Portador_Banco
    NomeCampo = "a forma de pagamento/recebimento"
    If IsNull(TBAbrir!txt_tipopagto) = False And TBAbrir!txt_tipopagto <> "" Then cmb_tipopagto = TBAbrir!txt_tipopagto
1:
    txt_Agencia = IIf(IsNull(TBAbrir!txt_Agencia) = True, "", TBAbrir!txt_Agencia)
    txt_conta = IIf(IsNull(TBAbrir!txt_conta) = True, "", TBAbrir!txt_conta)
    txt_Cond_Recebimento = IIf(IsNull(TBAbrir!txt_Cond_Recebimento) = True, "", TBAbrir!txt_Cond_Recebimento)
Else
    If Opt_saida.Value = True Then
        Set TBCarteira = CreateObject("adodb.recordset")
        TBCarteira.Open "Select * from tbl_proposta_nota where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
        If TBCarteira.EOF = False Then
            Set TBProposta = CreateObject("adodb.recordset")
            TBProposta.Open "Select cotacao from vendas_proposta where ncotacao = '" & TBCarteira!Proposta & "' and revisao = " & TBCarteira!Revisao & " and Status = 'FATURADA' or ncotacao = '" & TBCarteira!Proposta & "' and revisao = " & TBCarteira!Revisao & " and Status = 'FATURADA PARCIAL'", Conexao, adOpenKeyset, adLockOptimistic
            If TBProposta.EOF = False Then
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * from vendas_comercial where cotacao = " & TBProposta!Cotacao, Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes), 0, TBVendas!condicoes)
                End If
                TBVendas.Close
            End If
            TBProposta.Close
        Else
            If txttipocliente <> "J" And txttipocliente <> "P" And txttipocliente <> "E" Then
                Set TBProposta = CreateObject("adodb.recordset")
                TBProposta.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBProposta.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBProposta!condicoes), 0, TBProposta!condicoes)
                End If
                TBProposta.Close
            End If
        End If
        TBCarteira.Close
    Else
        Set TBPedido = CreateObject("adodb.recordset")
        TBPedido.Open "Select Compras_pedido.idpedido FROM tbl_proposta_nota INNER JOIN Compras_pedido ON Compras_pedido.Pedido = tbl_proposta_nota.proposta where tbl_proposta_nota.id_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
        If TBPedido.EOF = False Then
            Set TBCompras = CreateObject("adodb.recordset")
            TBCompras.Open "Select Condicoes from Compras_comercial where Idpedido = " & TBPedido!IDpedido, Conexao, adOpenKeyset, adLockOptimistic
            If TBCompras.EOF = False Then
                txt_Cond_Recebimento.Text = IIf(IsNull(TBCompras!condicoes), 0, TBCompras!condicoes)
            End If
            TBCompras.Close
        Else
            If txttipocliente <> "J" And txttipocliente <> "P" And txttipocliente <> "E" And txtIDCliente.Text <> "" Then
                Set TBProposta = CreateObject("adodb.recordset")
                TBProposta.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
                If TBProposta.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBProposta!condicoes), 0, TBProposta!condicoes)
                End If
                TBProposta.Close
            End If
        End If
        TBPedido.Close
        
        'Carrega OBS do pedido
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select CC.observacoes from (tbl_proposta_nota P INNER JOIN Compras_pedido CP ON P.Proposta = CP.Pedido) INNER JOIN compras_comercial CC ON CC.IDpedido = CP.IDpedido where P.ID_nota = " & txtId & " and CC.Obs_financeiro = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            txtObs_Duplicata = IIf(IsNull(TBVendas!Observacoes), "", TBVendas!Observacoes)
        End If
        TBVendas.Close
    End If
    
    'Carrega banco e tipo documento do cliente ou fornecedor
    If txttipocliente = "J" Or txttipocliente = "F" Then
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select banco, Tipo_doc from compras_fornecedores where IDCliente = " & txtIDCliente & " AND (banco IS NOT NULL or Tipo_doc IS NOT NULL)", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            NomeCampo = "portador/banco"
            If TBVendas!Banco <> "" Then cbo_PortBanco.Text = TBVendas!Banco
            NomeCampo = "tipo do documento"
            If TBVendas!Tipo_doc <> "" Then cmbtipo_conta.Text = TBVendas!Tipo_doc
        End If
        TBVendas.Close
    ElseIf txttipocliente = "JR" Or txttipocliente = "JP" Or txttipocliente = "FR" Or txttipocliente = "FP" Then
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select banco, Tipo_doc from clientes where IDCliente = " & txtIDCliente & " AND (banco IS NOT NULL or Tipo_doc IS NOT NULL)", Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            NomeCampo = "portador/banco"
            If TBVendas!Banco <> "" Then cbo_PortBanco.Text = TBVendas!Banco
            NomeCampo = "tipo do documento"
            If TBVendas!Tipo_doc <> "" Then cmbtipo_conta.Text = TBVendas!Tipo_doc
        End If
        TBVendas.Close
    End If
End If
2:
ProcCarregaListaDuplicatas IIf(txtId = "", 0, txtId)
TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        USMsgBox ("Não foi encontrado " & NomeCampo & " desta nota."), vbExclamation, "CAPRIND v5.0"
        If NomeCampo = "o banco" Or NomeCampo = "a forma de pagamento/recebimento" Then GoTo 1 Else GoTo 2
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaListaServicos()
On Error GoTo tratar_erro

If txtId = "" Then Exit Sub
qtdeliberada = 0 'Qtde de serviços
TotalServicos = 0

'Impostos
Valor_PIS_Serv = 0
Valor_Cofins_Serv = 0
Valor_CSLL_Serv = 0
TotalISS = 0
Valor_INSS_Serv = 0
Valor_IRPJ_Serv = 0
Valor_IRRF_Serv = 0
Valor_DAS_Serv = 0
Vlr_total_aprox_tributos_serv = 0

If ListaProdutos.ListItems.Count = 0 Then
    TotalProduto = 0
    TotalIPI = 0
    Valor_DAS = 0
    Vlr_total_aprox_tributos_prod = 0
End If

Listaservicos.ListItems.Clear
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NFS.*, TTN.DAS, CFOP.ID_CFOP, CFOP.Retem from (tbl_Detalhes_Nota NFS LEFT JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFS.ID_CFOP) LEFT JOIN tbl_Totais_Nota TTN ON TTN.ID_nota = NFS.id_nota where NFS.id_nota = " & txtId.Text & " and NFS.Tipo = 'S' order by NFS.Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If Atualizacao = False Then
        TBProduto.MoveLast
        Contador = 0
        TBProduto.MoveFirst
    End If
    Do While TBProduto.EOF = False
        With Listaservicos.ListItems
            .Add , , TBProduto!Int_codigo
            .Item(.Count).SubItems(1) = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
            .Item(.Count).SubItems(2) = IIf(IsNull(TBProduto!ID_CFOP), "", TBProduto!ID_CFOP)
            .Item(.Count).SubItems(3) = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
            .Item(.Count).SubItems(4) = IIf(IsNull(TBProduto!txt_Unid), "SE", TBProduto!txt_Unid)
            .Item(.Count).SubItems(5) = IIf(IsNull(TBProduto!Unidade_com), "SE", TBProduto!Unidade_com)
            .Item(.Count).SubItems(6) = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
            qtdeliberada = qtdeliberada + IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
            .Item(.Count).SubItems(7) = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
            .Item(.Count).SubItems(8) = IIf(IsNull(TBProduto!dbl_ValorTotal), "", Format(TBProduto!dbl_ValorTotal, "###,##0.00"))
            '.Item(.Count).SubItems(9) = IIf(IsNull(TBProduto!ISS), "", TBProduto!ISS)
            '.Item(.Count).SubItems(10) = IIf(IsNull(TBProduto!VlrISS), "", Format(TBProduto!VlrISS, "###,##0.00"))
            .Item(.Count).SubItems(9) = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
            .Item(.Count).SubItems(10) = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
            TotalServicos = TotalServicos + IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
            
            'Impostos
            Valor_DAS_Serv = Valor_DAS_Serv + Format(((TBProduto!dbl_ValorTotal * IIf(IsNull(TBProduto!DAS), 0, TBProduto!DAS)) / 100), "###,##0.00")
            If IsNull(TBProduto!Total_PIS_serv) = False Then Valor_PIS_Serv = Valor_PIS_Serv + TBProduto!Total_PIS_serv
            If IsNull(TBProduto!Total_Cofins_serv) = False Then Valor_Cofins_Serv = Valor_Cofins_Serv + TBProduto!Total_Cofins_serv
            If IsNull(TBProduto!Total_CSLL_serv) = False Then Valor_CSLL_Serv = Valor_CSLL_Serv + TBProduto!Total_CSLL_serv
            TotalISS = TotalISS + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
            If IsNull(TBProduto!Total_INSS_serv) = False Then Valor_INSS_Serv = Valor_INSS_Serv + TBProduto!Total_INSS_serv
            If IsNull(TBProduto!Total_IRPJ_serv) = False Then Valor_IRPJ_Serv = Valor_IRPJ_Serv + TBProduto!Total_IRPJ_serv
            If IsNull(TBProduto!Total_IRRF_serv) = False Then Valor_IRRF_Serv = Valor_IRRF_Serv + TBProduto!Total_IRRF_serv
            Vlr_total_aprox_tributos_serv = Vlr_total_aprox_tributos_serv + IIf(IsNull(TBProduto!Valor_aprox_tributos), 0, TBProduto!Valor_aprox_tributos)
            
            TBProduto.MoveNext
            If Atualizacao = False Then
                Contador = Contador + 1
            End If
        End With
    Loop
Else
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & txtId.Text & " and Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        ProcLimpaCamposTotaisNota
    End If
End If
TBProduto.Close
txtTotalservicos.Text = Format(TotalServicos, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaLista()
On Error GoTo tratar_erro

If txtId = "" Then Exit Sub
qtdeliberar = 0 'Qtde de produtos
TotalServicos = 0
TotalProduto = 0
Valores = 0
PV = 0
PV1 = 0
VlrTotalRetorno = 0
VlrTotalRetornoNF = 0

'Impostos
BASECALCULO = 0 'Valor total da base de calculo do ICMS
Total_ICMS = 0 'Valor total do ICMS

BC = 0
TTICMS = 0
Calcula_ICMS = 0
TotalBCICMSCST = 0
BCICMSCST = 0
TotalICMSCST = 0
ICMSCST = 0
TotalIPI = 0
Valor_PIS_Prod = 0
Valor_Cofins_Prod = 0
Valor_CSLL_Prod = 0
Valor_IRPJ_Prod = 0
Valor_Retencao_PIS = 0
Valor_Retencao_Cofins = 0
VlrICMS_suframa = 0
ICMSOUTROS = 0
Frete = 0
Seguro = 0
Acessorias = 0
QuantsolicitadoN2 = 0 'Desconto
Valor_total = 0
Valor_DAS = 0
Qtd = 0
Vlr_total_aprox_tributos_prod = 0
ValorICMS_desonerado = 0
ValorTotalFCP = 0
ValorTotalICMSINTUFDEST = 0
ValorTotalICMSINTUFREM = 0

Credito_ICMS = 0
ValorPorc = 0 'Vlr MPA

ListaProdutos.ListItems.Clear

Set TBProduto = CreateObject("adodb.recordset")
StrSql = "Select NFP.*, TTN.DAS, CST.Valor_BC, CST.Valor_ICMS,CST.Valor_ICMS_desonerado, CST.Valor_ICMS_SN, CST.Valor_BC_ST, CST.Valor_ICMS_ST, CST.Valor_ICMS_FCP, CST.Valor_ICMS_INT_UF_DEST, CST.Valor_ICMS_INT_UF_REM from (tbl_Detalhes_Nota NFP LEFT JOIN tbl_Detalhes_Nota_CST_ICMS CST ON CST.ID_item = NFP.Int_codigo) LEFT JOIN tbl_Totais_Nota TTN ON TTN.ID_nota = NFP.ID_nota where NFP.id_nota = " & txtId & " and NFP.Tipo = 'P' order by NFP.int_codigo"
'Debug.print StrSql
TBProduto.Open StrSql, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If Atualizacao = False Then
        Contador = 0
    End If
    
    Do While TBProduto.EOF = False
        Frete = Frete + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
        Seguro = Seguro + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
        Acessorias = Acessorias + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
        QuantsolicitadoN2 = QuantsolicitadoN2 + IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
    
    If NotaFiscalPronta = False Then
        ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
    End If
     
        Valores = IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd
        
        With ListaProdutos.ListItems
            .Add , , TBProduto!Int_codigo
            .Item(.Count).SubItems(1) = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select ID_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                .Item(.Count).SubItems(2) = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
            End If
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDIntClasse from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                .Item(.Count).SubItems(3) = IIf(IsNull(TBAbrir!IDIntClasse), "", TBAbrir!IDIntClasse)
            End If
            TBAbrir.Close
            
            .Item(.Count).SubItems(4) = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
            .Item(.Count).SubItems(5) = IIf(IsNull(TBProduto!txt_Unid), "", TBProduto!txt_Unid)
            .Item(.Count).SubItems(6) = IIf(IsNull(TBProduto!Unidade_com), "", TBProduto!Unidade_com)
            .Item(.Count).SubItems(7) = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
            .Item(.Count).SubItems(8) = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.000000"))
            .Item(.Count).SubItems(9) = Format(TBProduto!dbl_ValorTotal, "###,##0.0000")
            .Item(.Count).SubItems(10) = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)

            
            If NotaFiscalPronta = False Then
            qt = 0
            Set TBFIltro = CreateObject("adodb.recordset")
            TBFIltro.Open "Select ISNULL(SUM(ECEV.Qtde_empenhada), 0) as qt from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Estoque_Controle_Empenho_Vendas ECEV ON ECEV.ID_carteira = NFPP.ID_carteira) INNER JOIN Estoque_controle EC ON EC.IDestoque = ECEV.ID_estoque where NFPP.ID_prod_NF = " & TBProduto!Int_codigo & " and EC.Desenho = '" & TBProduto!int_Cod_Produto & "' and ECEV.Qtde_empenhada - ISNULL(ECEV.Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
            If TBFIltro.EOF = False Then
                'Verifica qtde. faturada
                Quant = 0
                Set TBFI = CreateObject("adodb.recordset")
                TBFI.Open "Select ISNULL(SUM(NFP1.int_Qtd), 0) AS Quant from tbl_Dados_Nota_Fiscal AS NF RIGHT OUTER JOIN tbl_Detalhes_Nota AS NFP1 INNER JOIN tbl_Detalhes_Nota_pedidos AS NFPP1 ON NFP1.Int_codigo = NFPP1.ID_prod_NF INNER JOIN Estoque_Controle AS EC INNER JOIN Estoque_Controle_Empenho_Vendas AS ECEV ON EC.IdEstoque = ECEV.ID_estoque INNER JOIN tbl_Detalhes_Nota_pedidos AS NFPP ON ECEV.ID_carteira = NFPP.ID_carteira AND EC.Desenho = NFPP.Codinterno ON NFPP1.ID_carteira = ECEV.ID_carteira AND NFPP1.Codinterno = EC.Desenho AND NFPP1.ID_prod_NF = NFPP.ID_prod_NF ON NF.ID = NFP1.ID_Nota where NFPP.ID_prod_NF = " & TBProduto!Int_codigo & " and NFPP.Codinterno = '" & TBProduto!int_Cod_Produto & "' and NF.DtValidacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                If TBFI.EOF = False Then
                    Quant = TBFI!Quant
                End If
                qt = IIf(Formulario = "Estoque/Ordem de faturamento", TBFIltro!qt - Quant, TBFIltro!qt)
                
                If qt <= 0 Then
                    StatusEmpenho = "Não"
                ElseIf qt >= TBProduto!int_Qtd Then
                        StatusEmpenho = "Sim"
                    Else
                        StatusEmpenho = "Parcial"
                End If
            End If
            TBFIltro.Close
            .Item(.Count).SubItems(11) = StatusEmpenho
            
            If TBProduto!retorno = False Or TBProduto!retorno = True And Soma_retorno_total_NF = True Then
'========================================================================================================================
                TotalProduto = TotalProduto + Format(IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd, "###,##0.00")
'                TotalProduto = TotalProduto + (Format(IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd, "###,##0.00") - TBProduto!Valor_frete)
'========================================================================================================================
                Valor_total = Valores + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
                
                'Impostos
                Valor_DAS = Valor_DAS + Format(((Valor_total * IIf(IsNull(TBProduto!DAS), 0, TBProduto!DAS)) / 100), "###,##0.00")
                TotalIPI = TotalIPI + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi)
                If IsNull(TBProduto!Valor_ICMS_SN) = True Or TBProduto!Valor_ICMS_SN = 0 Or Aplicacao = "T" Then
                    BASECALCULO = BASECALCULO + IIf(IsNull(TBProduto!Valor_BC), 0, TBProduto!Valor_BC)
                    Total_ICMS = Total_ICMS + IIf(IsNull(TBProduto!Valor_ICMS), 0, TBProduto!Valor_ICMS)
                End If
                TotalBCICMSCST = TotalBCICMSCST + IIf(IsNull(TBProduto!Valor_BC_ST), 0, TBProduto!Valor_BC_ST)
                TotalICMSCST = TotalICMSCST + IIf(IsNull(TBProduto!Valor_ICMS_ST), 0, TBProduto!Valor_ICMS_ST)
                
                ValorTotalFCP = ValorTotalFCP + IIf(IsNull(TBProduto!Valor_ICMS_FCP), 0, TBProduto!Valor_ICMS_FCP)
                ValorTotalICMSINTUFDEST = ValorTotalICMSINTUFDEST + IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_dest), 0, TBProduto!Valor_ICMS_INT_UF_dest)
                ValorTotalICMSINTUFREM = ValorTotalICMSINTUFREM + IIf(IsNull(TBProduto!Valor_ICMS_INT_UF_rem), 0, TBProduto!Valor_ICMS_INT_UF_rem)
                
                If IsNull(TBProduto!Total_PIS_prod) = False Then Valor_PIS_Prod = Valor_PIS_Prod + TBProduto!Total_PIS_prod
                If IsNull(TBProduto!Total_Cofins_prod) = False Then Valor_Cofins_Prod = Valor_Cofins_Prod + TBProduto!Total_Cofins_prod
                If IsNull(TBProduto!Total_CSLL_prod) = False Then Valor_CSLL_Prod = Valor_CSLL_Prod + TBProduto!Total_CSLL_prod
                If IsNull(TBProduto!Total_IRPJ_prod) = False Then Valor_IRPJ_Prod = Valor_IRPJ_Prod + TBProduto!Total_IRPJ_prod
                
                'Soma retenção de PIS/Cofins
                Valor_Retencao_PIS = Valor_Retencao_PIS + IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS)
                Valor_Retencao_Cofins = Valor_Retencao_Cofins + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins)
                            
                'Soma o ICMS do suframa
                VlrICMS_suframa = VlrICMS_suframa + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                
                If NF_enviada = False And NFe_liberada = False And Opt_entrada = False Then ProcReacalculaICMSIPI
                If TBProduto!Remessa = False Then qtdeliberar = qtdeliberar + IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
                ValorPorc = ValorPorc + IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA)
            Else
                VlrTotalRetorno = VlrTotalRetorno + Valores
                If Soma_retorno_total_NF = False Then VlrTotalRetornoNF = VlrTotalRetornoNF + Valores
            End If
            
            Vlr_total_aprox_tributos_prod = Vlr_total_aprox_tributos_prod + IIf(IsNull(TBProduto!Valor_aprox_tributos), 0, TBProduto!Valor_aprox_tributos)
        End If
        End With
        TBProduto.MoveNext
        If Atualizacao = False Then
            Contador = Contador + 1
        End If
    Loop
Else
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & txtId.Text & " and Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = True Then
        ProcLimpaCamposTotaisNota
    End If
End If
TBProduto.Close

If NF_enviada = False And NFe_liberada = False And NF_alterada = False Then
    txt_VlrTotalProd = Format(TotalProduto, "###,##0.00")
    txtVLRMPA = Format(ValorPorc, "###,##0.00")
End If

If NotaFiscalPronta = False Then
ProcCalculaTotaisProduto
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcReacalculaICMSIPI()
On Error GoTo tratar_erro

Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
'    If TBFI!ID_CFOP = "1.604" Or TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102" Or Faturamento_NF_Saida = False And MPA = True And TBProduto!VlrMPA > 0 Or NF_alterada = True Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False And (TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102") Or TBFI!ID_CFOP = "1.604" Or NF_alterada = True Then
        PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
        Valor1 = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
        If Valor1 > 0 Then Valor2 = (PV * 100) / Valor1 Else Valor2 = 0
        
        If TBFIltro.EOF = False Then
            If TBFIltro!Salvar_valores_produto = False Then
                'Frete
                Valor3 = IIf(txt_VlrFrete = "", 0, txt_VlrFrete)
                If Valor2 > 0 Then TBProduto!Valor_frete = Format((Valor3 * Valor2) / 100, "###,##0.00")
                'Seguro
                Valor3 = IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro)
                If Valor2 > 0 Then TBProduto!Valor_seguro = Format((Valor3 * Valor2) / 100, "###,##0.00")
                'Outr. desp.
                Valor3 = IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp)
                If Valor2 > 0 Then TBProduto!Valor_acessorias = Format((Valor3 * Valor2) / 100, "###,##0.00")
                TBProduto.Update
            End If
        End If
                
        TextoCSTICMS = IIf(Len(TBProduto!txt_CST) = 3, Right(TBProduto!txt_CST, 2), Right(TBProduto!txt_CST, 3))
        If TextoCSTICMS = "00" Or TextoCSTICMS = "10" Or TextoCSTICMS = "20" Or TextoCSTICMS = "51" Or TextoCSTICMS = "70" Or TextoCSTICMS = "90" Or TextoCSTICMS = "101" Or TextoCSTICMS = "102" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Or TextoCSTICMS = "900" Then
            If TBFIltro.EOF = False Then
                Valor1 = IIf(IsNull(TBFIltro!Valor_bc_ICMS), 0, TBFIltro!Valor_bc_ICMS)
                ValorICMS = IIf(IsNull(TBFIltro!Valor_ICMS), 0, TBFIltro!Valor_ICMS)
            Else
                If TemICMS = "SIM" Then ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS) Else ICMS = 0
                If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                    Valor3 = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
                Else
                    Valor3 = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
                    If Valor2 > 0 Then Valor1 = Format((Valor3 * Valor2) / 100, "###,##0.00")
                End If
                
                'Valor do ICMS
                If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                    Valor1 = IIf(txt_baseICMSs = "", 0, txt_baseICMSs)
                    ValorICMS = IIf(txt_ICMSs = "", 0, txt_ICMSs)
                ElseIf Valor1 > 0 Then
                        ValorICMS = Format(FunCalulaArredondaICMS(ICMS, Valor1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                    Else
                        Valor1 = IIf(txt_BaseICMS = "", 0, txt_BaseICMS)
                        ValorICMS = IIf(txt_VlrICMS = "", 0, txt_VlrICMS)
                End If
            End If
            TBFIltro.Close
            
            NovoValor = Replace(Valor1, ",", ".")
            NovoValor1 = Replace(ValorICMS, ",", ".")
            If TextoCSTICMS = "10" Or TextoCSTICMS = "70" Or TextoCSTICMS = "201" Or TextoCSTICMS = "202" Then
                NomeCampo1 = "Valor_BC_ST = " & NovoValor
                NomeCampo2 = "Valor_ICMS_ST = " & NovoValor1
                NomeCampo3 = "Valor_BC = 0"
                NomeCampo4 = "Valor_ICMS = 0"
            Else
                NomeCampo1 = "Valor_BC_ST = 0"
                NomeCampo2 = "Valor_ICMS_ST = 0"
                NomeCampo3 = "Valor_BC = " & NovoValor
                NomeCampo4 = "Valor_ICMS = " & NovoValor1
            End If
            
            Conexao.Execute "Update tbl_Detalhes_Nota_CST_ICMS Set " & NomeCampo1 & " , " & NomeCampo2 & ", " & NomeCampo3 & ", " & NomeCampo4 & " where id_item = " & TBProduto!Int_codigo
        End If
        
        Credito_ICMS = ValorICMS
        
        If NF_alterada = True And (TBProduto!CST_IPI = "00" Or TBProduto!CST_IPI = "49" Or TBProduto!CST_IPI = "50" Or TBProduto!CST_IPI = "99") Then
            'Base do IPI
            If TBFI!ID_CFOP = "3.101" Or TBFI!ID_CFOP = "3.102" Then
                If TBProduto!int_IPI > 0 Then Valor1 = Format((TBProduto!dbl_valoripi / TBProduto!int_IPI), "###,##0.00") * 100 Else Valor1 = 0
            Else
                Valor1 = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
                If Valor1 <> 0 Then
                    ValorIPI = Valor1 / IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
                    Valor1 = Format(IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) * ValorIPI, "###,##0.00")
                Else
                    ValorIPI = IIf(txt_TotalIPI = "", 0, txt_TotalIPI)
                    If TBProduto!int_IPI > 0 Then Valor1 = Format((ValorIPI * 100) / TBProduto!int_IPI, "###,##0.00")
                End If
            End If
            Valor1 = Format(Valor1 / TBProduto.RecordCount, "###,##0.00")
            NovoValor = Replace(Valor1, ",", ".")
            Conexao.Execute "Update tbl_Detalhes_Nota_CST_IPI Set Valor_BC = " & NovoValor & " where id_item = " & TBProduto!Int_codigo
        End If
    Else
        'Verif. credito de ICMS se a nota for entrada
        If Opt_entrada.Value = True Then
            Set TBItem = CreateObject("adodb.recordset")
            TBItem.Open "Select * from projproduto where Desenho = '" & TBProduto!int_Cod_Produto & "' and Credita_ICMS = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBItem.EOF = False Then
                If Total_ICMS <> 0 Then
                    Credito_ICMS = Total_ICMS
                Else
                    Set TBItem = CreateObject("adodb.recordset")
                    TBItem.Open "Select Valor_ICMS_SN from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
                    If TBItem.EOF = False Then
                        Credito_ICMS = Credito_ICMS + IIf(IsNull(TBItem!Valor_ICMS_SN), 0, TBItem!Valor_ICMS_SN)
                    End If
                End If
            End If
            TBItem.Close
        End If
    End If
End If
TBFI.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcAtualizaCST(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

CST_ICMS = False
CST_IPI = False
CST_PIS = False
CST_Cofins = False

'ICMS
If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then
    InicioCST = Left(TBProduto!txt_CST, 1)
    If Len(TBProduto!txt_CST) = 4 Then FimCST = Right(TBProduto!txt_CST, 3) Else FimCST = Right(TBProduto!txt_CST, 2)
    
    CST_ICMS = True
    CST_Cofins = False
    CST_IPI = False
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_ICMS where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'IPI
If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> "" Then
    FimCST = TBProduto!CST_IPI
    CST_ICMS = False
    CST_Cofins = False
    CST_IPI = True
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_IPI where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'PIS
If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then
    FimCST = TBProduto!CST_PIS
    CST_ICMS = False
    CST_Cofins = False
    CST_IPI = False
    CST_PIS = True
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_PIS where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

'Cofins
If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then
    FimCST = TBProduto!CST_Cofins
    CST_ICMS = False
    CST_Cofins = True
    CST_IPI = False
    CST_PIS = False
    
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_Cofins where id_item = " & TBProduto!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    ProcEnviadadosAtualizaCST IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
    TBCST.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcEnviadadosAtualizaCST(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

If TBCST.EOF = True Then TBCST.AddNew
'ICMS
If CST_ICMS = True Then
    TBCST!Valor_BC = 0
    TBCST!Valor_ICMS = 0
    TBCST!ICMS_SN = 0
    TBCST!Valor_ICMS_SN = 0
    TBCST!Valor_ICMS_desonerado = Null
    TBCST!Motivo_ICMS_desonerado = Null
    TBCST!Valor_BC_ICMS_UF_dest = 0
    TBCST!Percentual_provisorio = 100
    TBCST!Valor_ICMS_INT_UF_dest = 0
    TBCST!Valor_ICMS_INT_UF_rem = 0
    TBCST!Percentual_FCP = 0
    TBCST!Valor_ICMS_FCP = 0
    
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Origem_mercadoria = InicioCST
    TBCST!Tributacao_ICMS = FimCST
    If FimCST <> "40" And FimCST <> "41" And FimCST <> "50" And FimCST <> "60" And FimCST <> "101" And FimCST <> "102" And FimCST <> "103" And FimCST <> "300" And FimCST <> "400" And FimCST <> "500" Then
        If FimCST = "20" Or FimCST = "70" Or FimCST = "90" Or FimCST = "201" Or FimCST = "202" Or FimCST = "203" Or FimCST = "900" Then
            Set TBMaquinas = CreateObject("adodb.recordset")
            TBMaquinas.Open "Select regiao from regioes where uf = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBMaquinas.EOF = False Then
                Set TBAfericao = CreateObject("adodb.recordset")
                TBAfericao.Open "Select CTDE, CTSS, CTNN, CTCO from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
                If TBAfericao.EOF = False Then
                    Select Case TBMaquinas!regiao
                        Case "DE":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTDE
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTDE
                        Case "SS":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTSS
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTSS
                        Case "NN":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTNN
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTNN
                        Case "CO":
                            TBCST!Percentual_reducao_BC = TBAfericao!CTCO
                            If cbo_UF <> "MG" And FimCST <> "20" And FimCST <> "51" Then TBCST!Percentual_reducao_BC_ST = TBAfericao!CTCO
                    End Select
                End If
                TBAfericao.Close
            End If
        End If
        
        If FimCST <> "201" And FimCST <> "202" And FimCST <> "203" Then
            ValorTotal = 0
'=========================================================================================================================================================================================================================
'            PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete))

            PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
'            PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto))
'=========================================================================================================================================================================================================================

            
            IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            Set TBCiclo = CreateObject("adodb.recordset")
            TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and txt_ICMS = 'SIM'", Conexao, adOpenKeyset, adLockOptimistic
            If TBCiclo.EOF = False And IntICMS <> 0 Then
                ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), FimCST, Aplicacao, IDCliente, NomeCliente
                If TBCiclo!txt_Somar = "SIM" Then
                TBCST!Valor_BC = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), "###,##0.00")
                Else
                If cmbFinalidade_emissao.Text <> "4 - Devolução/Retorno" Then
                TBCST!Valor_BC = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
                Else
                End If
                TBCST!Valor_BC = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), "###,##0.00")
                End If
            Else
                TBCST!Valor_BC = 0
            End If
            TBCiclo.Close
                            
            'Calcula ICMS sem arredondar ou arredondando
            If IntICMS <> 0 Then
                ValorTotal = TBCST!Valor_BC
                TBCST!Valor_ICMS = Format(FunCalulaArredondaICMS(IntICMS, ValorTotal, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
            End If
        End If
    End If
    
    'Set TBCiclo = CreateObject("adodb.recordset")
    'TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Txt_ICMS = 'SIM' and Left(id_CFOP, 1) <> 3", Conexao, adOpenKeyset, adLockOptimistic
    'If TBCiclo.EOF = False And (FimCST = "101" Or FimCST = "201" Or FimCST = "900") Then
    If FimCST = "101" Or FimCST = "201" Then
        If Faturamento_NF_Saida = False Then
            'ProcValorImposto txtid, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IDCliente, NomeCliente, cbo_UF, IDempresa, False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), RegimeEmpresa
        'Else
            ProcValorImposto txtId, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IDCliente, NomeCliente, cbo_UF, IDempresa, True, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), 0
            If txtICMS <> 0 Then
            TBCST!Valor_BC = txtVLTotal.Text
            TBCST!ICMS_SN = txtICMS
            TBCST!Valor_ICMS_SN = Format((txtVLTotal.Text * txtICMS) / 100, "###,##0.00")
            TBCST!Valor_ICMS = Format((txtVLTotal * txtICMS) / 100, "###,##0.00")
            End If
        End If
        
        PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
        If FimCST = "201" Then PV = PV + TBCST!Valor_ICMS_ST
        'IntICMS = IIf(IsNull(TBProduto!ICMS_SN), 0, TBProduto!ICMS_SN)
        'ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, False, FimCST, Aplicacao, IDCliente, NomeCliente
        'If TBCiclo!txt_Somar = "SIM" Then ValorTotal = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), "###,##0.00") Else ValorTotal = Format(BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
        
        'If IntICMS <> 0 Then
            'TBCST!Valor_BC = ValorTotal
            'TBCST!ICMS_SN = IntICMS
            'TBCST!Valor_ICMS_SN = Format((ValorTotal * IntICMS) / 100, "###,##0.00")
        'End If
        
        'Novo cálculo simples nacional 2018
        IntICMS = IIf(IsNull(TBProduto!ICMS_SN), 0, TBProduto!ICMS_SN)
        If IntICMS <> 0 Then
            TBCST!Valor_BC = PV
            TBCST!ICMS_SN = IntICMS
            TBCST!Valor_ICMS_SN = Format((PV * IntICMS) / 100, "###,##0.00")
        End If
    End If
    'TBCiclo.Close
'=============================================================================================
    ProcCalculaFCPeDIFAL IDempresa, IDCliente, NomeCliente, UF, Consumidor, Finalidade
'=============================================================================================
    
    'Valor ICMS desonerado
    If FimCST = "20" Or FimCST = "40" Or FimCST = "41" Or FimCST = "50" Or FimCST = "70" Or FimCST = "90" Then
        ProcVerificaRegiao cbo_UF.Text, IDCliente, NomeCliente
        TBCST!Valor_ICMS_desonerado = Format((TBProduto!dbl_ValorTotal * vRegiao(0, 1)) / 100, "###,##0.00")

        If FimCST = "20" Then
            Set TBCiclo = CreateObject("adodb.recordset")
            TBCiclo.Open "select * from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and txt_ICMS = 'SIM'", Conexao, adOpenKeyset, adLockOptimistic
            If TBCiclo.EOF = False Then
                ProcCalculaBC IDempresa, TBCiclo!ID_CFOP, IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA), PV, TBProduto!dbl_valoripi, TBCiclo!txt_Somar, TBCiclo!Somar_IPI_BC_ICMSST, TBCiclo!TemReducaoBC, False, FimCST, Aplicacao, IDCliente, NomeCliente
                ValorTotal = Format(BC, "###,##0.00")
                ValoresParcelas = Format((BC * vRegiao(0, 1)) / 100, "###,##0.00")

                TBCST!Valor_ICMS_desonerado = Format(TBCST!Valor_ICMS_desonerado - ValoresParcelas, "###,##0.00")
            End If
        End If

        TBCST!Motivo_ICMS_desonerado = 9
        '======================================================================
        ' Se tiver suframa informa o motivo da desoneração SUFRAMA = 7
        '======================================================================
        If FimCST = "40" Or FimCST = "41" Or FimCST = "50" Then
            If Suframa = True And Desconto_Suframa = True Then
                TBCST!Motivo_ICMS_desonerado = 7
            End If
        End If
        

        ValorICMS_desonerado = ValorICMS_desonerado + TBCST!Valor_ICMS_desonerado
        
    End If

    'Valor do ICMS diferido
    If FimCST = "51" Then
        TBCST!Percentual_ICMS_DIF = DIF
        TBCST!Valor_ICMS_DIF = Format((TBCST!Valor_ICMS * DIF) / 100, "###,##0.00")
    End If
End If
'IPI
If CST_IPI = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "00" Or FimCST = "49" Or FimCST = "50" Or FimCST = "99" Then TBCST!Valor_BC = IIf(TBProduto!Tem_IPI_frete = True, IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)) '- IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete))
End If
'PIS
If CST_PIS = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "01" Or FimCST = "03" Or FimCST = "49" Or FimCST = "98" Or FimCST = "99" Then TBCST!Valor_BC = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) ' - IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
End If
'Cofins
If CST_Cofins = True Then
    TBCST!Id_Item = TBProduto!Int_codigo
    TBCST!Codigo_situacaoTributaria = FimCST
    If FimCST = "01" Or FimCST = "02" Or FimCST = "03" Or FimCST = "49" Or FimCST = "98" Or FimCST = "99" Then TBCST!Valor_BC = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) ' - IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
End If
TBCST.Update
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCalculaFCPeDIFAL(IDempresa As Integer, IDCliente As Long, NomeCliente As String, UF As String, Consumidor As Integer, Finalidade As Integer)
On Error GoTo tratar_erro

'====================Calculo ICMS relativo ao Fundo de Combate à Pobreza (FCP) e diferencial da alíquota====================

TBCST!Valor_BC_ICMS_UF_dest = 0
TBCST!Percentual_provisorio = 100
TBCST!Percentual_FCP = 0
TBCST!Valor_ICMS_FCP = 0
TBCST!Valor_ICMS_INT_UF_dest = 0
TBCST!Valor_ICMS_INT_UF_rem = 0

'Verifica se o cliente/Fornecedor não é contribuinte do ICMS
Permitido2 = False
Set TBCorretiva = CreateObject("adodb.recordset")
TBCorretiva.Open "Select IDCliente from Clientes where IDCliente = " & IDCliente & " and NomeRazao = '" & NomeCliente & "' and Nao_contribuinte_ICMS = 'true'", Conexao, adOpenKeyset, adLockOptimistic
If TBCorretiva.EOF = False Then
    Permitido2 = True
Else
    Set TBCorretiva = CreateObject("adodb.recordset")
    TBCorretiva.Open "Select IDCliente from Compras_fornecedores where IDCliente = " & IDCliente & " and Nome_Razao = '" & NomeCliente & "' and Nao_contribuinte_ICMS = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCorretiva.EOF = False Then
        Permitido2 = True
    End If
End If

'Verifica se a empresa emitente é simples nacional
Parcial = False
TextoFiltroCFOP = " and txt_ICMS = 'SIM'"
Set TBCorretiva = CreateObject("adodb.recordset")
TBCorretiva.Open "Select E.UF, I.Regime from Empresa E INNER JOIN Impostos I ON I.ID_empresa = E.Codigo where E.Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBCorretiva.EOF = False Then
    UFEmp = TBCorretiva!UF
    If TBCorretiva!Regime = 1 Or TBCorretiva!Regime = 4 Then
        Parcial = True
        TextoFiltroCFOP = ""
        PV = (IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    End If
End If
TBCorretiva.Close

'If Faturamento_NF_Saida = True And Opt_saida.Value = True And Permitido2 = True And Left(Consumidor, 1) = 1 And UFEmp <> UF And (Parcial = True Or Parcial = False And IntICMS <> 0) And (FimCST <> "202" And FimCST <> "203" Or FimCST = "101" Or FimCST = "201" Or FimCST = "900" Or FimCST = "41") Then
If Faturamento_NF_Saida = True And Opt_saida.Value = True And Permitido2 = True And Left(Consumidor, 1) = 1 And UFEmp <> UF And (Parcial = True Or Parcial = False) And (FimCST = "202" And FimCST <> "203" Or FimCST = "101" Or FimCST = "201" Or FimCST = "900" Or FimCST = "41" Or FimCST = "00") Then
    'Verifica se é CFOP fora do estado e vendas ou se é bonificação
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "select IDCountCfop, id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Retorno = 'False' and (Left(id_CFOP, 1) = '6' " & TextoFiltroCFOP & " or Right(id_CFOP,3) = '910')", Conexao, adOpenKeyset, adLockOptimistic
    'TBCiclo.Open "select IDCountCfop, id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP) & " and Retorno = 'False' and Remessa = 'False' and Left(id_CFOP, 1) = '6' " & TextoFiltroCFOP, Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Dim pICMSUFDest As Double 'OK
        Dim pICMSDest As Double 'OK
        Dim pICMSOri As Double 'OK
        Dim vBCICMS As Double 'OK
        Dim vICMSinter As Double 'OK
        Dim vDifAliq As Double 'OK
        
        'Verifica aliquota interna do ICMS da UF de destino
        pICMSUFDest = 0
        Set TBMaquinas = CreateObject("adodb.recordset")
        TBMaquinas.Open "Select ICMS_interno from regioes where UF = '" & UF & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBMaquinas.EOF = False Then
            pICMSUFDest = IIf(IsNull(TBMaquinas!ICMS_interno), 0, TBMaquinas!ICMS_interno)
        End If
        TBMaquinas.Close
        
        'Verifica alíquota do ICMS interestadual da UF de destino
        ProcVerificaRegiao UF, IDCliente, NomeCliente
       
        'Percentual de partilha para a UF de destino, conforme NT 2015/003
        Dataini = txt_DtEmissao
        If Left(Finalidade, 1) <> 1 And TBCiclo!ID_CFOP <> "6.116" Then
            Set TBMaquinas = CreateObject("adodb.recordset")
            TBMaquinas.Open "Select NFR.dt_DataEmissao from Faturamento_Relacionamento FR INNER JOIN tbl_Dados_Nota_Fiscal NFR ON NFR.ID = FR.ID_nota_relacionada where FR.ID_nota = " & TBProduto!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
            If TBMaquinas.EOF = False Then
                Dataini = TBMaquinas!dt_DataEmissao
            End If
            TBMaquinas.Close
        End If
        
'        'Origem
'        Select Case Year(Dataini)
'            Case "2016": pICMSOri = 60
'            Case "2017": pICMSOri = 40
'            Case "2018": pICMSOri = 20
'            Case Is >= "2019": pICMSOri = 0
'        End Select
'
'        'Destino
'        Select Case Year(Dataini)
'            Case "2016": pICMSDest = 40
'            Case "2017": pICMSDest = 60
'            Case "2018": pICMSDest = 80
'            Case Is >= "2019": pICMSDest = 100
'        End Select
                    
        'Cálculo
        'PV = (Valor do produto - valor de desconto) + valor do frete
            If Year(Date) >= "2017" Then
            vBCICMS = Format(PV + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), "###,##0.00")
            TBCST!Valor_BC_ICMS_UF_dest = vBCICMS
            TBCST!Percentual_provisorio = 100 'pICMSDest
            TBCST!Percentual_FCP = FCP
            TBCST!Valor_ICMS_FCP = Format((vBCICMS * FCP) / 100, "###,##0.00")
            vDifAliq = (vBCICMS * (pICMSUFDest - vRegiao(0, 1))) / 100
            TBCST!Valor_ICMS_INT_UF_dest = Format((vDifAliq * pICMSDest) / 100, "###,##0.00")
            TBCST!Valor_ICMS_INT_UF_rem = Format((vDifAliq * pICMSOri) / 100, "###,##0.00")
            Else
            'Passo 1  calcular a base de cálculo e o valor do ICMS Inter
                vBCICMS = Format(PV + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
                If Left(Cmb_consumidor, 1) = 1 Then vBCICMS = Format(vBCICMS + IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), "###,##0.00") ''O valor do IPI deve integrar a base de cálculo do ICMS sempre que a operação for destinada ao consumo final.
                'Icmsorigem = TBProduto!int_ICMS
                vICMSinter = (vBCICMS * vRegiao(0, 1)) / 100
                TBCST!Valor_BC_ICMS_UF_dest = vBCICMS
                TBCST!Percentual_provisorio = pICMSDest

                'Passo 2  calcular o Fundo de Combate à Pobreza
                TBCST!Percentual_FCP = FCP
                TBCST!Valor_ICMS_FCP = Format((vBCICMS * FCP) / 100, "###,##0.00")

                'Passo 3  calcular o DIFAL
                vDifAliq = Format(((vBCICMS - vICMSinter) / (1 - (pICMSUFDest / 100))) * (pICMSUFDest / 100) - ((vBCICMS * vRegiao(0, 1)) / 100), "0.00")

                'Passo 4  efetuar a partilha do DIFAL
                TBCST!Valor_ICMS_INT_UF_rem = Format((vDifAliq * pICMSOri) / 100, "###,##0.00")
                TBCST!Valor_ICMS_INT_UF_dest = Format((vDifAliq * pICMSDest) / 100, "###,##0.00")
        End If
    End If
    '================================================================================
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcSalvarProduto()
On Error GoTo tratar_erro
vFrete = 0

'If FunVerificaRegistroValidado("tbl_Dados_Nota_Fiscal", "ID = " & txtID, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "duplicata(s)", "excluir esta(s)", False, True) = False Then Exit Sub

If Produto_Relacionado = False Then
    If Alterar = False Then
        USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
        Exit Sub
    End If
    FunVerifAlteracaoNF txtId, True, OptServico
    If AlterarProduto = False Then
    If Permitido1 = False Or Permitido = False Then
       If MsgTexto = "pois a nota fiscal já foi enviada para o financeiro" Or MsgTexto = "pois existe(m) duplicata(s) gerada(s)" Then
       
       USMsgBox "Existem duplicatas geradas, antes de alterar o item tem que excluir as duplicatas.", vbInformation, "CAPRIND v5.0"
       SSFaturamento.Tab = 5
       Exit Sub
       Else
        USMsgBox ("Não é permitido salvar, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
'        Exit Sub
       End If
       
    End If
    End If
    
    If Frame1(9).Enabled = False And AlterarProduto = False Then
        ProcVerificaSalvar
        Exit Sub
    End If
    Acao = "salvar"
'   If txtNFiscal.Text = "" Then
'       If Formulario = "Estoque/Ordem de faturamento" Then NomeCampo = "da ordem de faturamento" Else NomeCampo = "da nota fiscal"
'       ProcVerificaAcao
'       txtNFiscal.SetFocus
'       Exit Sub
'   End If
    If txtCod_Produto.Text = "" Then
        NomeCampo = "o código interno"
        ProcVerificaAcao
        txtCod_Produto.SetFocus
        Exit Sub
    End If
    
    If Faturamento_NF_Saida = True Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Codigo from Empresa where Codigo = " & IDempresa & " and Codigo_ref_DANFE = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            If cmbreferencia = "" Then
                NomeCampo = "o código de referência"
                ProcVerificaAcao
                cmbreferencia.SetFocus
                Exit Sub
            End If
        End If
        TBAbrir.Close
        If chkRetorno.Value = 0 Then
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_dados_transp where ID_nota = " & txtId & " and Sedex = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Qtd = txt_ValorNota - ((TBProduto!dbl_valoripi + TBProduto!dbl_ValorTotal + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias) - TBProduto!Valor_desconto)
                Else
                    Qtd = txt_ValorNota
                End If
                TBProduto.Close
                Qtde = (Qtd + txtVLUnit + txtValor_IPI + txt_VlrFrete_prod + txt_vlrSeguro_prod + txt_OutrasDisp_prod) - Txt_valor_total_desc_prod
                If Format(Qtde, "###,##0.00") > 10000 Then
                    USMsgBox ("Não é permitido salvar produto, pois a nota ultrapassou o limite do sedex (R$10.000,00)."), vbExclamation, "CAPRIND v5.0"
                    Exit Sub
                End If
            End If
            TBAbrir.Close
        End If
    Else
        If FunVerifCodRefFornSPED(txtIDEmpresa.Text) = True Then
            If cmbreferencia = "" Then
                NomeCampo = "o código de referência"
                ProcVerificaAcao
                cmbreferencia.SetFocus
                Exit Sub
            End If
        End If
    End If
    
    If Formulario <> "Estoque/Ordem de faturamento" Then
        If Txt_CFOP_prod = "" Then
            NomeCampo = "a CFOP"
            ProcVerificaAcao
            Cmd_localizar_CFOP_prod_Click
            Exit Sub
        End If
        If Txt_CF.Text = "" Then
            NomeCampo = "a NCM"
            ProcVerificaAcao
            cmdCF.SetFocus
            Exit Sub
        End If
        If txtCST_ICMS.Text = "" Then
            NomeCampo = "a CST do ICMS"
            ProcVerificaAcao
            txtCST_ICMS.SetFocus
            Exit Sub
        End If
        If txtCST_IPI.Text = "" Then
            NomeCampo = "a CST do IPI"
            ProcVerificaAcao
            txtCST_IPI.SetFocus
            Exit Sub
        End If
        If txtCST_PIS.Text = "" Then
            NomeCampo = "a CST do PIS"
            ProcVerificaAcao
            txtCST_PIS.SetFocus
            Exit Sub
        End If
        If txtCST_Cofins.Text = "" Then
            NomeCampo = "a CST do Cofins"
            ProcVerificaAcao
            txtCST_Cofins.SetFocus
            Exit Sub
        End If
    End If
   
    If txtDescricao_Produto.Text = "" Then
        NomeCampo = "a descrição"
        ProcVerificaAcao
        txtDescricao_Produto.SetFocus
        Exit Sub
    End If
    If txtUN.Text = "" Then
        NomeCampo = "a unidade de estoque"
        ProcVerificaAcao
        txtUN.SetFocus
        Exit Sub
    End If
    If Cmb_un_com.Text = "" Then
        NomeCampo = "a unidade comercial"
        ProcVerificaAcao
        Cmb_un_com.SetFocus
        Exit Sub
    End If
    valor = IIf(txtQtd = "", 0, txtQtd)
    If valor <= 0 Then
        NomeCampo = "a quantidade"
        ProcVerificaAcao
        txtQtd.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txtVLUnit = "", 0, txtVLUnit)
    If Valor1 < 0 Then
        NomeCampo = "o valor unitário"
        ProcVerificaAcao
        txtVLUnit.SetFocus
        Exit Sub
    End If
    If txtVLTotal = "" Then
        NomeCampo = "o valor total"
        ProcVerificaAcao
        txtVLTotal.SetFocus
        Exit Sub
    End If
    If txtICMS = "" Then
        NomeCampo = "o ICMS"
        ProcVerificaAcao
        txtICMS.SetFocus
        Exit Sub
    End If
    If txtIPI = "" Then
        NomeCampo = "o IPI"
        ProcVerificaAcao
        txtIPI.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do frete"
        ProcVerificaAcao
        txt_VlrFrete_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_vlrSeguro_prod = "", 0, txt_vlrSeguro_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do seguro"
        ProcVerificaAcao
        txt_vlrSeguro_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor de outras despesas"
        ProcVerificaAcao
        txt_OutrasDisp_prod.SetFocus
        Exit Sub
    End If
    Valor1 = IIf(Txt_valor_total_desc_prod = "", 0, Txt_valor_total_desc_prod)
    If Valor1 < 0 Then
        NomeCampo = "o valor do desconto"
        ProcVerificaAcao
        Txt_valor_total_desc_prod.SetFocus
        Exit Sub
    End If
    If Txt_codigo_enq_IPI <> "" Then
        If Len(ReturnNumbersOnly(Txt_codigo_enq_IPI)) < 3 Then
            USMsgBox ("O código de enquadramento legal do IPI deve conter 3 caracteres."), vbExclamation, "CAPRIND v5.0"
            Txt_codigo_enq_IPI.SetFocus
            Exit Sub
        End If
    End If
    If Txt_GTIN <> "" Then
        If Len(Txt_GTIN) <> 8 And Len(Txt_GTIN) <> 12 And Len(Txt_GTIN) <> 13 And Len(Txt_GTIN) <> 14 Then
            USMsgBox ("O código GTIN deve conter 8, 12, 13 ou 14 caracteres."), vbExclamation, "CAPRIND v5.0"
            Txt_GTIN.SetFocus
            Exit Sub
        End If
    End If
    If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
    
    quantidade = 0
    Qtd = 0
    
    Conexao.Execute "Update tbl_Dados_Nota_Fiscal Set Alterar = 'False' where id = " & txtId.Text
    NF_alterada = False
    
    'Se a unidade for diferente verifica se esta cadastrado o peso bruto e UN/KG
   ' If FunBloqueiaUnConversao(txtCod_Produto, txtUN, Cmb_un_com, True) = True Then Exit Sub
End If

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_detalhes_nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    If TBProduto!int_Cod_Produto <> txtCod_Produto Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            USMsgBox ("Não é permitido alterar este produto, pois o mesmo pertence a um pedido interno."), vbExclamation, "CAPRIND v5.0"
            TBAbrir.Close
            Exit Sub
        End If
    End If
    If Produto_Relacionado = False Then
        If txtNFiscal = "" Then Familiatext = "ordem de faturamento" Else Familiatext = "nota fiscal"
        
        If AlterarProduto = False Then
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, Familiatext, "o produto", False) = False Then Exit Sub
        End If
        
        If Faturamento_NF_Saida = True Then
            If TBProduto!int_Qtd <> valor Then
                If txtNFiscal <> "" Then
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "Select RespValidacaoOF from tbl_Dados_Nota_Fiscal where ID = " & txtId & " and RespValidacaoOF <> '" & pubUsuario & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        USMsgBox ("Só é permitido alterar a quantidade deste produto pelo usuário " & TBAbrir!RespValidacaoOF & "."), vbExclamation, "CAPRIND v5.0"
                        TBAbrir.Close
                        Exit Sub
                    End If
                End If
                Set TBAbrir = CreateObject("adodb.recordset")
                TBAbrir.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
                If TBAbrir.EOF = False Then
                    USMsgBox ("Não é possivel alterar a quantidade deste produto, pois já foi empenhado RE no estoque por esta " & Familiatext & "."), vbExclamation, "CAPRIND v5.0"
                    TBAbrir.Close
                    Exit Sub
                End If
                TBAbrir.Close
            End If
        End If
        
        'Verifica se o produto está amarrado a outra nota
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from Faturamento_Relacionamento where Id_produto = " & txtIDProduto & " or Id_produto_relacionada = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            TBProduto!Complemento_descricao = Trim(Txt_complemento_descricao)
            TBProduto.Update
            
            USMsgBox ("Só foi alterado o campo Complemento da descrição, pois este produto está sendo utilizado no módulo de relacionamento de notas fiscais."), vbExclamation, "CAPRIND v5.0"
            TBAbrir.Close
            Exit Sub
        End If
        TBAbrir.Close
    End If
    
    If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> txtCST_ICMS Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_ICMS WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> txtCST_IPI Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_IPI WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> txtCST_PIS Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_PIS WHERE id_item = " & txtIDProduto.Text
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> txtCST_Cofins Then Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_Cofins WHERE id_item = " & txtIDProduto.Text
    
    valor = IIf(txtQtd = "", 0, txtQtd)
    If valor <> TBProduto!int_Qtd Then TBProduto!Saldo = txtQtd.Text
Else
    TBProduto.AddNew
    TBProduto!Saldo = txtQtd.Text
    TBProduto!Tipo = "P"
End If
If NFe_liberada = True Then
    TBProduto!Ordem = IIf(txtOF = "", 0, txtOF)
    TBProduto!IDEstoque = IIf(Txt_IDestoque = "", 0, Txt_IDestoque)
Else
    TBProduto!int_Cod_Produto = txtCod_Produto
    TBProduto!Txt_descricao = Trim(txtDescricao_Produto)
    TBProduto!N_referencia = cmbreferencia
    Set TBItem = CreateObject("adodb.recordset")
    TBItem.Open "Select codProduto, classe from projproduto where desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        TBProduto!Codproduto = TBItem!Codproduto
        TBProduto!Familia = TBItem!Classe
    End If
    TBItem.Close
    TBProduto!Valor_frete = IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)
    If Chk_tem_IPI_frete_prod.Value = 1 Then TBProduto!Tem_IPI_frete = True Else TBProduto!Tem_IPI_frete = False
    TBProduto!Valor_seguro = IIf(txt_vlrSeguro_prod = "", 0, txt_vlrSeguro_prod)
    TBProduto!Valor_acessorias = IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
    TBProduto!Valor_desconto = IIf(Txt_valor_total_desc_prod = "", 0, Txt_valor_total_desc_prod)
    TBProduto!N_item = Txt_n_item
    TBProduto!PCCliente = Trim(txt_pccliente)
    TBProduto!Complemento_descricao = Trim(Txt_complemento_descricao)
    TBProduto!GTIN = Txt_GTIN
    TBProduto!Inf_adicionais_prod = Trim(Txt_inf_adicionais_prod)
    TBProduto!Ordem = IIf(txtOF = "", 0, txtOF)
'    TBProduto!IDestoque = IIf(Txt_IDestoque = "", 0, Txt_IDestoque)
    TBProduto!txt_CST = txtCST_ICMS
    TBProduto!CST_IPI = txtCST_IPI
    TBProduto!CST_PIS = txtCST_PIS
    TBProduto!CST_Cofins = txtCST_Cofins
    
    TBProduto!ID_CFOP = IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod)
    ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(txtIDCliente = "", 0, txtIDCliente)
    
    TBProduto!ID_CF = IIf(Txt_ID_CF = "", 0, Txt_ID_CF)
    If IsNull(TBProduto!ID_CF) = False Then
        ProcBuscaTributos (TBProduto!ID_CF)
        If Faturamento_NF_Saida = False Then
            If vlrICMS(0, 1) = 0 Then vlrICMS(0, 1) = IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)
            If vlrICMS(0, 2) = 0 Then vlrICMS(0, 2) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            If vlrICMS(0, 3) = 0 Then vlrICMS(0, 3) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
            If vlrICMS(0, 4) = 0 Then vlrICMS(0, 4) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
        End If
        ProcVerificaRegiao cbo_UF.Text, txtIDCliente, txt_Razao
    End If
    
    TBProduto!int_Qtd = txtQtd.Text
    TBProduto!txt_Unid = txtUN.Text
    TBProduto!Unidade_com = Cmb_un_com.Text
    TBProduto!dbl_ValorUnitario = txtVLUnit
    TBProduto!int_ICMS = txtICMS
    TBProduto!int_IPI = txtIPI
    TBProduto!dbl_valoripi = txtValor_IPI
    TBProduto!Codigo_enquadramento_IPI = IIf(Txt_codigo_enq_IPI = "", Null, Txt_codigo_enq_IPI)
    TBProduto!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    TBProduto!ID_nota = txtId.Text
'============================================================================
    TBProduto!dbl_ValorTotal = TBProduto!dbl_ValorUnitario * TBProduto!int_Qtd ' - (TBProduto!Valor_desconto / TBProduto!int_Qtd) 'txtVLTotal '+ TBProduto!Valor_frete
'    TBProduto!dbl_ValorTotal = txtVLTotal ' - TBProduto!Valor_frete
'============================================================================
    If chkNaoArredondar = 1 Then TBProduto!NaoArredondar = True Else TBProduto!NaoArredondar = False
    If chkRetorno.Value = 1 Then
        TBProduto!retorno = True
        If Soma_retorno_total_NF = True Then TBProduto!Soma_retorno_totalnf = True Else TBProduto!Soma_retorno_totalnf = False
    Else
        TBProduto!retorno = False
        TBProduto!Soma_retorno_totalnf = False
    End If
    If chkRemessa.Value = 1 Then TBProduto!Remessa = True Else TBProduto!Remessa = False
    
    'Impostos
'=============================================================================================
'    Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)

    Valor_total = TBProduto!dbl_ValorTotal + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
'=============================================================================================
    Valor_IPI = txtValor_IPI
    
Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close
    
If Opt_entrada.Value = False Then
    ProcVerifImpostosEmpresa IDempresa, chkRetorno, "", False, 0, False, TabelaSN, Lbl2.Caption
    'Novo cálculo simples nacional 2018
    'If DAS <> 0 Then
        NovoValor = Replace(DAS, ",", ".")
        Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & txtId
    'End If
End If


'============================================================================================================
' CALCULA PIS
'============================================================================================================
If txtCST_PIS = "01" Or txtCST_PIS = "03" Or txtCST_PIS = "49" Or txtCST_PIS = "98" Or txtCST_PIS = "99" Then
    TBProduto!PIS_Prod = PIS_Prod
    If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
Else
    TBProduto!PIS_Prod = 0
    TBProduto!Total_PIS_prod = 0
End If
'============================================================================================================
' CALCULA COFINS
'============================================================================================================
    If txtCST_Cofins = "01" Or txtCST_Cofins = "02" Or txtCST_Cofins = "03" Or txtCST_Cofins = "49" Or txtCST_Cofins = "98" Or txtCST_Cofins = "99" Then
        TBProduto!Cofins_Prod = Cofins_Prod
        If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
    Else
        TBProduto!Cofins_Prod = 0
        TBProduto!Total_Cofins_prod = 0
    End If
    TBProduto!CSLL_Prod = CSLL_Prod
    If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
    TBProduto!IRPJ_Prod = IRPJ_Prod
    If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
    TBProduto!cpp = CPP_Prod
    If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
    TBProduto!ICMS_SN = ICMS_SN
    
    Set TBFI = CreateObject("adodb.recordset")
    TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
    If TBFI.EOF = False Then
        'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
        If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And chkRetorno.Value = 0 Then
            TBProduto!Valor_Retencao_PIS = Format((Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100, "###,##0.00")
            TBProduto!Valor_Retencao_Cofins = Format((Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100, "###,##0.00")
        Else
            TBProduto!Valor_Retencao_PIS = 0
            TBProduto!Valor_Retencao_Cofins = 0
        End If
        
        'Recalcula o valor do PIS e Cofins de acordo com a alíquota informada na CF se tiver diferente de zero
        If DestacaImpostos = "SIM" And (txtCST_PIS = "01" Or txtCST_PIS = "03" Or txtCST_PIS = "49" Or txtCST_PIS = "98" Or txtCST_PIS = "99") And (txtCST_Cofins = "01" Or txtCST_Cofins = "02" Or txtCST_Cofins = "03" Or txtCST_Cofins = "49" Or txtCST_Cofins = "98" Or txtCST_Cofins = "99") Then
            PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
            Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
            If Regime <> 1 And chkRetorno.Value = 0 Then
                If TemPIS = True And PIS_Prod <> 0 Then
                    TBProduto!PIS_Prod = PIS_Prod
                    TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                End If
                If TemCOFINS = True And Cofins_Prod <> 0 Then
                    TBProduto!Cofins_Prod = Cofins_Prod
                    TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                End If
            End If
        Else
            TBProduto!PIS_Prod = 0
            TBProduto!Total_PIS_prod = 0
            TBProduto!Cofins_Prod = 0
            TBProduto!Total_Cofins_prod = 0
        End If
        
        'Calcula valor aproximado de tributos
        TBProduto!Aliq_aprox_tributos = FunCalcularAproxTrib(0, txtCST_ICMS, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), False)
        If TBProduto!Aliq_aprox_tributos = 0 Then
            TBProduto!Valor_aprox_tributos = 0
        Else
            TBProduto!Valor_aprox_tributos = Format((TBProduto!dbl_ValorTotal * TBProduto!Aliq_aprox_tributos) / 100, "###,##0.00")
        End If
    End If
    Valor_total = 0
    Valor_IPI = 0
    
    ValorICMS = 0
    
    PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
    '============================================================================================================================================
    PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
    'PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto))
    '=============================================================================================================================================
    
    IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
    ProcCalculaBC IDempresa, IIf(Txt_CFOP_prod = "", "0.000", Txt_CFOP_prod), 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), Aplicacao, txtIDCliente, txt_Razao
    
    If TemICMS = "SIM" Or Suframa = True And Desconto_Suframa = True Then
        ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
        
        'Verifica valor da matéria prima aplicada
        If MPA = True Then
            Set TBAfericao = CreateObject("adodb.recordset")
            If Aplicacao = "P" Then
                TBAfericao.Open "Select ICMS_ind from Impostos where ID_empresa = " & IDempresa & " and ICMS_ind is not null and ICMS_ind <> N''", Conexao, adOpenKeyset, adLockOptimistic
            Else
                TBAfericao.Open "Select ICMS_ind from Compras_fornecedores where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "' and ICMS_ind is not null and ICMS_ind <> N''", Conexao, adOpenKeyset, adLockOptimistic
            End If
            If TBAfericao.EOF = False Then
                ICMSOUTROS = TBAfericao!ICMS_ind
                TBProduto!VlrMPA = Format((TBProduto!dbl_ValorTotal * ICMSOUTROS) / 100, "###,##0.00")
            End If
            TBAfericao.Close
        End If
        If ICMS <> 0 Or TBProduto!VlrMPA <> 0 Or Suframa = True And Desconto_Suframa = True Then
            If TBProduto!VlrMPA = 0 Then
                IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                PV1 = BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro)
                
                'Acrescenta ou não valor acessórias a base de calculo do icms
                If SomarIPI = "NÃO" And cmbFinalidade_emissao.Text <> "4 - Devolução/Retorno" Then
                PV1 = PV1 + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                End If
        
                
                'Calcula ICMS sem arredondar ou arredondando
                If ICMS <> 0 Then ValorICMS = Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
            Else
            
                If Faturamento_NF_Saida = True Then
                    Set TBFIltro = CreateObject("adodb.recordset")
                    TBFIltro.Open "Select * from empresa where codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
                Else
                    Set TBFIltro = CreateObject("adodb.recordset")
                    TBFIltro.Open "Select * from clientes where ID = " & txtIDCliente.Text & " and NomeRazao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFIltro.EOF = True Then
                        Set TBFIltro = CreateObject("adodb.recordset")
                        TBFIltro.Open "Select * from compras_fornecedores where IDCliente = " & txtIDCliente.Text & " and Nome_Razao = '" & txt_Razao.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
                    End If
                End If
                If TBFIltro.EOF = False Then
                    If TBFIltro!Simples = True Then PV1 = 0 Else PV1 = TBProduto!VlrMPA + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias
                End If
                TBFIltro.Close
                
                'Calcula ICMS sem arredondar ou arredondando
                ValorICMS = Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(chkNaoArredondar = 1, True, False)), "###,##0.00")
            End If
            
            'Calcula o ICMS do suframa
        End If
        
        
    End If
    'Calcula quantidade se a unidade for diferente
    If FunVerifUNConversao(txtUN, Cmb_un_com) = True Then
        TBProduto!Qtde_estoque = FunConverteUN(txtUN, Cmb_un_com, txtQtd, txtCod_Produto)
    Else
        TBProduto!Qtde_estoque = Null
    End If
End If

If Suframa = True And Desconto_Suframa = True Then
    ProcValorImposto txtId, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, cbo_UF, IDempresa, False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), RegimeEmpresa
    TBProduto!Valor_desconto_SUFRAMA = Format((PV1 * IntICMS) / 100, "###,##0.00")
Else
    TBProduto!Valor_desconto_SUFRAMA = 0
End If

TBProduto.Update
txtIDProduto = TBProduto!Int_codigo

'==============================================================================================================
' verifica as CST do icms ipi pis e cofins
'==============================================================================================================
ProcAtualizaCST IDempresa, txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
'==============================================================================================================
' CALCULA SUBSTITUIÇÃO TRIBUTÁRIA
'==============================================================================================================
If TBProduto!dbl_ValorTotal > 0 Then
ProcSubstituicaoTributaria cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, Format((IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) / IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), "###,##0.0000000000"), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), IDempresa
End If
'==============================================================================================================

ProcAtualizaQtdeFatProdServPed TBProduto!Int_codigo, IIf(IsNull(TBProduto!int_Qtd), txtQtd, TBProduto!int_Qtd)
TBProduto.Close


If Novo_Nota1 = True And AlterarProduto = False Then
    Evento = "Novo produto"
    If Produto_Relacionado = False Then USMsgBox ("Novo produto cadastrado com sucesso."), vbInformation, "CAPRIND v5.0"
Else
    Evento = "Alterar produto"
    If Produto_Relacionado = False Then
        USMsgBox ("Alteração efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
        If CodigoLista1 <> 0 And ListaProdutos.ListItems.Count <> 0 Then
            ListaProdutos.SelectedItem = ListaProdutos.ListItems(CodigoLista1)
            'ListaProdutos.SetFocus
        End If
    End If
End If

'==================================
Modulo = Formulario
ID_documento = txtIDProduto
ProcVerificaTipoNF False
If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
Documento1 = "Cód. interno: " & txtCod_Produto
ProcGravaEvento
'==================================

If Produto_Relacionado = False Then
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    

    
    ProcCarregaLista
If NotaFiscalPronta = False Then
    ProcGravarTotaisNota
    
    If Opt_saida = True And Formulario <> "Estoque/Ordem de faturamento" Then
    
         Set TBCodigoDesc = CreateObject("adodb.recordset")
         TBCodigoDesc.Open "Select * from tbl_dadosadicionais where id_nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
         If TBCodigoDesc.EOF = False And IsNull(TBCodigoDesc!mem_DadosAdicionais) = False Then
             txtDados_Corpo = IIf(IsNull(TBCodigoDesc!mem_corpo) = False, TBCodigoDesc!mem_corpo, "")
             txtDados_DadosAdicionais = IIf(IsNull(TBCodigoDesc!mem_DadosAdicionais) = False, TBCodigoDesc!mem_DadosAdicionais, "")
         Else
             ProcAtualizarDadosAdicionais 'txtDados_DadosAdicionais = FunCarregaCampoDACFOP(txtid)
         End If
    End If
    
    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
End If

    ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))

End If
Novo_Nota1 = False
AlterarProduto = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAtualizaQtdeFatProdServPed(IDprodserv As Long, QtdeFaturada As Double)
On Error GoTo tratar_erro

Set TBFerramentas = CreateObject("adodb.recordset")
TBFerramentas.Open "Select NFPP.*, VC.Quantidade from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Vendas_carteira VC ON VC.Codigo = NFPP.ID_carteira and VC.Desenho = NFPP.Codinterno where NFPP.ID_prod_NF = " & IDprodserv & " order by NFPP.ID_carteira", Conexao, adOpenKeyset, adLockOptimistic
If TBFerramentas.EOF = False Then
    Contador = TBFerramentas.RecordCount
    Do While TBFerramentas.EOF = False
        ProcAtualizaQtdeFatProdServPed1 IDprodserv, QtdeFaturada, True
        If QtdeFaturada <= 0 Then Exit Sub
        Contador = Contador - 1
        TBFerramentas.MoveNext
    Loop
Else
    Set TBFerramentas = CreateObject("adodb.recordset")
    TBFerramentas.Open "Select NFPP.* from tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Compras_pedido_lista CPL ON CPL.IDlista = NFPP.ID_carteira and CPL.Desenho = NFPP.Codinterno where NFPP.ID_prod_NF = " & IDprodserv, Conexao, adOpenKeyset, adLockOptimistic
    If TBFerramentas.EOF = False Then
        Contador = TBFerramentas.RecordCount
        Do While TBFerramentas.EOF = False
            ProcAtualizaQtdeFatProdServPed1 IDprodserv, QtdeFaturada, False
            ProcAtualizaCTMATCTTEROrdemProd TBFerramentas!ID_carteira, TBFerramentas!Codinterno
            If QtdeFaturada <= 0 Then Exit Sub
            Contador = Contador - 1
            TBFerramentas.MoveNext
        Loop
    End If
End If

If QtdeFaturada > 0 Then
    Set TBFerramentas = CreateObject("adodb.recordset")
    TBFerramentas.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & IDprodserv & " order by ID_carteira", Conexao, adOpenKeyset, adLockOptimistic
    If TBFerramentas.EOF = False Then
        TBFerramentas.MoveLast
        NovoValor = Replace(QtdeFaturada, ",", ".")
        Conexao.Execute "Update tbl_Detalhes_Nota_pedidos Set Quantidade = " & NovoValor & " where ID_prod_NF = " & IDprodserv & " and ID_carteira = " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'"
    End If
    TBFerramentas.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAtualizaQtdeFatProdServPed1(IDprodserv As Long, QtdeFaturada As Double, Pedidointerno As Boolean)
On Error GoTo tratar_erro

'Verifica qtde. liberada/faturada dos pedidos deste produto/serviço que seja diferente desta NF
qt = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as qt from (tbl_dados_nota_fiscal NF INNER JOIN tbl_detalhes_nota NFP ON NFP.ID_nota = NF.ID) INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_prod_NF = NFP.Int_codigo where NF.ID <> " & txtId & " and NF.Pedido_interno = " & IIf(Pedidointerno = True, 1, 0) & " and NF.int_status = 1 and NFPP.ID_carteira = " & TBFerramentas!ID_carteira & " and NFPP.Codinterno = '" & TBFerramentas!Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    qt = IIf(IsNull(TBCiclo!qt), 0, TBCiclo!qt)
End If
Qtd = TBFerramentas!quantidade - qt 'Saldo do produto/serviço

If Contador > 1 Then
    If QtdeFaturada > Qtd Then Qtd_Prog = Qtd Else Qtd_Prog = QtdeFaturada
    QtdeFaturada = QtdeFaturada - Qtd_Prog
Else
    Qtd_Prog = QtdeFaturada
    QtdeFaturada = 0
End If

NovoValor = Replace(Qtd_Prog, ",", ".")
Conexao.Execute "Update tbl_Detalhes_Nota_pedidos Set Quantidade = " & NovoValor & " where ID_prod_NF = " & IDprodserv & " and ID_carteira = " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'"

If Pedidointerno = True Then
    If QtdeFaturada <= 0 Then
        Set TBComponente = CreateObject("adodb.recordset")
        TBComponente.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & IDprodserv & " and ID_carteira > " & TBFerramentas!ID_carteira & " and Codinterno = '" & TBFerramentas!Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBComponente.EOF = False Then
            Do While TBComponente.EOF = False
                IDlista = TBComponente!ID_carteira
                Desenho = TBComponente!Codinterno
        
                Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBComponente!ID
                
                ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                TBComponente.MoveNext
            Loop
        End If
        TBComponente.Close
    End If
    
    ProcGravarQtdeFaturadaProdServ TBFerramentas!ID_carteira, TBFerramentas!Codinterno
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAtualizaCTMATCTTEROrdemProd(IDlista As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select CP.ID_empresa, CPL.* from Compras_pedido_lista CPL INNER JOIN Compras_pedido CP ON CP.IDPedido = CPL.IDPedido where CPL.IDLista = " & IDlista & " and CPL.Desenho = '" & Codinterno & "' and CPL.Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If IsNull(TBFIltro!Ordem) = False And TBFIltro!Ordem <> "" And (IsNull(TBFIltro!OS) = True Or TBFIltro!OS = "") Then
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Codigo from Empresa where Codigo = " & TBFIltro!ID_empresa & " and Agregar_ordem_valor_PC = 'True'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            'Atualiza valor do material na ordem se o produto não tiver movimentação no estoque
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDoperacao from estoque_movimentacao where oe = '" & TBFIltro!Ordem & "' and desenho = '" & Codinterno & "' and documento = '" & TBFIltro!Ordem & "' and (operacao = 'SAIDA_ORDEM' or operacao = 'SAIDA_ORDEM_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                Set TBOrdem = CreateObject("adodb.recordset")
                TBOrdem.Open "Select CTMaterial from producao where Ordem = " & TBFIltro!Ordem, Conexao, adOpenKeyset, adLockOptimistic
                If TBOrdem.EOF = False Then
                    Set TBAliquota = CreateObject("adodb.recordset")
                    TBAliquota.Open "Select Real from Empresa where Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
                    If TBAliquota.EOF = False Then
                        If TBAliquota!Real = True Then
                            TextoFiltro = "Sum(NFP.dbl_ValorTotal - (CST_ICMS.Valor_ICMS + CST_ICMS.Valor_ICMS_ST + CST_ICMS.Valor_ICMS_SN) - (NFP.Total_PIS_prod + NFP.Total_Cofins_prod))"
                        Else
                            TextoFiltro = "Sum(NFP.dbl_ValorTotal - (CST_ICMS.Valor_ICMS + CST_ICMS.Valor_ICMS_ST + CST_ICMS.Valor_ICMS_SN))"
                        End If
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select ROUND(" & TextoFiltro & ", 2) as Valortotal from ((tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Compras_pedido_lista PP ON PP.IDlista = NFPP.ID_carteira and PP.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF) INNER JOIN tbl_Detalhes_Nota_CST_ICMS CST_ICMS ON CST_ICMS.ID_item = NFP.Int_codigo where PP.Ordem = " & TBFIltro!Ordem, Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            TBOrdem!CTMaterial = IIf(IsNull(TBAbrir!ValorTotal), 0, TBAbrir!ValorTotal)
                        End If
                        TBOrdem.Update
                    End If
                    TBAliquota.Close
                End If
                TBOrdem.Close
            End If
        End If
        TBAbrir.Close
    ElseIf IsNull(TBFIltro!OS) = False And TBFIltro!OS <> "" Then
            ProcAtualizaCTTEROrdem TBFIltro!OS
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunVerifAlteracaoNF(ID_nota As Long, VerifDuplicata As Boolean, NF_servico As Boolean) As Boolean
On Error GoTo tratar_erro

MsgTexto = "pois a " & IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal") & " já foi "
Permitido1 = True
Permitido = True
If NF_cancelada = True Then
    Permitido1 = False
    MsgTexto = MsgTexto & "cancelada"
    Exit Function
End If

If GerarDuplicatas = False Then
    If NF_enviada = True And Frame1(5).Visible = True And NF_servico = True Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada"
        Exit Function
    End If
    If NFe_liberada = True Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada para SEFAZ"
        Exit Function
    End If
End If

If VerifDuplicata = True Then
    ProcVerifDupEnviadaFinanceiro ID_nota
    
    If Permitido = False And AlterarProduto = False Then
        Permitido1 = False
        MsgTexto = MsgTexto & "enviada para o financeiro"
        Exit Function
    End If
    
    Permitido = True
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_detalhes_recebimento WHERE ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False And AlterarProduto = False Then
        Permitido = False
        MsgTexto = "pois existe(m) duplicata(s) gerada(s)"
    End If
    TBContas.Close
End If

If Opt_entrada = True And cbo_UF = "EX" And SSFaturamento.Tab <> 5 Then
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_Detalhes_Nota_NFe WHERE ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Permitido1 = False
        MsgTexto = "pois existem dados de importação cadastrados"
        Exit Function
    End If
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from tbl_ContasPagar WHERE ID_nota = " & ID_nota & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Permitido1 = False
        MsgTexto = "pois existem dados de importação cadastrados"
    End If
    TBContas.Close
End If

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Sub ProcCalculaTotaisProduto()
On Error GoTo tratar_erro

txt_VlrFrete = Format(Frete, "###,##0.00")
txt_vlrSeguro = Format(Seguro, "###,##0.00")
txt_OutrasDisp = Format(Acessorias, "###,##0.00")
Txt_valor_total_desc = Format(QuantsolicitadoN2, "###,##0.00")

txt_TotalIPI = Format(TotalIPI, "###,##0.00")

'If cmbFinalidade_emissao.Text <> "4 - Devolução/Retorno" Then
    txt_BaseICMS = Format(BASECALCULO, "###,##0.00")
'Else
'    txt_BaseICMS = Format(BASECALCULO - Acessorias, "###,##0.00")
'End If

txt_VlrICMS = Format(Total_ICMS, "###,##0.00")
txt_baseICMSs = IIf(TotalBCICMSCST = 0, Format(TotalBCICMSCST, "###,##0.00"), Format(TotalBCICMSCST, "###,##0.00"))
txt_ICMSs = IIf(TotalICMSCST = 0, Format(TotalICMSCST, "###,##0.00"), Format(TotalICMSCST, "###,##0.00"))

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub cmdcliente_Click()
On Error GoTo tratar_erro

Sit_REG = 1
Faturamento = True
frmFaturamento_Prod_serv_cliente_forn.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirProduto()
On Error GoTo tratar_erro

If Excluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido excluir, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
Permitido = False
With ListaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If USMsgBox("Deseja realmente excluir este(s) produto(s)?", vbYesNo, "CAPRIND v5.0") = vbYes Then GoTo 1 Else Exit Sub
            End If
1:
            Permitido = True
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from tbl_Detalhes_Nota WHERE Int_codigo = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir produto"
                ID_documento = .ListItems(InitFor)
                ProcVerificaTipoNF False
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
                Documento1 = "Cód. interno: " & TBFI!int_Cod_Produto
                ProcGravaEvento
                '==================================
                
                Conexao.Execute "DELETE FROM tbl_detalhes_Nota WHERE int_codigo = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM Faturamento_Relacionamento WHERE Id_produto = " & .ListItems(InitFor) & " or Id_produto_relacionada = " & .ListItems(InitFor) & " "
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_NFe WHERE Id_item = " & .ListItems(InitFor)
                Conexao.Execute "DELETE from Estoque_controle_empenho_vendas where ID_Faturamento = " & .ListItems(InitFor)
                
                ProcExcluirDadosTabelaCST .ListItems(InitFor)
                
                Set TBTempo = CreateObject("adodb.recordset")
                TBTempo.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBTempo.EOF = False Then
                    Do While TBTempo.EOF = False
                        IDlista = TBTempo!ID_carteira
                        Desenho = TBTempo!Codinterno
                        Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBTempo!ID
                        
                        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
                        ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                        ProcExcluirPedidosNF IDlista, Desenho
                        TBTempo.MoveNext
                    Loop
                End If
                TBTempo.Close
            End If
            TBFI.Close
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe o(s) produto(s) antes de excluir."), vbExclamation, "CAPRIND v5.0"
Else
    USMsgBox ("Produto(s) excluído(s) com sucesso."), vbInformation, "CAPRIND v5.0"
    txtCod_Produto.Text = ""
    txtIDProduto = 0
    ProcLimpaCamposProd
    ProcCarregaLista
    If NF_alterada = True Then ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    ProcGravarTotaisNota
    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
    ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    Frame1(9).Enabled = False
    Novo_Nota1 = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirPedidosNF(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBCotacao = CreateObject("adodb.recordset")
TBCotacao.Open "Select VP.* from vendas_carteira VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCotacao.EOF = False Then
    Set TBProposta = CreateObject("adodb.recordset")
    TBProposta.Open "Select VC.* from vendas_carteira VC INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_carteira = VC.Codigo and NFPP.Codinterno = VC.Desenho where NFPP.ID_nota = " & txtId & " and VC.Cotacao = " & TBCotacao!Cotacao, Conexao, adOpenKeyset, adLockOptimistic
    If TBProposta.EOF = True Then
        Conexao.Execute "DELETE from tbl_proposta_nota where ID_nota = " & txtId & " and Proposta = '" & TBCotacao!Ncotacao & "' and Revisao = " & TBCotacao!Revisao
    End If
    TBProposta.Close
Else
    Set TBCotacao = CreateObject("adodb.recordset")
    TBCotacao.Open "Select P.* from Compras_pedido_lista CPL INNER JOIN Compras_pedido P ON P.IDpedido = CPL.IDPedido where CPL.IDlista = " & ID_carteira & " and CPL.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCotacao.EOF = False Then
        Set TBProposta = CreateObject("adodb.recordset")
        TBProposta.Open "Select CPL.* from Compras_pedido_lista CPL INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_carteira = CPL.IDLista and NFPP.Codinterno = CPL.Desenho where NFPP.ID_nota = " & txtId & " and CPL.IDpedido = " & TBCotacao!IDpedido, Conexao, adOpenKeyset, adLockOptimistic
        If TBProposta.EOF = True Then
            Conexao.Execute "DELETE from tbl_proposta_nota where ID_nota = " & txtId & " and Proposta = '" & TBCotacao!Pedido & "' and Revisao = 0"
        End If
        TBProposta.Close
    End If
End If
TBCotacao.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirDadosTabelaCST(ID_produto_nota As Long)
On Error GoTo tratar_erro

Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_ICMS WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_IPI WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_PIS WHERE id_item = " & ID_produto_nota
Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_CST_Cofins WHERE id_item = " & ID_produto_nota

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcLimpaCamposTotaisNota()
On Error GoTo tratar_erro

If ListaProdutos.ListItems.Count = 0 Or Cancelar_alt_totais = True Then
    txtVLRMPA = "0,00"
    txtVLRMOA = "0,00"
    txtBCICMSSN = "0,00"
    txtValorICMSSN = "0,00"
    
    txt_BaseICMS = "0,00"
    txt_VlrICMS = "0,00"
    txt_baseICMSs = "0,00"
    txt_ICMSs = "0,00"
    txt_VlrTotalProd = "0,00"
    txt_VlrFrete = "0,00"
    txt_vlrSeguro = "0,00"
    txt_OutrasDisp = "0,00"
    txt_TotalIPI = "0,00"
    Txt_valor_total_desc = "0,00"
    Txt_valor_total_desc_SUFRAMA = "0,00"
End If

txt_ValorNota = "0,00"

If Listaservicos.ListItems.Count = 0 Then
    txtTotalservicos = "0,00"
    Txt_valorISS = "0,00"
    txtTotal_PIS = "0,00"
    txtTotal_Cofins = "0,00"
    txtTotal_CSLL = "0,00"
    txtTotal_INSS = "0,00"
    txtTotal_IRRF = "0,00"
End If

txt_ValorNota2 = "0,00"

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Form_Load()
On Error GoTo tratar_erro
Direitos
ProcLimpaVariaveisPrincipais
'===============================================
' Nota com Pedido interno
'===============================================
ComPedido = False
'===============================================

ProcCarregaToolBar7 Me, 15315, 6, True
ProcCarregaToolBar1 Me, 15315, 8, True
ProcCarregaToolBar2 Me, 15315, 7, True
ProcCarregaToolBar3 Me, 15315, 11, True
ProcCarregaToolBar4 Me, 15315, 7, True
ProcCarregaToolBar6 Me, 15315, 5, True
Lista_carteira.Visible = True

    With SSFaturamento
        .TabsPerRow = 6
        .Tab = 0
    End With
    

If Faturamento_NF_Saida = True Then
    With Opt_saida
        .Value = True
        .Enabled = True
    End With
    With Opt_entrada
        .Value = False
        .Enabled = True
    End With
    Aplicacao = "P"
    With txt_Razao
        .Locked = True
        .TabStop = False
    End With
    With txttipocliente
        .Locked = True
        .TabStop = False
    End With

    lbldtEntSaid(44).Caption = "Data Saída"
    lblhrEntsaid(21).Caption = "Hora Saída"
Else
    With Opt_saida
        .Value = False
        .Enabled = False
    End With
    With Opt_entrada
        .Value = True
        .Enabled = True
    End With
    Aplicacao = "T"
    With txt_Razao
        .Locked = False
        .TabStop = True
    End With
    With txttipocliente
        .Locked = False
        .TabStop = True
    End With
    With Txt_chave_acesso
        .Locked = False
        .TabStop = Tue
    End With
    lbldtEntSaid(44).Caption = "Data Entrada"
    lblhrEntsaid(21).Caption = "Hora Entrada"
End If

With Cmb_opcao_lista
    .Clear
    .AddItem "Copiar"
    .AddItem "Excluir"
    .AddItem "Validação"
End With
    
'=======================================================
'Carrega dados da empresa
'=======================================================
Set TBEmpresa = CreateObject("adodb.recordset")
TBEmpresa.Open "Select * from Empresa order by Codigo", Conexao, adOpenKeyset, adLockOptimistic
If TBEmpresa.EOF = False Then
txtIDEmpresa.Text = TBEmpresa!CODIGO
txtempresa.Text = TBEmpresa!Empresa
End If
TBFIltro.Close

SSFaturamento.TabVisible(5) = False

ProcCarregaComboUnidade txtunserv, False
ProcCarregaComboUnidade Cmb_un_com_serv, False
ProcImportarXMLCarregacamposCombo
TabFiltro.ActiveTab = Month(Date) - 1
ProcCarregaComboAno cmbAno, "2005", 1
txt_DtEmissao.Text = Date

NF_cancelada = False
NF_enviada = False
NF_alterada = False
NFe_liberada = False

Cmb_opcao_lista = "Validação"
Formulario_nota = Formulario

ProcRemoveObjetosResize Me

Faturamento_PI = True
Faturamento_Produtos = True
Faturamento_Comercial = True



StrSQL_OF = "Select * from Carteira_ordem_fat where ID_empresa = " & ID_empresa & " and Tipo = 'P' and Qtde_empenhada_est > 0 and SaldoEstoque > 0 order by prazofinal, Desenho"
FormulaRelOF = "{Carteira_ordem_fat.ID_empresa} = " & ID_empresa & " and {Carteira_ordem_fat.Tipo} = 'P' and {Carteira_ordem_fat.Qtde_empenhada_est} > 0 and {Carteira_ordem_fat.SaldoEstoque} > 0"
'frmEstoque_Ordem_Faturamento.ProcCorrigeFormPedIntCompra
frmEstoque_Ordem_Faturamento.ProcCarregaListaCarteira (1)
ProcVerificaTipoNF True

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcImportarXMLCarregacamposCombo()
On Error GoTo tratar_erro


Cmb_un_com_serv.ListIndex = -1
Set TBFamilia = CreateObject("adodb.recordset")
If txtIDProduto <> 0 Then
    TBFamilia.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtIDProduto, Conexao, adOpenKeyset, adLockOptimistic
    If TBFamilia.EOF = False Then
        If IsNull(TBFamilia!txt_Unid) = False And TBFamilia!txt_Unid <> "" Then txtUN = TBFamilia!txt_Unid
        If IsNull(TBFamilia!Unidade_com) = False And TBFamilia!Unidade_com <> "" Then Cmb_un_com = TBFamilia!Unidade_com
    End If
    TBFamilia.Close
End If
If txtidservico <> 0 Then
    TBFamilia.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & txtidservico, Conexao, adOpenKeyset, adLockOptimistic
    If TBFamilia.EOF = False Then
        If IsNull(TBFamilia!txt_Unid) = False And TBFamilia!txt_Unid <> "" Then txtunserv = TBFamilia!txt_Unid
        If IsNull(TBFamilia!Unidade_com) = False And TBFamilia!Unidade_com <> "" Then Cmb_un_com_serv = TBFamilia!Unidade_com
    End If
    TBFamilia.Close
End If
1:

Exit Sub
tratar_erro:
    If Err.Number = "383" Then GoTo 1
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Form_Resize()
On Error GoTo tratar_erro

ProcVerifiFormulario
Direitos
ProcLimpaVariaveisPrincipais

ProcCarregaComboUnidade txtunserv, False
ProcCarregaComboUnidade Cmb_un_com_serv, False
ProcImportarXMLCarregacamposCombo
Formulario_nota = Formulario

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcImprimir()
On Error GoTo tratar_erro

If txtId <> "" Then
frmFaturamento_Prod_serv_imprimirOF.Show 1
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAtualizar()
On Error GoTo tratar_erro

If InputBox("Informe a senha para liberar.") = "280362F" Then frmFaturamento_Prod_serv_atualizar.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcAtualizacao()
On Error GoTo tratar_erro

If USMsgBox("Deseja realmente executar essa(s) atualização(ões)?", vbYesNo, "CAPRIND v5.0") = vbYes Then
    Atualizacao = True
    With frmFaturamento_Prod_serv_atualizar
        If Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then
            DataFiltro = "dt_Saida_Entrada"
            ApicacaoFiltro = "T"
        Else
            DataFiltro = "dt_DataEmissao"
            ApicacaoFiltro = "P"
        End If
        
        If .Chk1.Value = 1 Then
            'Atualiza totais das notas
            'Atualiza valores e impostos dos produtos e serviços
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select TT.*, NF.ID_empresa, NF.Id_Int_Cliente, NF.Aplicacao, NF.txt_Razao_Nome, NF.txt_UF, NF.TabelaSN, NF.int_TipoNota from tbl_Totais_Nota TT INNER JOIN tbl_Dados_Nota_Fiscal NF ON TT.ID_nota = NF.ID where NF.Alterar = 'False' and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by TT.ID_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                Contador = 0
                Do While TBVendas.EOF = False
                
                    TBVendas!Valor_total_Extenso = FunValorExtenso(TBVendas!dbl_Valor_Total_Nota)
                    TBVendas.Update
                    
                    ProcCarregaDadosNota TBVendas!ID_nota
                    
                    'Produtos
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & TBVendas!ID_nota & " and Tipo = 'P' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                                
                            'Atualiza familia dos produtos na nota
                            If TBProduto!int_Cod_Produto <> "'---" And TBProduto!int_Cod_Produto <> "-" And TBProduto!int_Cod_Produto <> "--'" And TBProduto!int_Cod_Produto <> "--" And TBProduto!int_Cod_Produto <> "---" And TBProduto!int_Cod_Produto <> "----" And TBProduto!int_Cod_Produto <> "." Then
                                Set TBItem = CreateObject("adodb.recordset")
                                TBItem.Open "Select Classe from projproduto where desenho = '" & TBProduto!int_Cod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBItem.EOF = False Then
                                    TBProduto!Familia = IIf(IsNull(TBItem!Classe), "", TBItem!Classe)
                                End If
                                TBItem.Close
                            End If
                                
                            'Impostos
                            Valor_total = IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd)
                                
                            'Empresa
                            If IsNull(TBProduto!ID_CFOP) = False And TBProduto!ID_CFOP <> "" Then ProcControleImposto TBProduto!ID_CFOP, TBVendas!Id_Int_Cliente
                            ProcVerifImpostosEmpresa TBVendas!ID_empresa, TBProduto!retorno, "", False, 0, False, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                            TBProduto!PIS_Prod = PIS_Prod
                            If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "0.00") Else TBProduto!Total_PIS_prod = 0
                            TBProduto!Cofins_Prod = Cofins_Prod
                            If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "0.00") Else TBProduto!Total_Cofins_prod = 0
                            TBProduto!CSLL_Prod = CSLL_Prod
                            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "0.00") Else TBProduto!Total_CSLL_prod = 0
                            TBProduto!IRPJ_Prod = IRPJ_Prod
                            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "0.00") Else TBProduto!Total_IRPJ_prod = 0
                            TBProduto!cpp = CPP_Prod
                            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "0.00") Else TBProduto!Total_CPP = 0
                            TBProduto!ICMS_SN = ICMS_SN
                            If Regime = 1 Then Valor_total = valor
                            
                            Set TBFI = CreateObject("adodb.recordset")
                            TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
                            If TBFI.EOF = False Then
                                'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                                If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And TBProduto!retorno = False Then
                                    TBProduto!Valor_Retencao_PIS = (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100
                                    TBProduto!Valor_Retencao_Cofins = (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100
                                Else
                                    TBProduto!Valor_Retencao_PIS = 0
                                    TBProduto!Valor_Retencao_Cofins = 0
                                End If
                                
                                If DestacaImpostos = "SIM" Then
                                    If Regime <> 1 And TBVendas!int_TipoNota = 2 And TBProduto!retorno = False Then
                                        If TemPIS = True Then
                                            PIS_Prod = IIf(IsNull(TBFI!PIS_destaca), 0, TBFI!PIS_destaca)
                                            If PIS_Prod <> 0 Then
                                                TBProduto!PIS_Prod = PIS_Prod
                                                TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00")
                                            End If
                                        Else
                                            TBProduto!PIS_Prod = 0
                                            TBProduto!Total_PIS_prod = 0
                                        End If
                                        If TemCOFINS = True Then
                                            Cofins_Prod = IIf(IsNull(TBFI!Cofins_destaca), 0, TBFI!Cofins_destaca)
                                            If Cofins_Prod <> 0 Then
                                                TBProduto!Cofins_Prod = Cofins_Prod
                                                TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00")
                                            End If
                                        Else
                                            TBProduto!Cofins_Prod = 0
                                            TBProduto!Total_Cofins_prod = 0
                                        End If
                                    End If
                                Else
                                    TBProduto!PIS_Prod = 0
                                    TBProduto!Total_PIS_prod = 0
                                    TBProduto!Cofins_Prod = 0
                                    TBProduto!Total_Cofins_prod = 0
                                End If
                            End If
                            
                            If IsNull(TBProduto!ID_CF) = False Then
                                ProcBuscaTributos (TBProduto!ID_CF)
                                If TBVendas!Aplicacao = "T" Then
                                    If vlrICMS(0, 1) = 0 Then vlrICMS(0, 1) = IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)
                                    If vlrICMS(0, 2) = 0 Then vlrICMS(0, 2) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                    If vlrICMS(0, 3) = 0 Then vlrICMS(0, 3) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                    If vlrICMS(0, 4) = 0 Then vlrICMS(0, 4) = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                End If
                                ProcVerificaRegiao TBVendas!txt_UF, TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome
                            End If
                            
                            Set TBFI = CreateObject("adodb.recordset")
                            TBFI.Open "Select Valor_IPI from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                            If TBFI.EOF = True Then
                                If IsNull(TBProduto!int_IPI) = False And TBProduto!int_IPI <> "" And TBProduto!int_IPI <> "0" Then
                                    If TBProduto!Tem_IPI_frete = True Then
                                        TBProduto!dbl_valoripi = Format(((Valor_total + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)) * IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)) / 100, "###,##0.00")
                                    Else
                                        TBProduto!dbl_valoripi = Format((Valor_total * IIf(IsNull(TBProduto!int_IPI), 0, TBProduto!int_IPI)) / 100, "###,##0.00")
                                    End If
                                Else
                                    TBProduto!dbl_valoripi = 0
                                End If
                            End If
                            TBFI.Close
                            
                            If TBProduto!retorno = False Then
                                'Impostos
                                Valores = Valor_total + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                                
                                ProcVerifImpostosEmpresa TBVendas!ID_empresa, TBProduto!retorno, "", False, 0, False, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                                
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select valor_pis, valor_cofins from tbl_Detalhes_Nota_NFe where ID_item = " & TBProduto!Int_codigo & " and Documento_importacao IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    TBProduto!Total_PIS_prod = IIf(IsNull(TBFI!valor_pis), 0, TBFI!valor_pis)
                                    TBProduto!Total_Cofins_prod = IIf(IsNull(TBFI!valor_cofins), 0, TBFI!valor_cofins)
                                End If
                                TBFI.Close
                                
                                PV = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal)
                                PV = (PV - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete)
                                IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select id_CFOP from tbl_NaturezaOperacao where IDCountCfop = " & IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    ProcCalculaBC TBVendas!ID_empresa, TBFI!ID_CFOP, 0, PV, IIf(IsNull(TBProduto!dbl_valoripi), 0, TBProduto!dbl_valoripi), SomarIPI, SomarIPIST, TemReducaoBC, IIf(TBProduto!NaoArredondar = True, True, False), IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), TBVendas!Aplicacao, TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome
                                End If
                                TBFI.Close
                                
                                If TemICMS = "SIM" Or Suframa = True And Desconto_Suframa = True Then
                                    ICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                    
                                    'Verifica valor da matéria prima aplicada
                                    If MPA = True Then
                                        Set TBAfericao = CreateObject("adodb.recordset")
                                        If TBVendas!int_TipoNota = 1 Then
                                            TBAfericao.Open "Select ICMS_ind from Impostos where ID_empresa = " & TBVendas!ID_empresa & " and ICMS_ind is not null", Conexao, adOpenKeyset, adLockOptimistic
                                        ElseIf TBVendas!Aplicacao = "T" Then
                                                TBAfericao.Open "Select ICMS_ind from Compras_fornecedores where IDcliente = " & TBVendas!Id_Int_Cliente & " and Nome_Razao = '" & TBVendas!txt_Razao_Nome & "' and ICMS_ind is not null", Conexao, adOpenKeyset, adLockOptimistic
                                        End If
                                        If TBAfericao.EOF = False Then
                                            If TBAfericao!ICMS_ind <> "" Then
                                                ICMSOUTROS = TBAfericao!ICMS_ind
                                                TBProduto!VlrMPA = Format((Valores * ICMSOUTROS) / 100, "###,##0.00")
                                            End If
                                        End If
                                        TBAfericao.Close
                                    End If
                                    
                                    ValorPorc = ValorPorc + quantnovo
                                    quantnovo = IIf(IsNull(TBProduto!VlrMPA), 0, TBProduto!VlrMPA)
                                
                                    If ICMS <> 0 Or quantnovo <> 0 Or Suframa = True And Desconto_Suframa = True Then
                                        If quantnovo = 0 Then
                                            IntICMS = IIf(IsNull(TBProduto!int_ICMS), 0, TBProduto!int_ICMS)
                                            PV1 = BC + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias)
                    
                                            'Calcula ICMS sem arredondar ou arredondando
                                            If ICMS <> 0 Then
                                                Total_ICMS = Total_ICMS + Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                                                BASECALCULO = BASECALCULO + PV1
                                            End If
                                        Else
                                            If Faturamento_NF_Saida = True Then
                                                Set TBFIltro = CreateObject("adodb.recordset")
                                                TBFIltro.Open "Select * from empresa where codigo = " & TBVendas!ID_empresa, Conexao, adOpenKeyset, adLockOptimistic
                                            Else
                                                Set TBFIltro = CreateObject("adodb.recordset")
                                                TBFIltro.Open "Select * from clientes where ID = " & TBVendas!Id_Int_Cliente & " and NomeRazao = '" & TBVendas!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFIltro.EOF = True Then
                                                    Set TBFIltro = CreateObject("adodb.recordset")
                                                    TBFIltro.Open "Select * from compras_fornecedores where IDCliente = " & TBVendas!Id_Int_Cliente & " and Nome_Razao = '" & TBVendas!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                                                End If
                                            End If
                                            If TBFIltro.EOF = False Then
                                                If TBFIltro!Simples = True Then PV1 = 0 Else PV1 = quantnovo + TBProduto!Valor_frete + TBProduto!Valor_seguro + TBProduto!Valor_acessorias
                                            End If
                                            TBFIltro.Close
                    
                                            'Calcula ICMS sem arredondar ou arredondando
                                            Total_ICMS = Total_ICMS + Format(FunCalulaArredondaICMS(ICMS, PV1, IIf(TBProduto!NaoArredondar = True, True, False)), "###,##0.00")
                                            BASECALCULO = BASECALCULO + PV1
                                        End If
                                    End If
                                End If
                                
                                'Soma o ICMS do suframa
                                If Suframa = True And Desconto_Suframa = True Then
                                    ProcValorImposto TBVendas!ID, IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome, TBVendas!txt_UF, TBVendas!ID_empresa, False, IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(IsNull(TBVendas!Regime), 0, TBVendas!Regime)
                                    TBProduto!Valor_desconto_SUFRAMA = Format((PV1 * IntICMS) / 100, "###,##0.00")
                                    VlrICMS_suframa = VlrICMS_suframa + IIf(IsNull(TBProduto!Valor_desconto_SUFRAMA), 0, TBProduto!Valor_desconto_SUFRAMA)
                                Else
                                    TBProduto!Valor_desconto_SUFRAMA = 0
                                End If
                            End If
                            TBProduto.Update
                            
                            ProcSubstituicaoTributaria cbo_UF, IIf(IsNull(TBProduto!txt_CST), "", TBProduto!txt_CST), IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), TBVendas!Id_Int_Cliente, TBVendas!txt_Razao_Nome, IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario), IIf(IsNull(TBProduto!int_Qtd), 0, TBProduto!int_Qtd), BC, BCST, IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete), IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro), IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), True, IIf(Left(Cmb_consumidor, 1) = 1, True, False), IDempresa
                            ProcAtualizaCST IDempresa, txtIDCliente, txt_Razao, cbo_UF, IIf(Cmb_consumidor = "", 1, Left(Cmb_consumidor, 1)), IIf(cmbFinalidade_emissao = "", 1, Left(cmbFinalidade_emissao, 1))
                            
                            TBProduto.MoveNext
                        Loop
                    End If
                    
                    Valor_total = 0
                    
                    'Serviços
                    Set TBCarteira = CreateObject("adodb.recordset")
                    TBCarteira.Open "Select * from tbl_Detalhes_Nota where ID_nota = " & TBVendas!ID_nota & " and Tipo = 'S' order by Int_codigo", Conexao, adOpenKeyset, adLockOptimistic
                    If TBCarteira.EOF = False Then
                        Do While TBCarteira.EOF = False
                            
                            'Atualiza familia dos serviços na nota
                            If TBCarteira!int_Cod_Produto <> "'---" And TBCarteira!int_Cod_Produto <> "-" And TBCarteira!int_Cod_Produto <> "--'" And TBCarteira!int_Cod_Produto <> "--" And TBCarteira!int_Cod_Produto <> "---" And TBCarteira!int_Cod_Produto <> "----" And TBCarteira!int_Cod_Produto <> "." Then
                                Set TBProduto = CreateObject("adodb.recordset")
                                TBProduto.Open "Select Classe from projproduto where desenho = '" & TBCarteira!int_Cod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBProduto.EOF = False Then
                                    TBCarteira!Familia = IIf(IsNull(TBProduto!Classe), "", TBProduto!Classe)
                                End If
                                TBProduto.Close
                            End If
                            
                            'Impostos
                            Valor_total = IIf(IsNull(TBCarteira!dbl_ValorUnitario), 0, TBCarteira!dbl_ValorUnitario) * IIf(IsNull(TBCarteira!int_Qtd), 0, TBCarteira!int_Qtd)
                            
                            'Empresa
                            If IsNull(TBCarteira!ID_CFOP) = False And TBCarteira!ID_CFOP <> "" Then ProcControleImposto TBCarteira!ID_CFOP, TBVendas!Id_Int_Cliente
                            ProcVerifImpostosEmpresa TBVendas!ID_empresa, False, TBCarteira!int_Cod_Produto, TBCarteira!Servico_cliente, Valor_total, True, IIf(IsNull(TBVendas!TabelaSN), 0, TBVendas!TabelaSN), Lbl2.Caption
                                
                            If TBCarteira!Imposto_manual_serv <> True Then
                                TBCarteira!PIS_Serv = PIS_Serv
                                If PIS_Serv <> 0 Then TBCarteira!Total_PIS_serv = (Valor_total * PIS_Serv) / 100 Else TBCarteira!Total_PIS_serv = 0
                                TBCarteira!Cofins_Serv = Cofins_Serv
                                If Cofins_Serv <> 0 Then TBCarteira!Total_Cofins_serv = (Valor_total * Cofins_Serv) / 100 Else TBCarteira!Total_Cofins_serv = 0
                                TBCarteira!CSLL_Serv = CSLL_Serv
                                If CSLL_Serv <> 0 Then TBCarteira!Total_CSLL_serv = (Valor_total * CSLL_Serv) / 100 Else TBCarteira!Total_CSLL_serv = 0
                                 TBCarteira!ISS = ISS_Serv
                                If TBCarteira!ISS <> 0 Then TBCarteira!VlrISS = Format((Valor_total * TBCarteira!ISS) / 100, "###,##0.00") Else TBCarteira!VlrISS = 0
                                TBCarteira!INSS_Serv = INSS_Serv
                                If INSS_Serv <> 0 Then TBCarteira!Total_INSS_serv = (Valor_total * INSS_Serv) / 100 Else TBCarteira!Total_INSS_serv = 0
                                TBCarteira!IRPJ_Serv = IRPJ_Serv
                                If IRPJ_Serv <> 0 Then TBCarteira!Total_IRPJ_serv = (Valor_total * IRPJ_Serv) / 100 Else TBCarteira!Total_IRPJ_serv = 0
                                TBCarteira!IRRF_Serv = IRRF_Serv
                                If IRRF_Serv <> 0 Then TBCarteira!Total_IRRF_serv = (Valor_total * IRRF_Serv) / 100 Else TBCarteira!Total_IRRF_serv = 0
                            End If
                            TBCarteira.Update
                            TBCarteira.MoveNext
                        Loop
                    End If
                    TBCarteira.Close
                    
                    TBVendas.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBVendas.Close
            
            Set TBExecucao = CreateObject("adodb.recordset")
            TBExecucao.Open "Select * from tbl_Dados_Nota_Fiscal where Aplicacao = '" & ApicacaoFiltro & "' and " & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by Int_TipoNota, dt_DataEmissao, int_NotaFiscal", Conexao, adOpenKeyset, adLockOptimistic
            If TBExecucao.EOF = False Then
                TBExecucao.MoveLast
                Contador1 = 0
                TBExecucao.MoveFirst
                Do While TBExecucao.EOF = False
                    txtId = TBExecucao!ID
                    ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
                    ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
                    ProcCarregaLista
                    ProcCarregaListaServicos
                    ProcGravarTotaisNota
                    TBExecucao.MoveNext
                    Contador1 = Contador1 + 1
                    '(0).Value = Contador1
                Loop
            End If
            TBExecucao.Close
        End If
            
        If .Chk2.Value = 1 Then
            'Corrige valor total por FunValorExtenso das duplicatas
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select DR.* from tbl_Detalhes_Recebimento DR INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = DR.ID_nota where NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by DR.id_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    TBAbrir!Valor_Extenso = FunValorExtenso(TBAbrir!dbl_Valor)
                    TBAbrir.Update
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBAbrir.Close
        End If
                                       
        If .Chk3.Value = 1 Then
            'Atualiza qtde. faturada e status do produto/servico
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select * from vendas_carteira order by Codigo", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                TBVendas.MoveLast
                Contador = 0
                TBVendas.MoveFirst
                Do While TBVendas.EOF = False
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(NFPP.Quantidade) as Quant from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF) INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = NFPP.ID_nota where NFPP.ID_carteira = " & TBVendas!CODIGO & " and NFPP.Codinterno = '" & TBVendas!Desenho & "' and NF.int_status = 1 and NF.Pedido_interno = 'True' and NF.int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    If Quant <> 0 Then
                        TBVendas!QtdeFaturada = Quant
                        If TBVendas!qtdeliberada < Quant Then TBVendas!qtdeliberada = Quant
                        If Quant >= TBVendas!quantidade Then TBVendas!Liberacao = "FATURADO" Else TBVendas!Liberacao = "FATURADO PARCIAL"
                        TBVendas.Update
                    End If
                    TBVendas.MoveNext
                    Contador = Contador + 1
                Loop
            End If
        End If
        
        If .Chk4.Value = 1 Then
            'Atualiza status do pedido
            Set TBVendas = CreateObject("adodb.recordset")
            TBVendas.Open "Select * from vendas_proposta order by cotacao", Conexao, adOpenKeyset, adLockOptimistic
            If TBVendas.EOF = False Then
                TBVendas.MoveLast
                Contador = 0
                TBVendas.MoveFirst
                Do While TBVendas.EOF = False
                    FunAtualizaStatusPropPI TBVendas!Cotacao
                    TBVendas.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBVendas.Close
        End If
        
        If .Chk5.Value = 1 Then
            'Número das notas
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from Estoque_controle_recebimento where Nota_fiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NF as Nota_fiscal from Estoque_Controle where NF IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select Documento as Nota_fiscal from Estoque_Movimentacao where Documento IS NOT NULL and (Operacao = 'ENTRADA_NOTA_FISCAL' or Operacao = 'ENTRADA_NOTA_FISCAL_CONSIGNAÇÃO') order by IDEstoque", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal

            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NFiscal as Nota_fiscal from tbl_contas_receber where NFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal

            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Dados_Nota_Fiscal where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
                
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Dados_Transp where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
                        
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select IDNotaFiscal as Nota_fiscal from Tbl_DadosAdicionais where IDNotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Detalhes_Nota where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Detalhes_Recebimento where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NF as Nota_fiscal from tbl_proposta_nota where NF IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
            
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select int_NotaFiscal as Nota_fiscal from tbl_Totais_Nota where int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then ProcCorrigeNota_fiscal
        End If
        
        If .Chk6.Value = 1 Then
            'CNPJ dos fornecedores
            Set TBControleNF = CreateObject("adodb.recordset")
            TBControleNF.Open "Select * FROM tbl_Dados_Nota_Fiscal where Aplicacao = '" & ApicacaoFiltro & "' and " & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBControleNF.EOF = False Then
                TBControleNF.MoveLast
                Contador = 0
                TBControleNF.MoveFirst
                Do While TBControleNF.EOF = False
                    If IsNull(TBControleNF!Id_Int_Cliente) = False And IsNull(TBControleNF!txt_Razao_Nome) = False Then
                        Set TBAbrir = CreateObject("adodb.recordset")
                        TBAbrir.Open "Select * from Compras_fornecedores where IDCliente = " & TBControleNF!Id_Int_Cliente & " and Nome_Razao = '" & TBControleNF!txt_Razao_Nome & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBAbrir.EOF = False Then
                            If TBAbrir!idTipoEmpresa = 1 Then TBControleNF!txt_CNPJ_CPF = TBAbrir!CPF_CNPJ
                            If TBAbrir!Pessoa = "JURÍDICA" Then TBControleNF!txt_tipocliente = "J" Else TBControleNF!txt_tipocliente = "F"
                            TBControleNF.Update
                        End If
                    End If
                    TBControleNF.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBControleNF.Close
        End If
        
        If .chk7.Value = 1 Then
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_contas_receber order by ID_nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    Conexao.Execute "Update tbl_Detalhes_Recebimento Set IDContaReceber = " & TBAbrir!IDintconta & " where ID_nota = " & IIf(IsNull(TBAbrir!ID_nota), 0, TBAbrir!ID_nota) & " and txt_parcela = '" & IIf(IsNull(TBAbrir!Parcela), 0, TBAbrir!Parcela) & "'"
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                Loop
            End If
    
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from tbl_Detalhes_Recebimento", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    If IsNull(TBAbrir!IdContaReceber) = True Or TBAbrir!IdContaReceber = "" Then
                        TBAbrir!IdContaReceber = 0
                        TBAbrir.Update
                    End If
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk8.Value = 1 Then
            'Corrige número sequencial dos boletos
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select DR.* from tbl_Detalhes_Recebimento DR INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = DR.ID_nota where DR.Seq_remessa is not null and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by DR.Seq_remessa", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    If TBAbrir!Seq_remessa <> "" Then
                        If Len(TBAbrir!Seq_remessa) > 1 Then
                            If Right(TBAbrir!Seq_remessa, 4) = ".txt" Then
                                Seq = Left(TBAbrir!Seq_remessa, Len(TBAbrir!Seq_remessa) - 4)
                            Else
                                Seq = TBAbrir!Seq_remessa
                            End If
                        Else
                            If IsNumeric(TBAbrir!Seq_remessa) = False Then
                                Select Case TBAbrir!Seq_remessa
                                    Case "A": Seq = 1
                                    Case "B": Seq = 2
                                    Case "C": Seq = 3
                                    Case "D": Seq = 4
                                    Case "E": Seq = 5
                                    Case "F": Seq = 6
                                    Case "G": Seq = 7
                                    Case "H": Seq = 8
                                    Case "I": Seq = 9
                                    Case "J": Seq = 10
                                    Case "K": Seq = 11
                                    Case "L": Seq = 12
                                    Case "M": Seq = 13
                                    Case "N": Seq = 14
                                    Case "O": Seq = 15
                                    Case "P": Seq = 16
                                    Case "Q": Seq = 17
                                    Case "R": Seq = 18
                                    Case "S": Seq = 19
                                    Case "T": Seq = 20
                                    Case "U": Seq = 21
                                    Case "V": Seq = 22
                                    Case "X": Seq = 23
                                    Case "W": Seq = 24
                                    Case "Y": Seq = 25
                                    Case "Z": Seq = 26
                                End Select
                            Else
                                Seq = TBAbrir!Seq_remessa
                            End If
                        End If
                        TBAbrir!Seq_remessa = Seq
                        TBAbrir.Update
                    End If
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk9.Value = 1 Then
            'Corrige valores (retorno)
            IDlista = 0
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select NFP.*, TN.dbl_Valor_Total_Nota from (tbl_Totais_Nota TN INNER JOIN tbl_Detalhes_Nota NFP ON TN.ID_nota = NFP.ID_Nota) INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = TN.ID_nota where NFP.retorno = 'True' and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NFP.ID_Nota", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                TBAbrir.MoveLast
                Contador = 0
                TBAbrir.MoveFirst
                Do While TBAbrir.EOF = False
                    valor = TBAbrir!dbl_Valor_Total_Nota
                    
                    Valor1 = 0
                    Set TBFI = CreateObject("adodb.recordset")
                    TBFI.Open "Select Sum(dbl_ValorTotal) as Valor1 from tbl_Detalhes_Nota where ID_nota = " & TBAbrir!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                    If TBFI.EOF = False Then
                        Valor1 = IIf(IsNull(TBFI!Valor1), 0, TBFI!Valor1)
                    End If
                    TBFI.Close
                    If Format(valor, "###,##0.00") < Format(Valor1, "###,##0.00") Then TBAbrir!Soma_retorno_totalnf = False Else TBAbrir!Soma_retorno_totalnf = True
                    
                    TBAbrir.Update
                    TBAbrir.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBAbrir.Close
        End If
        
        If .chk10.Value = 1 Then
            'Atualiza totais contas (receber/pagar) e quantidades das notas
            Set TBTotaisnota = CreateObject("adodb.recordset")
            TBTotaisnota.Open "Select TT.*, NF.int_TipoNota, NF.TipoNF, NF.Id_Int_Cliente from tbl_Totais_Nota TN INNER JOIN tbl_Dados_Nota_Fiscal NF ON TT.ID_nota = NF.ID where NF.int_TipoNota = 1 and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NF.ID", Conexao, adOpenKeyset, adLockOptimistic
            If TBTotaisnota.EOF = False Then
                TBTotaisnota.MoveLast
                Contador = 0
                TBTotaisnota.MoveFirst
                Do While TBTotaisnota.EOF = False
                    Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
                    Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
                    
                    If Valor_Retencao_PIS > 0 Or Valor_Retencao_Cofins > 0 Then
                    
                        'Soma total de rentenção de serviços
                        Valor_Retencao_Servico = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select * from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
                        Do While TBProduto.EOF = False
                            If TBProduto!Retencao_PIS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_PIS_serv), 0, TBProduto!Total_PIS_serv)
                            If TBProduto!Retencao_Cofins = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_Cofins_serv), 0, TBProduto!Total_Cofins_serv)
                            If TBProduto!Retencao_CSLL = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_CSLL_serv), 0, TBProduto!Total_CSLL_serv)
                            If TBProduto!Retencao_INSS = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_INSS_serv), 0, TBProduto!Total_INSS_serv)
                            If TBProduto!Retencao_ISSQN = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!VlrISS), 0, TBProduto!VlrISS)
                            If TBProduto!Retencao_IRRF = True Then Valor_Retencao_Servico = Valor_Retencao_Servico + IIf(IsNull(TBProduto!Total_IRRF_serv), 0, TBProduto!Total_IRRF_serv)
                            TBProduto.MoveNext
                        Loop
                        
                        'Verifica produtos de remessa
                        qt = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select Sum(dbl_ValorTotal) as qt from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            qt = IIf(IsNull(TBProduto!qt), 0, TBProduto!qt)
                        End If
                        
                        'Verifica produtos de retorno que somam o valor no total da nota
                        VlrTotalRetorno = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'P' and Retorno = 'True' and Soma_retorno_totalnf = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
                        End If
                        TBProduto.Close
                        
                        Controle = 0
                        nPagto = 0
                        Valor_Duplicatas = 0
                        Valor1 = 0
                        ValorTotal = 0
                        Set TBProduto = CreateObject("adodb.recordset")
                        TBProduto.Open "Select * from tbl_Detalhes_Recebimento where id_nota = " & TBTotaisnota!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                        If TBProduto.EOF = False Then
                            nPagto = TBProduto.RecordCount
                            Do While TBProduto.EOF = False
                                valor = IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota_Serv), 0, TBTotaisnota!dbl_Valor_Total_Nota_Serv)
                                
                                'Valor total dos produtos com retenção
                                Valor1 = IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota), 0, TBTotaisnota!dbl_Valor_Total_Nota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - valor
                                ValorTotal = (Valor1 + valor) - Valor_Retencao_Servico
                                If Valor_Retencao_Servico = 0 Then
                                    If TBTotaisnota!int_TipoNota = 2 And (TBTotaisnota!TipoNF = "SA" Or TBTotaisnota!TipoNF = "M1SA") Then
                                        'Valor total dos serviços com retenção
                                        txtIDCliente = TBTotaisnota!Id_Int_Cliente
                                        ProcVerificaEmpresaCliente
                                        If Permitido = True Then ProcVerificaImposto
                                    End If
                                End If
                                            
                                mxValorPag = Format((ValorTotal - VlrTotalRetorno - qt) / nPagto, "###,##0.00")
                                For Init = 1 To nPagto
                                    PAGTO = mxPagto(1, Init - 1)
                                    With lst_Duplicata
                                        TBProduto!dbl_Valor = Format(mxValorPag, "###,##0.00")
                                    End With
                                Next Init
                                TBProduto.MoveNext
                            Loop
                        End If
                        TBProduto.Close
                    End If
                    
                    'Grava valor total a receber/pagar na tabela de totais da NF
                    Set TBReceber = CreateObject("adodb.recordset")
                    TBReceber.Open "Select Sum(dbl_Valor) as Valor from tbl_Detalhes_Recebimento where ID_nota = " & TBTotaisnota!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                    If TBReceber.EOF = False Then
                        TBTotaisnota!Valor_total_receber_pagar = IIf(IsNull(TBReceber!valor), 0, TBReceber!valor)
                    End If
                    TBReceber.Close
                    
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(int_Qtd) as Quant from tbl_Detalhes_Nota where ID_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'P' and Retorno = 'False' and Remessa = 'False'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    TBTotaisnota!Qtde_total_prod = Quant
                    
                    Quant = 0
                    Set TBLISTA = CreateObject("adodb.recordset")
                    TBLISTA.Open "Select Sum(int_Qtd) as Quant from tbl_Detalhes_Nota where ID_nota = " & TBTotaisnota!ID_nota & " and Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBLISTA.EOF = False Then
                        Quant = IIf(IsNull(TBLISTA!Quant), 0, TBLISTA!Quant)
                    End If
                    TBTotaisnota!Qtde_total_serv = Quant
                    
                    TBTotaisnota.Update
                    TBTotaisnota.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBTotaisnota.Close
        End If
        
        If .chk11.Value = 1 Then
            'Atualiza saldo dos produtos (relacionamento)
            Conexao.Execute "Update NFP Set Saldo = int_Qtd - (Select ROUND(ISNULL(SUM(FR.Qtde),0), 3) from Faturamento_Relacionamento FR where FR.Id_produto_relacionada = Int_codigo or FR.Id_produto = Int_codigo) from tbl_Detalhes_Nota NFP"
        End If
        
        If .chk12.Value = 1 Then
            'Atualiza valor de retenção de PIS e Cofins
            IDlista = 0
            Valor_Retencao_PIS = 0
            Valor_Retencao_Cofins = 0
            Valor_total = 0
            
            Set TBProduto = CreateObject("adodb.recordset")
            TBProduto.Open "Select NFP.* from tbl_Detalhes_Nota NFP INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.ID = NFP.ID_nota where NF.int_TipoNota = 1 and NF.Aplicacao = '" & ApicacaoFiltro & "' and NF." & DataFiltro & " Between '" & Format(.msk_fltInicio.Value, "Short Date") & "' And '" & Format(.msk_fltFim.Value, "Short Date") & "' order by NF.ID", Conexao, adOpenKeyset, adLockOptimistic
            If TBProduto.EOF = False Then
                TBProduto.MoveLast
                Contador = 0
                TBProduto.MoveFirst
                Do While TBProduto.EOF = False
                    If IDlista <> TBProduto!ID_nota Then
                        Valor_Retencao_PIS = 0
                        Valor_Retencao_Cofins = 0
                    End If
                        
                    Valores = Format(IIf(IsNull(TBProduto!dbl_ValorUnitario), 0, TBProduto!dbl_ValorUnitario) * TBProduto!int_Qtd, "###,##0.00")
                    If TBProduto!retorno = False Then
                        'Impostos
                        Valor_total = Format(Valores + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias), "###,##0.00")
                        
                        Set TBFIltro = CreateObject("adodb.recordset")
                        TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & TBProduto!ID_nota, Conexao, adOpenKeyset, adLockOptimistic
                        If TBFIltro.EOF = False Then
                            ProcControleImposto IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), IIf(IsNull(TBFIltro!Id_Int_Cliente), 0, TBFIltro!Id_Int_Cliente)
                            If IsNull(TBProduto!ID_CF) = False And TBProduto!ID_CF <> "" Then
                                ProcBuscaTributos TBProduto!ID_CF
                                Set TBFI = CreateObject("adodb.recordset")
                                TBFI.Open "Select * from tbl_classificacaofiscal where Idclass = " & TBProduto!ID_CF, Conexao, adOpenKeyset, adLockOptimistic
                                If TBFI.EOF = False Then
                                    
                                    'Verifica se a CF tem retenção de PIS/Cofins, destaca PIS/Cofins e grava no produto
                                    If DestacaImpostos = "SIM" And TBFI!Retem_PIS_Cofins = True And TBProduto!retorno = False Then
                                        TBProduto!Valor_Retencao_PIS = (Valor_total * IIf(IsNull(TBFI!PIS), 0, TBFI!PIS)) / 100
                                        TBProduto!Valor_Retencao_Cofins = (Valor_total * IIf(IsNull(TBFI!Cofins), 0, TBFI!Cofins)) / 100
                                    Else
                                        TBProduto!Valor_Retencao_PIS = 0
                                        TBProduto!Valor_Retencao_Cofins = 0
                                    End If
                                End If
                                TBFI.Close
                            End If
                        End If
                        TBFIltro.Close
                    
                        'Soma retenção de PIS/Cofins
                        If Retencao_PIS_Cofins = True Then
                            Valor_Retencao_PIS = Valor_Retencao_PIS + IIf(IsNull(TBProduto!Valor_Retencao_PIS), 0, TBProduto!Valor_Retencao_PIS)
                            Valor_Retencao_Cofins = Valor_Retencao_Cofins + IIf(IsNull(TBProduto!Valor_Retencao_Cofins), 0, TBProduto!Valor_Retencao_Cofins)
                        End If
                        
                        NovoValor = Replace(Valor_Retencao_PIS, ",", ".")
                        NovoValor1 = Replace(Valor_Retencao_Cofins, ",", ".")
                        Conexao.Execute "Update tbl_Totais_Nota Set Total_retencao_PIS = " & NovoValor & ", Total_retencao_Cofins = " & NovoValor1 & " where ID_nota = " & TBProduto!ID_nota
                        
                        TBProduto.Update
                    End If
                    IDlista = TBProduto!ID_nota
                    TBProduto.MoveNext
                    Contador = Contador + 1
                Loop
            End If
            TBProduto.Close
        End If
                
        USMsgBox ("Atualização efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
        '==================================
        Modulo = Formulario
        Evento = "Atualizar"
        ID_documento = 0
        Documento = ""
        Documento1 = ""
        ProcGravaEvento
        '==================================
        
        Atualizacao = False
    End With
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub imgCalendario_Click()
End Sub

Public Sub ProcExcluirArquivosRemessa(ID_nota As Long)
On Error GoTo tratar_erro

'Excluir arquivo remessa
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Detalhes_Recebimento WHERE id_nota = " & ID_nota & " and txt_Portador_Banco <> 'Null' and Seq_remessa is not null", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Do While TBAbrir.EOF = False
        If TBAbrir!txt_Portador_Banco <> "" And TBAbrir!Seq_remessa <> "" Then ProcExcluirArquivosRemessa1
        TBAbrir.MoveNext
    Loop
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcExcluirArquivosRemessa1()
On Error GoTo tratar_erro

Dia = Format(TBAbrir!Data_emissao, "dd")
Mes = Format(TBAbrir!Data_emissao, "mm")
Ano = Format(TBAbrir!Data_emissao, "yyyy")
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_Instituicoes where txt_Descricao = '" & TBAbrir!txt_Portador_Banco & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    If IsNull(TBFI!int_NBanco) = False And TBFI!int_NBanco <> "" Then
        Seq1 = TBAbrir!ID
        Select Case TBFI!int_NBanco
            Case "001": 'Banco do brasil
                Arquivo = "CBR" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Banco do brasil"
            Case "033": 'Santander
                Arquivo = "DB" & Dia & Mes & Right(Ano, 2) & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Santander"
            Case "104":
                Arquivo = "CB" & Dia & Mes & "." & Seq1 'Caixa
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Caixa"
            Case "237": 'Bradesco
                Arquivo = "CB" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Bradesco"
            Case "341": 'Itaú
                If TBAbrir!Seq_remessa < 10 Then Seq1 = "0" & TBAbrir!Seq_remessa Else Seq1 = TBAbrir!Seq_remessa
                Arquivo = Dia & Mes & Right(Ano, 2) & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Itaú"
            Case "399": 'HSBC
                Arquivo = "D" & Dia & Mes & Ano & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\HSBC"
            Case "409": 'Unibanco
                Arquivo = "CBR" & Dia & Mes & "." & Seq1
                Diretorio = Localrel & "\Boletos\Arquivos remessa\Unibanco"
        End Select
        TBAbrir!Seq_remessa = Null
        TBAbrir.Update
        Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
        If GerArqPastas.FileExists(Diretorio & "\" & Arquivo & ".txt") = True Then GerArqPastas.DeleteFile (Diretorio & "\" & Arquivo & ".txt")
    End If
End If

tratar_erro:
    If Err.Number = 53 Then Exit Sub
    'usMsgbox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluir()
On Error GoTo tratar_erro

If Excluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If
Permitido = False
If Formulario = "Estoque/Ordem de faturamento" Then
    DocumentoTexto = "ordem(ns) de faturamento"
    DocumentoTexto2 = "Ordem(ns) de faturamento"
Else
    DocumentoTexto = "nota(s) fiscal(ais)"
    DocumentoTexto2 = "Nota(s) fiscal(ais)"
End If
With ListaNota
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If USMsgBox("Deseja realmente excluir esta(s) " & DocumentoTexto & "?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
            End If
            Permitido = True
            Set TBAliquota = CreateObject("adodb.recordset")
            TBAliquota.Open "Select * from tbl_Dados_Nota_Fiscal WHERE ID = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
            If TBAliquota.EOF = False Then
                '==================================
                Modulo = Formulario
                Evento = "Excluir"
                ID_documento = .ListItems(InitFor)
                If IsNull(TBAliquota!int_NotaFiscal) = True Or TBAliquota!int_NotaFiscal = "" Then DocumentoTexto1 = "Nº ordem: " & TBAliquota!ID Else DocumentoTexto1 = "Nº nota: " & TBAliquota!int_NotaFiscal
                Documento = DocumentoTexto1 & " - Tipo: " & TBAliquota!TipoNF & " - Série: " & TBAliquota!Serie
                Documento1 = ""
                ProcGravaEvento
                '==================================
                
                ProcExcluirCST .ListItems(InitFor)
                ProcExcluirArquivosRemessa .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Nota_Fiscal WHERE id = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Nota_Fiscal_nfe WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Totais_Nota WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_NFe WHERE id_nota = " & .ListItems(InitFor)
                
                If TBAliquota!int_TipoNota = 2 Then
                    'Atualiza valor do material/terceiros na ordem
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select NFPP.* from (Compras_pedido_lista P INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON P.IDLista = NFPP.ID_carteira and P.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF where NFPP.ID_nota = " & TBAliquota!ID & " and NFP.Tipo = 'P' and P.Tipo = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                            IDlista = TBProduto!ID_carteira
                            Desenho = TBProduto!Codinterno
                            Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_pedidos WHERE ID = " & TBProduto!ID
                            
                            ProcAtualizaCTMATCTTEROrdemProd IDlista, Desenho
                            TBProduto.MoveNext
                        Loop
                    End If
                    
                    'Atualiza valor do terceiro na OS e ordem
                    Set TBProduto = CreateObject("adodb.recordset")
                    TBProduto.Open "Select NFPP.* from (Compras_pedido_lista P INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON P.IDLista = NFPP.ID_carteira and P.Desenho = NFPP.Codinterno) INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = NFPP.ID_prod_NF where NFPP.ID_nota = " & TBAliquota!ID & " and NFP.Tipo = 'S' and P.Tipo = 'S'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBProduto.EOF = False Then
                        Do While TBProduto.EOF = False
                            IDlista = TBProduto!ID_carteira
                            Desenho = TBProduto!Codinterno
                            Conexao.Execute "DELETE FROM tbl_Detalhes_Nota_pedidos WHERE ID = " & TBProduto!ID
                            
                            ProcAtualizaCTTEROrdemServ IDlista, Desenho
                            TBProduto.MoveNext
                        Loop
                    End If
                    TBProduto.Close
                Else
                    ProcAtualizaDadosPedido .ListItems(InitFor), True
                End If
                
                'Empenho da OF
                Conexao.Execute "DELETE from ECEV from Estoque_Controle_Empenho_Vendas ECEV INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = ECEV.ID_faturamento where NFP.ID_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Detalhes_Nota WHERE ID_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Detalhes_Recebimento WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_Dados_Transp WHERE id_nota = " & .ListItems(InitFor)
                Conexao.Execute "DELETE FROM tbl_DadosAdicionais WHERE id_nota = " & .ListItems(InitFor)
                ProcExcluirContas .ListItems(InitFor), IIf(TBAliquota!int_TipoNota = 1, True, False), TBAliquota!txt_tipocliente
                
                'Despesas importação
                Conexao.Execute "DELETE FROM tbl_ContasPagar WHERE id_nota = " & .ListItems(InitFor) & " and Despesas_NF = 'True'"
                Conexao.Execute "DELETE FROM tbl_proposta_nota WHERE id_nota = " & .ListItems(InitFor)
'======================================================
'Apaga RE do item e Movimentação no estoque
'======================================================
ID_nota = TBAliquota!ID
ApagarMovimentacaoNFe
'======================================================
            End If
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe a(s) " & DocumentoTexto & " antes de excluir."), vbExclamation, "CAPRIND v5.0"
Else
    USMsgBox (DocumentoTexto2 & " excluída(s) com sucesso."), vbInformation, "CAPRIND v5.0"
    ProcLimpaCamposNota
    ListaNota.ListItems.Clear
    ProcCarregaListaNota (1)
    Frame1(6).Enabled = False
    Novo_Nota = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcAtualizaCTTEROrdemServ(IDlista As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select OS from Compras_pedido_lista where IDLista = " & IDlista & " and Desenho = '" & Codinterno & "' and Tipo = 'S' and OS IS NOT NULL and OS <> 0", Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then ProcAtualizaCTTEROrdem TBFIltro!OS
TBFIltro.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcLocalizar()
On Error GoTo tratar_erro

frmEstoque_Ordem_Faturamento_Localizar.Show 1
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcNovo()
On Error GoTo tratar_erro

If Incluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If FunVerifRegimeEmpresa(txtIDEmpresa.Text) = 1 Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Tabela FROM Impostos_TabelaDAS where ID_empresa = " & IDempresa & " and Ativado = 1 group by Tabela", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        USMsgBox ("Não é permitido criar nota fiscal, pois não existe nenhuma tabela do simples nacional ativa."), vbExclamation, "CAPRIND v5.0"
        TBAbrir.Close
        Exit Sub
    End If
    TBAbrir.Close
End If

ProcLimpaCamposNota
'ProcLimparTudo
opt_Ativa = True
Novo_Nota = True

NotaFiscalPronta = False

If Faturamento_NF_Saida = True Then
    With Opt_saida
        .Enabled = True
        .Value = True
    End With
    Opt_entrada.Enabled = True
Else
    'Opt_saida.Enabled = False
    With Opt_entrada
        .Enabled = True
        .Value = True
    End With
End If
Faturamento_Vendas_PI = False
frmfaturamento_Nova_Nota.Show 1
ComPedido = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcLimparTudo()
On Error GoTo tratar_erro

Novo_Nota1 = False
Novo_Nota2 = False
Novo_Nota3 = False
Frame1(9).Enabled = False
Frame1(12).Enabled = False
txtIDProduto = 0
txtidservico = 0
txtCod_Produto.Text = ""
ProcLimpaCamposProd
'listaProdutos.ListItems.Clear
txtcodServ.Text = ""
ProcLimpaCamposServicos
Listaservicos.ListItems.Clear
'ProcLimpaCamposTotaisNota
ProcLimpaCamposTransp
'txtDados_Corpo = ""
'txtDados_DadosAdicionais = ""
'ProcLimpaCamposDuplicata

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcNovoPedido(Cotacao As Long, Pedido_int As Boolean)
On Error GoTo tratar_erro

'Verifica se é originario de uma venda ou uma compra
'=========================================================
'Se for venda
'=========================================================
' Nota de saida
'=========================================================
If Pedido_int = True Then
    NomeTabelaFiltro = "vendas_proposta"
    NomeCampoFiltro = "cotacao"
    NomeTabelaFiltro1 = "clientes"
Else
'=========================================================
'Se for compras
'=========================================================
' Nota de entrada
'=========================================================
    NomeTabelaFiltro = "Compras_pedido"
    NomeCampoFiltro = "IDpedido"
    NomeTabelaFiltro1 = "Compras_fornecedores"
End If

'Filtra cliente ou fornecedor
Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from " & NomeTabelaFiltro & " where " & NomeCampoFiltro & " = " & Cotacao, Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    Set TBClientes = CreateObject("adodb.recordset")
    If Pedido_int = True Then NomeCampoFiltro1 = TBProposta!IDCliente Else NomeCampoFiltro1 = TBProposta!IDFornecedor
    TBClientes.Open "Select * from " & NomeTabelaFiltro1 & " where idcliente = " & NomeCampoFiltro1, Conexao, adOpenKeyset, adLockOptimistic
    If TBClientes.EOF = False Then
        If IsNull(TBClientes!Tipo_endereco) = False And TBClientes!Tipo_endereco <> "" Then
            Endereco = TBClientes!Tipo_endereco & ": " & IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
        Else
            Endereco = IIf(IsNull(TBClientes!Endereco), "", TBClientes!Endereco)
        End If
        txt_Endereco = Endereco
        
        If IsNull(TBClientes!Tipo_bairro) = False And TBClientes!Tipo_bairro <> "" Then
            Bairro = TBClientes!Tipo_bairro & ": " & IIf(IsNull(TBClientes!Bairro), "", TBClientes!Bairro)
        Else
            Bairro = IIf(IsNull(TBClientes!Bairro), "", TBClientes!Bairro)
        End If
        txt_Bairro = Bairro
        
        txt_Municipio = IIf(IsNull(TBClientes!Cidade), "", TBClientes!Cidade)
        txtNumero = IIf(IsNull(TBClientes!Numero), "", TBClientes!Numero)
        Txt_CEP = IIf(IsNull(TBClientes!CEP), "", TBClientes!CEP)
        
        If Pedido_int = True Then
            TabelaSN = IIf(IsNull(TBProposta!TabelaSN), 0, TBProposta!TabelaSN)
            txttipocliente = TBProposta!Tipo_cliente
            If TBClientes!idTipoEmpresa = 1 Then txt_CNPJ_CPF.Text = IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ)
            If TBClientes!Tipo = "JP" Or TBClientes!Tipo = "JR" Then txt_IE.Text = IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE) Else txt_IE = ""
            txt_FoneFAX = IIf(IsNull(TBClientes!Tel01), "", TBClientes!Tel01)
            txt_Razao = IIf(IsNull(TBProposta!Cliente), "", TBProposta!Cliente)
            cbo_UF = IIf(IsNull(TBClientes!UF), "", TBClientes!UF)
        Else
            'NF de remesa
            
            TabelaSN = 0
            
            txttipocliente = Left(TBClientes!Pessoa, 1)
            If TBClientes!Pessoa = "JURÍDICA" Then
                txt_CNPJ_CPF.Text = IIf(IsNull(TBClientes!CPF_CNPJ), "", TBClientes!CPF_CNPJ)
                txt_IE.Text = IIf(IsNull(TBClientes!RG_IE), "", TBClientes!RG_IE)
            Else
                txt_IE = ""
            End If
            txt_FoneFAX = IIf(IsNull(TBClientes!Telefones), "", TBClientes!Telefones)
            txt_Razao = IIf(IsNull(TBProposta!Fornecedor), "", TBProposta!Fornecedor)
            cbo_UF = IIf(IsNull(TBClientes!Estado), "", TBClientes!Estado)
        End If
        'txtIDCliente.Text = ""
        txtIDCliente.Text = IIf(IsNull(TBClientes!IDCliente), "", TBClientes!IDCliente)
        UF = cbo_UF
    End If
    TBClientes.Close
End If
TBProposta.Close
ComPedido = True

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcNovoProduto()
On Error GoTo tratar_erro

If Incluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If FunVerifValidacaoRegistro("criar novo", txtDtValidacao, IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal"), "produto", False) = False Then Exit Sub
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido criar novo, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
txtCod_Produto.Text = ""
txtIDProduto = 0
Novo_Nota1 = True
ProcLimpaCamposProd
Frame1(9).Enabled = True
NFe_liberada = False
ProcBloqueiaNfe
If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcLiberaCamposProd Else ProcBloqueiaCamposProd False
txtCod_Produto.SetFocus

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Procnovoservico()
On Error GoTo tratar_erro

If Incluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
FunVerifAlteracaoNF txtId, True, OptServico
If Permitido1 = False Or Permitido = False Then
    USMsgBox ("Não é permitido criar novo, " & MsgTexto & "."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
txtcodServ.Text = ""
txtidservico = 0
Novo_Nota2 = True
ProcLimpaCamposServicos
Frame1(12).Enabled = True
If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcBloqueiaCamposServ Else ProcBloqueiaCamposServ
txtcodServ.SetFocus

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcSair()
On Error GoTo tratar_erro

If Novo_Nota = True Then
    If USMsgBox("A ordem de faturamento ainda não foi salva, deseja salvar antes de fechar o módulo?", vbYesNo) = vbYes Then
        ProcGravar
        If Novo_Nota = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If Novo_Nota1 = True Then
    If USMsgBox("O produto ainda não foi salvo, deseja salvar antes de fechar o módulo?", vbYesNo) = vbYes Then
        ProcSalvarProduto
        If Novo_Nota1 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If Novo_Nota2 = True Then
    If USMsgBox("O serviço ainda não foi salvo, deseja salvar antes de fechar o módulo?", vbYesNo) = vbYes Then
        ProcSalvarServico
        If Novo_Nota2 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
If txtNFiscal <> "" And txtDtValidacao <> "" And Novo_Nota3 = True Then
    If USMsgBox("A duplicata ainda não foi enviada para o financeiro, deseja enviar antes de fechar o módulo?", vbYesNo) = vbYes Then
        ProcEnviarDupFinanceiro IIf(txtId = "", 0, txtId), True
        If Novo_Nota3 = True Then
            Exit Sub
        Else
            Unload Me
        End If
    End If
End If
Novo_Nota = False
Novo_Nota1 = False
Novo_Nota2 = False
Novo_Nota3 = False
TotalContas = 0
TotContas = 0
Strsql_Faturamento = ""
Formulario_nota = ""
Unload Me

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcGravar()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If Frame1(6).Enabled = False Then
    ProcVerificaSalvar
    Exit Sub
End If

If NF_enviada = True And OptServico = True And opt_Ativa.Value = True Then
ProcGravarTotaisNota
    USMsgBox ("Não é possivel salvar, pois a nota já foi enviada."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If opt_Ativa.Value = False And NF_cancelada = True Then
    USMsgBox ("Não é permitido salvar, pois a nota já foi cancelada."), vbExclamation, "CAPRIND v5.0"
    ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
    Exit Sub
End If

If FunChecaCampos = False Then Exit Sub

If Formulario <> "Estoque/Ordem de faturamento" Then
    If Novo_Nota = True Then
        If FunVerificaNumeroNF = False Then Exit Sub
    Else
        If FunVerificaNumeroNFAlterar = False Then Exit Sub
    End If
End If

GerarOF = False
ProcVerificaTipoNF False

'===============================================================================
' Salva a ordem de faturamento
'===============================================================================
ProcSalvar TipoNF, Status_nota, txtIDEmpresa.Text

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcSalvar(TipoNF As String, Status_nota As Integer, ID_empresa As Long)
On Error GoTo tratar_erro

Permitido2 = False
Set TBproducao = CreateObject("adodb.recordset")
TBproducao.Open "Select * from tbl_dados_nota_fiscal where id = " & IIf(txtId = "", 0, txtId), Conexao, adOpenKeyset, adLockOptimistic
If TBproducao.EOF = True Then
    TBproducao.AddNew
    TBproducao!Imprimir = False
    If txtNFiscal <> "" Then
        TBproducao!DtValidacaoOF = Now
        TBproducao!RespValidacaoOF = pubUsuario
    End If
    If Faturamento_NF_Saida = True And IsDate(Txt_hora_emissao) = True Then TBproducao!Hora_emissao = Txt_hora_emissao
    TBproducao!TabelaSN = TabelaSN
    TBproducao!Regime = RegimeEmpresa
Else
    If opt_Ativa.Value = True And TBproducao!Int_status = 1 Then
        If FunVerifValidacaoRegistro("alterar", txtDtValidacao, "mesma", IIf(txtNFiscal = "", "a ordem de faturamento", "a nota fiscal"), False) = False Then Exit Sub
    End If
       
    'Verifica se a nota fiscal já foi cancelada no SEFAZ e não permite mudar o status
    If Formulario <> "Estoque/Ordem de faturamento" And opt_Ativa.Value = True And TBproducao!Int_status = 2 Then
        OF = TBproducao!int_NotaFiscal
        Set TBGravar_NFe = CreateObject("adodb.recordset")
        TBGravar_NFe.Open "Select * from tbl_dados_nota_fiscal_NFe where id_nota = " & TBproducao!ID & " and Status = 101", Conexao, adOpenKeyset, adLockReadOnly
        If TBGravar_NFe.EOF = False Then
            USMsgBox ("Não é permitido alterar os dados desta nota, pois a mesma já foi cancelada no SEFAZ."), vbExclamation, "CAPRIND v5.0"
            opt_Cancelada.Value = True
            TBGravar_NFe.Close
            Exit Sub
        End If
        TBGravar_NFe.Close
    End If
    
    'Verifica se a NF é complementar e já possui relacionamento, se sim, não deixa alterar a finalidade
    Set TBGravar_NFe = CreateObject("adodb.recordset")
    TBGravar_NFe.Open "Select ID from tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & txtId & " and Finalidade_emissao = 2", Conexao, adOpenKeyset, adLockOptimistic
    If TBGravar_NFe.EOF = False And Left(cmbFinalidade_emissao, 1) <> 2 Then
        Set TBGravar_NFe = CreateObject("adodb.recordset")
        TBGravar_NFe.Open "Select ID from Faturamento_Relacionamento where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
        If TBGravar_NFe.EOF = False Then
            USMsgBox ("Não é permitido alterar a finalidade de emissão desta " & IIf(txtNFiscal = "", "ordem de faturamento", "nota fiscal") & ", pois a mesma já possui relacionamento."), vbExclamation, "CAPRIND v5.0"
            TBGravar_NFe.Close
            Exit Sub
        End If
    End If
    TBGravar_NFe.Close
            
    If opt_Cancelada.Value = True And TBproducao!Int_status = 1 Then
        Set TBUsuarios = CreateObject("adodb.recordset")
        TBUsuarios.Open "Select usuarios.* from usuarios INNER JOIN acessos ON usuarios.IDUsuario = Acessos.IDUsuario where usuarios.usuario = '" & pubUsuario & "' and Acessos.Acesso = 'Faturamento/Nota fiscal/Cancelar nota'", Conexao, adOpenKeyset, adLockOptimistic
        If TBUsuarios.EOF = True Then
            Sit_REG = 1
            frmFaturamento_Prod_serv_excluir_dup_aut.Show 1
        End If
    End If
        
    If Formulario <> "Estoque/Ordem de faturamento" And TBproducao!int_NotaFiscal <> txtNFiscal Or TBproducao!int_NotaFiscal = txtNFiscal And TBproducao!dt_DataEmissao <> txt_DtEmissao Then
        If Faturamento_NF_Saida = False Then
            Conexao.Execute "Update ECR set ECR.Nota_fiscal = '" & txtNFiscal & "', ECR.Data_emissao = '" & txt_DtEmissao & "' from (Estoque_controle_recebimento ECR INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & txtId & " where ECR.Nota_fiscal = '" & TBproducao!int_NotaFiscal & "'"
            Conexao.Execute "Update EC set EC.nf = '" & txtNFiscal & "' from (((Estoque_controle EC INNER JOIN Estoque_movimentacao EM ON EM.IDestoque = EC.IDestoque) INNER JOIN Estoque_controle_recebimento ECR ON ECR.ID = EM.IDEstoque_recebimento) INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & txtId & " where EC.nf = '" & TBproducao!int_NotaFiscal & "'"
            Conexao.Execute "Update EM set EM.Documento = '" & txtNFiscal & "', EM.Dtemissao = '" & txt_DtEmissao & "' from ((Estoque_movimentacao EM INNER JOIN Estoque_controle_recebimento ECR ON ECR.ID = EM.IDEstoque_recebimento) INNER JOIN Compras_pedido CP ON CP.IDpedido = ECR.IDPedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.ID_nota = " & txtId & " where EM.Documento = '" & TBproducao!int_NotaFiscal & "'"
        End If
        Conexao.Execute "Update tbl_contas_receber Set NFiscal = '" & txtNFiscal & "' where NFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Dados_Transp Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update Tbl_DadosAdicionais Set IDNotaFiscal = '" & txtNFiscal & "' where IDNotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Detalhes_Nota Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Detalhes_Recebimento Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_proposta_nota Set NF = '" & txtNFiscal & "' where NF = '" & TBproducao!int_NotaFiscal & "'"
        Conexao.Execute "Update tbl_Totais_Nota Set int_NotaFiscal = '" & txtNFiscal & "' where int_NotaFiscal = '" & TBproducao!int_NotaFiscal & "'"
    End If
End If

If txt_EntSai <> "__/__/____" Then TBproducao!dt_Saida_Entrada = txt_EntSai Else TBproducao!dt_Saida_Entrada = Null
If mskHoraSaida <> "__:__:__" Then
    If IsDate(mskHoraSaida) = True Then TBproducao!txt_Hora_Saida = mskHoraSaida
Else
    TBproducao!txt_Hora_Saida = Null
End If


ProcVerifDupEnviadaFinanceiro IIf(txtId = "", 0, txtId)
If NF_enviada = False And Permitido = True Then
    If txtIDCliente <> "" Then
        TBproducao!Id_Int_Cliente = txtIDCliente
    Else
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select IDCliente from clientes where nomerazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            TBproducao!Id_Int_Cliente = TBClientes!IDCliente
        Else
            Set TBFornecedor = CreateObject("adodb.recordset")
            TBFornecedor.Open "Select IDCliente from Compras_fornecedores where Nome_Razao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBFornecedor.EOF = False Then
                TBproducao!Id_Int_Cliente = TBFornecedor!IDCliente
            Else
                TBproducao!Id_Int_Cliente = 0
            End If
            TBFornecedor.Close
        End If
        TBClientes.Close
    End If
    TBproducao!Modelo = Left(Cmb_modelo, 2)
    TBproducao!int_NotaFiscal = IIf(txtNFiscal = "", Null, FunTamanhoTextoZeroEsq(ReturnNumbersOnly(txtNFiscal), 9))
    TBproducao!Serie = IIf(txtserie = "", Null, txtserie)
    TBproducao!TipoNF = TipoNF
    
    If Opt_saida.Value = True Then
        TBproducao!int_TipoNota = 1
    Else
        TBproducao!int_TipoNota = 2
    End If
    
    TBproducao!txt_Inscr_Substituto = txt_IEST
    TBproducao!txt_Razao_Nome = Trim(txt_Razao)
    If cbo_UF = "EX" Then
        Set TBClientes = CreateObject("adodb.recordset")
        TBClientes.Open "Select CPF_CNPJ, complemento from clientes where IDcliente = " & txtIDCliente & " and nomerazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBClientes.EOF = False Then
            TBproducao!txt_CNPJ_CPF = Trim(TBClientes!CPF_CNPJ)
        Else
            Set TBClientes = CreateObject("adodb.recordset")
            TBClientes.Open "Select CPF_CNPJ from Compras_fornecedores where IDcliente = " & txtIDCliente & " and Nome_Razao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBClientes.EOF = False Then
                TBproducao!txt_CNPJ_CPF = Trim(TBClientes!CPF_CNPJ)
            End If
        End If
        TBClientes.Close
    Else
        TBproducao!txt_CNPJ_CPF = Trim(txt_CNPJ_CPF)
    End If
    
    TBproducao!Numero = Trim(txtNumero)
    TBproducao!ID_empresa = ID_empresa
    TBproducao!dt_DataEmissao = txt_DtEmissao.Text
    
    If Txt_hora_emissao <> "__:__:__" Then
        If IsDate(Txt_hora_emissao) = True Then TBproducao!Hora_emissao = Txt_hora_emissao
    Else
        TBproducao!Hora_emissao = Null
    End If
    
    TBproducao!txt_Endereco = Trim(txt_Endereco)
    TBproducao!txt_Bairro = Trim(txt_Bairro)
    TBproducao!Txt_CEP = Trim(Txt_CEP)
    TBproducao!txt_Municipio = Trim(txt_Municipio)
    TBproducao!txt_UF = Trim(cbo_UF)
    TBproducao!txt_IE_Cliente = Trim(txt_IE)
    If Novo_Nota = True Then
        If OutraMoeda = True Then
            TBproducao!Moeda = Moeda
            TBproducao!ValorMoeda = ValorMoeda
        Else
            TBproducao!Moeda = "REAL"
            TBproducao!ValorMoeda = "1"
        End If
    End If
    
    'Ativa ou cancelada
    TBproducao!Int_status = IIf(opt_Ativa.Value = True, 1, 0)
    ProcStatusnota
   
    TBproducao!txt_tipocliente = txttipocliente.Text
    TBproducao!Aplicacao = Aplicacao
    If Faturamento_PI = True Then TBproducao!pedido_interno = True Else TBproducao!pedido_interno = False
    TBproducao!Obs = Texto_Cancelamento

Else
    TBproducao!Obs = Texto_Cancelamento

    ProcStatusnota
    TBproducao!Int_status = Status_nota
    TBproducao!Serie = IIf(txtserie = "", Null, txtserie)
End If
TBproducao!txt_Fone_Fax = txt_FoneFAX.Text
TBproducao.Update
txtId = TBproducao!ID
ProcAtualizaDadosPedido txtId, False

'============================================================
' Grava os dados de envio da NFe
'============================================================
Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then
    TBGravar.AddNew
    TBGravar!ID_nota = txtId
    TBGravar!status = Null
End If
If Faturamento_NF_Saida = False Then TBGravar!Chave_acesso = Txt_chave_acesso
If cmbFinalidade_emissao <> "" Then TBGravar!Finalidade_emissao = Left(cmbFinalidade_emissao, 1) Else TBGravar!Finalidade_emissao = "1"
If Cmb_consumidor <> "" Then TBGravar!Consumidor_final = Left(Cmb_consumidor, 1) Else TBGravar!Consumidor_final = "1"
If cmbEntrega <> "" Then TBGravar!ID_entrega = cmbEntrega.ItemData(cmbEntrega.ListIndex)

'============================================================
' Grava os Dados de transporte
'============================================================
If TipoNF <> "SA" And IsNumeric(Var) = True Then
ProcSalvarTransporte
End If

TBGravar.Update
'============================================================
' Grava os totais da ordem de faturamento
'============================================================
Set TBGravar = CreateObject("adodb.recordset")
TBGravar.Open "Select * from tbl_Totais_Nota where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBGravar.EOF = True Then
    TBGravar.AddNew
    TBGravar!ID_nota = txtId
    TBGravar!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    ProcVerifImpostosEmpresa IDempresa, False, "", False, 0, False, TabelaSN, Lbl2.Caption
    TBGravar!DAS = DAS
    TBGravar.Update
End If
TBGravar.Close

If txtNFiscal = "" Then
    NomeCampo = "ordem de faturamento"
    NomeCampo1 = "N° ordem: " & txtId
Else
    NomeCampo = "nota fiscal"
    NomeCampo1 = "N° nota: " & txtNFiscal
End If
If Novo_Nota = True Then
    'Grava dados adicionais
'    If txtDados_DadosAdicionais <> "" Then
'        Set TBCiclo = CreateObject("adodb.recordset")
'        TBCiclo.Open "Select * from tbl_dadosadicionais where id_nota = " & txtid, Conexao, adOpenKeyset, adLockOptimistic
'        If TBCiclo.EOF = True Then TBCiclo.AddNew
'        TBCiclo!ID_nota = txtid
'        TBCiclo!mem_DadosAdicionais = Trim(txtDados_DadosAdicionais)
'        TBCiclo.Update
'        TBCiclo.Close
'    End If
    
    If GerarOF = False Then USMsgBox ("Nova " & NomeCampo & " cadastrada com sucesso."), vbInformation, "CAPRIND v5.0"
    Evento = "Novo"
    If txtNFiscal = "" Then
        TextoFiltroVal = "and NF.DtValidacao IS NULL"
        OrdenarFiltro = "order by NF.ID"
    Else
        TextoFiltroVal = "and NF.DtValidacaoOF IS NOT NULL"
        OrdenarFiltro = "order by NNF desc"
    End If
    CamposFiltro = "NF.ID, NF.dt_DataEmissao, NF.dt_Saida_Entrada, NF.int_NotaFiscal, NF.TipoNF, NF.Serie, TN.dbl_Valor_Total_Nota, NF.txt_Razao_Nome, NF.Int_status, NF.Imprimir, NF.ID_empresa, NF.Aplicacao, NF.DtValidacaoOF, NF.DtValidacao, NF.RPS"
    Strsql_Faturamento = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId
    Strsql_FaturamentoTotal = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor1, Sum(TN.Valor_Total_Receber_Pagar) as Valor2 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId & " and NF.Int_status = 1"
    Strsql_FaturamentoTotalCanc = "Select Sum(TN.dbl_Valor_Total_Nota) as Valor3 from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.ID = " & txtId & " and NF.Int_status = 2"
    Strsql_FaturamentoNFe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF <> 'SA' AND NF.ID = " & txtId
    Strsql_FaturamentoNFSe = "Select " & CamposFiltro & " from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Totais_Nota TN ON NF.ID = TN.ID_Nota where NF.TipoNF = 'SA' AND NF.ID = " & txtId
    ProcCarregaListaNota (1)
Else

If NotaFiscalPronta = False Then
    Set TBProduto = CreateObject("adodb.recordset")
    TBProduto.Open "Select NFP.Int_codigo, NFP.Tem_IPI_frete, NFP.ID_CF, NFP.ID_CFOP, NFP.dbl_ValorTotal, NFP.Valor_desconto, NFP.Valor_frete, NFP.int_ICMS, NFP.ICMS_SN, NFP.dbl_ValorIPI, NFP.NaoArredondar, NFP.txt_CST, NFP.CST_IPI, NFP.CST_PIS, NFP.CST_Cofins, NFP.dbl_ValorUnitario, NFP.int_Qtd, NFP.Valor_seguro, NFP.Valor_acessorias, NFP.VlrMPA, TN.Total_DAS from tbl_Detalhes_Nota NFP INNER JOIN tbl_Totais_Nota TN ON TN.ID_nota = NFP.ID_nota where NFP.id_nota = " & txtId.Text & " and NFP.Remessa = 'False' and NFP.Retorno = 'False' and NFP.Tipo = 'P' order by NFP.int_codigo", Conexao, adOpenKeyset, adLockOptimistic
    If TBProduto.EOF = False Then
        Do While TBProduto.EOF = False
            ProcRecalculaICMS
            TBProduto.MoveNext
        Loop
        ProcCarregaLista
        ProcGravarTotaisNota
    End If
End If

    USMsgBox ("Alteração efetuada com sucesso."), vbInformation, "CAPRIND v5.0"
    Evento = "Alterar"
    ProcCarregaListaNota (IIf(ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5)) <= 1, 1, ReturnNumbersOnly(Left(lblPaginas(1).Caption, Len(lblPaginas(1).Caption) - 5))))
    If CodigoLista <> 0 And ListaNota.ListItems.Count <> 0 Then
        ListaNota.SelectedItem = ListaNota.ListItems(CodigoLista)
        ListaNota.SetFocus
    End If
End If
1:
    '==================================
    Modulo = Formulario
    ID_documento = txtId
    ProcVerificaTipoNF False
    Documento = NomeCampo1 & " - Tipo: " & TipoNF & " - Série: " & txtserie
    Documento1 = ""
    ProcGravaEvento
    '==================================
    NF = txtNFiscal
    Novo_Nota = False
    ProcCarregaDadosNota IIf(txtId = "", 0, txtId)
    ProcCarregaLista

Exit Sub
tratar_erro:
    If Err.Number = "35600" Then GoTo 1
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcGravarTotaisNota()
On Error GoTo tratar_erro

If txtId = "" Then Exit Sub

'==========================================================================================
'Se não for nota importada do recebimento do pedido de compras
'==========================================================================================
If NF_Recebimento = False Then
  FunVerifAlteracaoNF txtId, True, OptServico
  'If Permitido1 = True And Permitido = True And NF_alterada = False Or Atualizacao = True And NF_alterada = False Or AtualizaImpSN = True And NF_alterada = False Then
   If Permitido1 = False And Permitido = False And NF_alterada = True Or Atualizacao = False And NF_alterada = True Or AtualizaImpSN = False And NF_alterada = True Then
    Exit Sub
   End If
End If
       
    TotalProduto = IIf(txt_VlrTotalProd = "", 0, txt_VlrTotalProd)
    TotalServicos = IIf(txtTotalservicos = "", 0, txtTotalservicos)
    Set TBTotaisnota = CreateObject("adodb.recordset")
    TBTotaisnota.Open "Select * from tbl_totais_nota where id_Nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
    
    If TBTotaisnota.EOF = True Then
    TBTotaisnota.AddNew
    End If
    
    TBTotaisnota!int_NotaFiscal = IIf(txtNFiscal = "", Null, txtNFiscal)
    If txtId.Text <> "" Then TBTotaisnota!ID_nota = txtId.Text
    TBTotaisnota!dbl_Valor_Total_Produtos = IIf(txt_VlrTotalProd = "", 0, Format(txt_VlrTotalProd, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Total_Nota_Serv = IIf(txtTotalservicos = "", 0, Format(txtTotalservicos, "###,##0.00"))
    TBTotaisnota!Qtde_total_serv = qtdeliberada 'Qtde. serviços
    TBTotaisnota!Qtde_total_prod = qtdeliberar 'Qtde. produtos
    TBTotaisnota!VlrMPA = IIf(txtVLRMPA = "", 0, Format(txtVLRMPA, "###,##0.00"))
    
    TBTotaisnota!Valor_total_desconto_SUFRAMA = Format(VlrICMS_suframa, "###,##0.00")
    
    If NF_alterada = False And ListaProdutos.ListItems.Count <> 0 Then
        ProcCalculaTotaisProduto
    Else
        txt_VlrFrete = "0,00"
        txt_vlrSeguro = "0,00"
        txt_OutrasDisp = "0,00"
        Txt_valor_total_desc = "0,00"
        
        txt_TotalIPI = "0,00"
        txt_BaseICMS = "0,00"
        txt_VlrICMS = "0,00"
        txt_baseICMSs = "0,00"
        txt_ICMSs = "0,00"
    End If
            
    TBTotaisnota!dbl_Base_ICMS = IIf(txt_BaseICMS = "", 0, Format(txt_BaseICMS, "###,##0.00"))
    TBTotaisnota!dbl_Valor_ICMS = IIf(txt_VlrICMS = "", 0, Format(txt_VlrICMS, "###,##0.00"))
    TBTotaisnota!dbl_Base_ICMS_Subst = IIf(txt_baseICMSs = "", 0, Format(txt_baseICMSs, "###,##0.00"))
    TBTotaisnota!dbl_Valor_ICMS_Subst = IIf(txt_ICMSs = "", 0, Format(txt_ICMSs, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Frete = IIf(txt_VlrFrete = "", 0, Format(txt_VlrFrete, "###,##0.00"))
    TBTotaisnota!dbl_Valor_Seguro = IIf(txt_vlrSeguro = "", 0, Format(txt_vlrSeguro, "###,##0.00"))
    TBTotaisnota!dbl_Desp_Adicionais = IIf(txt_OutrasDisp = "", 0, Format(txt_OutrasDisp, "###,##0.00"))
    
    If NotaFiscalPronta = False Then
    TBTotaisnota!dbl_Valor_Total_IPI = IIf(txt_TotalIPI = "", 0, Format(txt_TotalIPI, "###,##0.00"))
    End If
    
    TBTotaisnota!Valor_total_desconto = IIf(Txt_valor_total_desc = "", 0, Format(Txt_valor_total_desc, "###,##0.00"))
    
    'Impostos produtos
    TBTotaisnota!Total_PIS_prod = Format(Valor_PIS_Prod, "###,##0.00")
    TBTotaisnota!Total_Cofins_prod = Format(Valor_Cofins_Prod, "###,##0.00")
    TBTotaisnota!Total_CSLL_prod = Format(Valor_CSLL_Prod, "###,##0.00")
    TBTotaisnota!Total_IRPJ_prod = Format(Valor_IRPJ_Prod, "###,##0.00")
    
    'Impostos serviços
    TBTotaisnota!Total_PIS_serv = Format(Valor_PIS_Serv, "###,##0.00")
    TBTotaisnota!Total_Cofins_serv = Format(Valor_Cofins_Serv, "###,##0.00")
    TBTotaisnota!Total_CSLL_serv = Format(Valor_CSLL_Serv, "###,##0.00")
    TBTotaisnota!dbl_valor_total_iss = Format(TotalISS, "###,##0.00")
    TBTotaisnota!Total_INSS_serv = Format(Valor_INSS_Serv, "###,##0.00")
    TBTotaisnota!Total_IRPJ_serv = Format(Valor_IRPJ_Serv, "###,##0.00")
    TBTotaisnota!Total_IRRF_serv = Format(Valor_IRRF_Serv, "###,##0.00")
'=========================================================================================================
'    txt_ValorNota.Text = Format(((TotalProduto + IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) + IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) + TotalIPI + TotalICMSCST + TotalServicos) + IIf(txt_VlrFrete.Text = "", 0, txt_VlrFrete.Text)) - VlrICMS_suframa, "###,##0.00")
    txt_ValorNota.Text = Format(((TotalProduto + IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) + IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) + TotalIPI + TotalICMSCST + TotalServicos) + IIf(txt_VlrFrete.Text = "", 0, txt_VlrFrete.Text)) - IIf(Txt_valor_total_desc = "", 0, Txt_valor_total_desc) - VlrICMS_suframa, "###,##0.00")
'     txt_ValorNota.Text = Format(((TotalProduto + IIf(txt_vlrSeguro = "", 0, txt_vlrSeguro) + IIf(txt_OutrasDisp = "", 0, txt_OutrasDisp) + TotalIPI + TotalICMSCST + TotalServicos)) - IIf(Txt_valor_total_desc = "", 0, Txt_valor_total_desc) - VlrICMS_suframa, "###,##0.00")
'=========================================================================================================
    'Impostos faturamento
    TBTotaisnota!Total_DAS = Format(Valor_DAS + Valor_DAS_Serv, "###,##0.00")
    
    'Retenção de PIS/Cofins
    TBTotaisnota!Total_retencao_PIS = Format(Valor_Retencao_PIS, "###,##0.00")
    TBTotaisnota!Total_retencao_Cofins = Format(Valor_Retencao_Cofins, "###,##0.00")
    
    'Crédito de ICMS
    TBTotaisnota!Total_Credito_ICMS = Credito_ICMS
    
    If txt_ValorNota.Text <> "" Then
        TBTotaisnota!dbl_Valor_Total_Nota = Format(txt_ValorNota.Text, "###,##0.00")
        
        'Valor total de ICMS simples nacional
        ProcCalculaICMSSN
        TBTotaisnota!Valor_total_ICMS_SN = Format(txtValorICMSSN, "###,##0.00")
        
        'Atualiza serie e valor total da nf na tabela Estoque_controle_recebimento
        If Opt_entrada.Value = True Then
            ValoresParcelas = txt_ValorNota
            NovoValor = Replace(ValoresParcelas, ",", ".")
            Conexao.Execute "Update Estoque_controle_recebimento Set Serie = '" & txtserie & "', Total_Nf = " & NovoValor & " where Nota_fiscal = '" & txtNFiscal & "'"
        End If
    End If

    TBTotaisnota!Valor_total_Extenso = FunValorExtenso(TBTotaisnota!dbl_Valor_Total_Nota)
    TBTotaisnota!Total_retorno = Format(VlrTotalRetorno, "###,##0.00")
    TBTotaisnota!Valor_total_aprox_tributos = Format(Vlr_total_aprox_tributos_prod + Vlr_total_aprox_tributos_serv, "###,##0.00")
    'TBTotaisnota!Valor_total_ICMS_desonerado = Format(ValorICMS_desonerado, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_FCP = Format(ValorTotalFCP, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_INT_UF_dest = Format(ValorTotalICMSINTUFDEST, "###,##0.00")
    TBTotaisnota!Valor_total_ICMS_INT_UF_rem = Format(ValorTotalICMSINTUFREM, "###,##0.00")
    
    TBTotaisnota.Update
    TBTotaisnota.Close
'End If
NF_Recebimento = False

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ListaNota_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With ListaNota
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If Cmb_opcao_lista = "Excluir" Then
                    If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & .ListItems(InitFor), True) = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    
                    Set TBVendas = CreateObject("adodb.recordset")
                    TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                    If TBVendas.EOF = False Then
                        'Status da NF
                        If TBVendas!Int_status = 1 Then NF_cancelada = False Else NF_cancelada = True
                        'NF impressa
                        If TBVendas!Imprimir = True Then NF_enviada = True Else NF_enviada = False
                        
                        'NFe liberada
                        NFe_liberada = False
                        If TBVendas!Aplicacao = "P" Then
                            Set TBAbrir = CreateObject("adodb.recordset")
                            TBAbrir.Open "Select * From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                            If TBAbrir.EOF = False Then
                                If TBAbrir!status = 100 Or TBAbrir!status = 101 Then NFe_liberada = True
                            End If
                            TBAbrir.Close
                        End If
                        
                        'NF alterada (totalização)
                        If TBVendas!Alterar = True Then NF_alterada = True Else NF_alterada = False
                                    
                        FunVerifAlteracaoNF .ListItems(InitFor), True, IIf(.ListItems(InitFor).ListSubItems(4) = "Serviço(s)", True, False)
                        If Permitido1 = False Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                    End If
                    TBVendas.Close
                    
                    If Opt_saida.Value = True Then
                        ProcVerificaRegistroUtilizadoSemMsg "tbl_contas_receber", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'"
                    Else
                        ProcVerificaRegistroUtilizadoSemMsg "tbl_ContasPagar", "ID_Nota = " & .ListItems(InitFor) & " and LogSit = 'S'"
                    End If
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    ProcVerificaRegistroUtilizadoSemMsg "Faturamento_Relacionamento", "Id_nota = " & .ListItems(InitFor) & " or ID_nota_relacionada = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    If Formulario = "Faturamento/Nota fiscal/Própria" And .ListItems(InitFor).ListSubItems(3) = "" Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                ElseIf Cmb_opcao_lista = "Validação" Then
                        If Formulario = "Estoque/Ordem de faturamento" Then
                            If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select ID From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    .ListItems.Item(InitFor).Checked = False
                                    TBVendas.Close
                                    GoTo Proximo
                                End If
                                TBVendas.Close
                            End If
                        Else
                            If .ListItems(InitFor).ListSubItems(3) <> "" Then
                                'NFe liberada
                                Set TBVendas = CreateObject("adodb.recordset")
                                TBVendas.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & .ListItems(InitFor) & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockOptimistic
                                If TBVendas.EOF = False Then
                                    Set TBAbrir = CreateObject("adodb.recordset")
                                    TBAbrir.Open "Select Status From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBAbrir.EOF = False Then
                                        If IsNull(TBAbrir!status) = False And TBAbrir!status <> "" Then
                                            .ListItems.Item(InitFor).Checked = False
                                            GoTo Proximo
                                        End If
                                    End If
                                    TBAbrir.Close
                                End If
                                TBVendas.Close

                                If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                                    Set TBEstoque = CreateObject("adodb.recordset")
                                    TBEstoque.Open "Select NF.ID from (tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NF.ID = NFP.ID_nota) INNER JOIN Estoque_movimentacao EM ON EM.ID_prod_NF = NFP.Int_codigo where NF.ID = " & .ListItems(InitFor) & " and NF.Aplicacao = 'P' and EM.Documento = '" & .ListItems(InitFor).ListSubItems(3) & "' and (EM.Operacao = 'SAIDA_NOTA' or EM.Operacao = 'SAIDA_NOTA_PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
                                    If TBEstoque.EOF = False Then
                                        TBEstoque.Close
                                        .ListItems.Item(InitFor).Checked = False
                                        GoTo Proximo
                                    End If
                                    TBEstoque.Close
                                    
                                    If VerificaContaBaixada(.ListItems(InitFor), "cancelar a validação", False) = True Then
                                        .ListItems.Item(InitFor).Checked = False
                                        GoTo Proximo
                                    End If
                                Else
                                    Set TBAbrir = CreateObject("adodb.recordset")
                                    TBAbrir.Open "Select NF.ID_empresa, NF.dt_Saida_Entrada, NF.Modelo, NF.TabelaSN, NF.Aplicacao, E.Simples, E.Simples1 From tbl_Dados_Nota_Fiscal NF INNER JOIN Empresa E ON E.Codigo = NF.ID_empresa where NF.id = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                    If TBAbrir.EOF = False Then
                                        If TBAbrir!Aplicacao = "P" Then
                                            If TBAbrir!Simples = True And (IsNull(TBAbrir!TabelaSN) = True Or TBAbrir!TabelaSN = 0) Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            End If
                                        Else
                                            If IsNull(TBAbrir!dt_Saida_Entrada) = True Or TBAbrir!dt_Saida_Entrada = "" Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            End If
                                            Set TBVendas = CreateObject("adodb.recordset")
                                            TBVendas.Open "Select Finalidade_emissao, Chave_acesso From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                            If TBVendas.EOF = True Then
                                                .ListItems.Item(InitFor).Checked = False
                                                GoTo Proximo
                                            Else
                                                If IsNull(TBVendas!Finalidade_emissao) = True Or TBVendas!Finalidade_emissao = "" Or (Left(TBAbrir!Modelo, 2) = "55" Or Left(TBAbrir!Modelo, 2) = "57") And (IsNull(TBVendas!Chave_acesso) = True Or TBVendas!Chave_acesso = "") Then
                                                    .ListItems.Item(InitFor).Checked = False
                                                    GoTo Proximo
                                                End If
                                            End If
                                        End If
                                        Set TBVendas = CreateObject("adodb.recordset")
                                        TBVendas.Open "Select ID_CFOP, Tipo, ID_CF, txt_CST, CST_IPI, CST_PIS, CST_Cofins, N_Referencia, dbl_ValorUnitario From tbl_Detalhes_Nota where ID_nota = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                                        If TBVendas.EOF = False Then
                                            Do While TBVendas.EOF = False
                                                If IsNull(TBVendas!ID_CFOP) = True Or TBVendas!ID_CFOP = "" Or TBVendas!ID_CFOP = "0" Then
                                                    .ListItems.Item(InitFor).Checked = False
                                                    GoTo Proximo
                                                End If
                                                If TBVendas!Tipo = "P" Then
                                                    If IsNull(TBVendas!ID_CF) = True Or TBVendas!ID_CF = "" Or TBVendas!ID_CF = "0" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!txt_CST) = True Or TBVendas!txt_CST = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_IPI) = True Or TBVendas!CST_IPI = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_PIS) = True Or TBVendas!CST_PIS = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                    If IsNull(TBVendas!CST_Cofins) = True Or TBVendas!CST_Cofins = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                Set TBFI = CreateObject("adodb.recordset")
                                                TBFI.Open "Select ID From tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & .ListItems(InitFor) & " and (Finalidade_emissao = 1 or Finalidade_emissao = 4)", Conexao, adOpenKeyset, adLockOptimistic
                                                If TBFI.EOF = False Then
                                                    If TBVendas!Tipo = "P" And TBVendas!dbl_ValorUnitario = 0 Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        TBFI.Close
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                TBFI.Close
                                                
                                                If FunVerifCodRefFornSPED(TBAbrir!ID_empresa) = True Then
                                                    If IsNull(TBVendas!N_referencia) = True Or TBVendas!N_referencia = "" Then
                                                        .ListItems.Item(InitFor).Checked = False
                                                        GoTo Proximo
                                                    End If
                                                End If
                                                TBVendas.MoveNext
                                            Loop
                                        End If
                                        TBVendas.Close
                                    End If
                                    TBAbrir.Close
                                    
                                End If
                            End If
                            
                            'Não deixar validar se tiver transportadora sem frete
'                            Set TBVendas = CreateObject("adodb.recordset")
'                            TBVendas.Open "Select * From tbl_dados_transp where id_nota = " & .ListItems(InitFor) & " and txt_Frete_Conta IS NULL", Conexao, adOpenKeyset, adLockOptimistic
'                            If TBVendas.EOF = False Then
'                                .ListItems.Item(InitFor).Checked = False
'                                GoTo Proximo
'                            End If
'                            TBVendas.Close
                        End If
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView ListaNota, ColumnHeader
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ListaNota_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro
If ListaNota.ListItems.Count = 0 Then Exit Sub
ProcLimpaCamposNota
txtId.Text = ListaNota.SelectedItem
FunChecaNota (txtId.Text)
ProcCarregaDadosNota IIf(txtId = "", 0, txtId)

If opt_Cancelada.Value = True Then
StrSql = "Update tbl_Dados_Nota_Fiscal Set int_status = '2' Where ID = '" & txtId.Text & "'"
Conexao.Execute StrSql
End If

CodigoLista = ListaNota.SelectedItem.index
ID_empresa = IDempresa
ID_nota = ListaNota.SelectedItem

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunChecaCampos() As Boolean
On Error GoTo tratar_erro

FunChecaCampos = True
Acao = "salvar"
If txtempresa.Text = "" Then
    NomeCampo = "a empresa"
    ProcVerificaAcao
    'Cmb_empresa.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Cmb_modelo = "" Then
    NomeCampo = "o modelo"
    ProcVerificaAcao
    Cmb_modelo.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = False And txtNFiscal = "" Then
    NomeCampo = "o número da nota fiscal"
    ProcVerificaAcao
    txtNFiscal.SetFocus
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = True And txtNFiscal <> "" Then
    IDlista = txtNFiscal
    If IDlista = 0 Then
        NomeCampo = "o número da nota fiscal"
        ProcVerificaAcao
        txtNFiscal.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
End If
If txtNFiscal <> "" And txtserie = "" Or Faturamento_NF_Saida = False And txtserie = "" Then
    NomeCampo = "a série"
    ProcVerificaAcao
    With txtserie
        If .Text = "" Then
            .Locked = False
            .TabStop = True
        End If
        .SetFocus
    End With
    FunChecaCampos = False
    Exit Function
End If
If opt_Ativa.Value = False And opt_Cancelada.Value = False And Opt_entrada.Value = False And Opt_saida.Value = False Then
    NomeCampo = "o status"
    ProcVerificaAcao
    FunChecaCampos = False
    Exit Function
End If
If Faturamento_NF_Saida = False And txt_EntSai = "__/__/____" Then
    If USMsgBox("A data de entrada não foi informada, deseja utilizar a data de hoje?", vbYesNo, "CAPRIND v5.0") = vbYes Then
        txt_EntSai = Format(Date, "dd/mm/yyyy")
    Else
        NomeCampo = "a data de entrada"
        ProcVerificaAcao
        FunChecaCampos = False
        txt_EntSai.SetFocus
        Exit Function
    End If
End If
If Faturamento_NF_Saida = True Then
    If OptServico.Value = True Then
        DataTexto = "data de competência"
    Else
        DataTexto = "data de saída"
    End If
Else
    DataTexto = "data de entrada"
End If
If txt_EntSai <> "__/__/____" Then
    If IsDate(txt_EntSai) = False Then
        USMsgBox ("A " & DataTexto & " foi digitada incorretamente."), vbExclamation, "CAPRIND v5.0"
        txt_EntSai.SetFocus
        FunChecaCampos = False
        Exit Function
    Else
        If OptServico.Value = False Then
            Dataini = txt_DtEmissao
            DataFim = txt_EntSai
            If DataFim < Dataini Then
                USMsgBox ("A " & DataTexto & " não pode ser menor que a data de emissão."), vbExclamation, "CAPRIND v5.0"
                txt_EntSai.SetFocus
                FunChecaCampos = False
                Exit Function
            End If
        End If
    End If
End If
If txtIDCliente.Text = "" Then
    If Formulario = "Faturamento/Nota fiscal/Terceiros" Or Formulario = "Estoque/Nota fiscal" Then NomeCampo = "o emitente" Else NomeCampo = "o destinatário"
    ProcVerificaAcao
    FunChecaCampos = False
    Sit_REG = 1
    Faturamento = True
    frmFaturamento_Prod_serv_cliente_forn.Show 1
    Exit Function
End If
'If txttipocliente.Text = "" Then
'    NomeCampo = "o tipo do destinatário"
'    ProcVerificaAcao
'    FunChecaCampos = False
'    txttipocliente.SetFocus
'    Exit Function
'End If
If cbo_UF <> "" And cbo_UF <> "EX" Then
    If txttipocliente = "" And txt_CNPJ_CPF = "" Or txttipocliente = "J" And txt_CNPJ_CPF = "" Or txttipocliente = "JP" And txt_CNPJ_CPF = "" Or txttipocliente = "JR" And txt_CNPJ_CPF = "" Or txttipocliente = "E" And txt_CNPJ_CPF = "" Then
        NomeCampo = "o CNPJ"
        ProcVerificaAcao
        txt_CNPJ_CPF.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
    If txttipocliente = "F" And txt_CNPJ_CPF = "" Or txttipocliente = "FP" And txt_CNPJ_CPF = "" Or txttipocliente = "FR" And txt_CNPJ_CPF = "" Then
        NomeCampo = "o CPF"
        ProcVerificaAcao
        txt_CNPJ_CPF.SetFocus
        FunChecaCampos = False
        Exit Function
    End If
End If
If txt_Endereco = "" Then
    NomeCampo = "o endereço"
    ProcVerificaAcao
    FunChecaCampos = False
    txt_Endereco.SetFocus
    Exit Function
End If

If IsDate(Txt_hora_emissao) = False Then
    NomeCampo = "a hora da emissão"
    ProcVerificaAcao
    FunChecaCampos = False
    Txt_hora_emissao.SetFocus
    Exit Function
End If

If cmbFinalidade_emissao = "" Then
    NomeCampo = "a finalidade de emissão"
    ProcVerificaAcao
    FunChecaCampos = False
    cmbFinalidade_emissao.SetFocus
    Exit Function
End If
If Cmb_consumidor = "" Then
    NomeCampo = "o consumidor final"
    ProcVerificaAcao
    FunChecaCampos = False
    Cmb_consumidor.SetFocus
    Exit Function
End If
If Faturamento_NF_Saida = False Then
    If optProduto.Value = True And (Left(Cmb_modelo, 2) = "55" Or Left(Cmb_modelo, 2) = "57") Then
        If Txt_chave_acesso = "" Then
            NomeCampo = "a chave de acesso da NFe"
            ProcVerificaAcao
            FunChecaCampos = False
            Txt_chave_acesso.SetFocus
            Exit Function
        Else
            If txtId <> "" Then TextoFiltro = " and ID_nota <> " & txtId Else TextoFiltro = ""
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select ID from tbl_Dados_Nota_Fiscal_NFe where Chave_acesso = '" & Txt_chave_acesso & "'" & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
            If TBFI.EOF = False Then
                USMsgBox ("Esta chave de acesso já foi utilizada em outra nota fiscal, favor alterar."), vbInformation, "CAPRIND v5.0"
                TBFI.Close
                FunChecaCampos = False
                Exit Function
            End If
            TBFI.Close
            If Right(Txt_chave_acesso, 1) <> VerificaDigVerifNF(Left(Txt_chave_acesso, 43)) Then
                USMsgBox ("A chave de acesso está incorreta, favor alterar."), vbInformation, "CAPRIND v5.0"
                FunChecaCampos = False
                Txt_chave_acesso.SetFocus
                Exit Function
            End If
        End If
    End If
Else
    If Cmb_consumidor = "" Then
        NomeCampo = "o tipo do consumidor"
        ProcVerificaAcao
        FunChecaCampos = False
        Cmb_consumidor.SetFocus
        Exit Function
    End If
End If
If OptServico.Value = True And txt_FoneFAX = "" Then
    NomeCampo = "o numero de telefone"
    ProcVerificaAcao
    FunChecaCampos = False
    'txt_FoneFAX.SetFocus
    Exit Function
End If

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Public Function FunChecaNota(IDnota As Long)
On Error GoTo tratar_erro

Set TBAbrir_NFe = CreateObject("adodb.recordset")
TBAbrir_NFe.Open "Select DtValidacao from tbl_Dados_Nota_Fiscal where ID = " & IDnota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir_NFe.EOF = False Then
If IsNull(TBAbrir_NFe!DtValidacao) = False Then
NotaFiscalPronta = True
Else
NotaFiscalPronta = False
End If
End If
TBAbrir_NFe.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Private Sub ListaServicos_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With Listaservicos
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & txtId, True) = False Then
                    .ListItems.Item(InitFor).Checked = False
                    GoTo Proximo
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView Listaservicos, ColumnHeader
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Listaservicos_itemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If Listaservicos.ListItems.Count = 0 Then Exit Sub
Novo_Nota2 = False
ProcLimpaCamposServicos
txtidservico = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & Listaservicos.SelectedItem, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    txtidservico = TBProduto!Int_codigo
    txtcodServ.Text = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
    
    ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), False
    
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then Cmb_CST_PIS_Serv = TBProduto!CST_PIS Else Cmb_CST_PIS_Serv.ListIndex = -1
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then Cmb_CST_Cofins_Serv = TBProduto!CST_Cofins Else Cmb_CST_Cofins_Serv.ListIndex = -1
    
    txtDescserv.Text = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
    If IsNull(TBProduto!txt_Unid) = False And TBProduto!txt_Unid <> "" Then txtunserv = TBProduto!txt_Unid
    If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com_serv = TBProduto!Unidade_com
    txtqtdserv.Text = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
    
    With txtVlrunitserv
        .Text = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.0000000000"))
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select Valor_bloqueado from projproduto where Desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = False Then
            If TBAbrir!Valor_bloqueado = True Then
                .Locked = True
                .TabStop = False
            Else
                ProcVerificaNFPedInt TBProduto!Int_codigo
            End If
        End If
        TBAbrir.Close
    End With
    
    txtVlrtotalserv.Text = IIf(IsNull(TBProduto!dbl_ValorTotal), "", Format(TBProduto!dbl_ValorTotal, "###,##0.00"))
    txtof_servico.Text = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
    txt_pcclienteserv.Text = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
    
    
    If TBProduto!Servico_cliente = True Then Chk_servico_executado_cliente.Value = 1 Else Chk_servico_executado_cliente.Value = 0
End If
TBProduto.Close
CodigoLista2 = Listaservicos.SelectedItem.index
Frame1(12).Enabled = True

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Codproduto from projproduto where Desenho = '" & txtcodServ & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    ProcBloqueiaCamposServ
Else
    If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcLiberaCamposServ Else ProcBloqueiaCamposServ
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCarregaTransporteProposta()
On Error GoTo tratar_erro

If Txt_proposta.Text = "" Then
    USMsgBox ("Informe o número do pedido antes de pesquisar."), vbExclamation, "CAPRIND v5.0"
    SSFaturamento.Tab = 1
    Txt_proposta.SetFocus
    Exit Sub
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select vendas_comercial.IdIntTransp, vendas_comercial.Transportadora, vendas_comercial.Tipo_transp from vendas_proposta INNER JOIN vendas_comercial ON vendas_proposta.cotacao = vendas_comercial.cotacao where vendas_proposta.ncotacao = '" & Txt_proposta.Text & "' and vendas_proposta.revisao = " & IIf(Txt_rev.Text = "", 0, Txt_rev.Text) & " and Transportadora is not null", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Select Case TBAbrir!Tipo_transp
        Case "C": Cmb_tipo_transp = "Cliente"
        Case "F": Cmb_tipo_transp = "Fornecedor"
        Case "E": Cmb_tipo_transp = "Empresa"
    End Select
'    lst_DadosTransp.ListItems.Clear
'    With lst_DadosTransp.ListItems
'        .Add , , TBAbrir!Transportadora
'        .Item(.Count).SubItems(1) = TBAbrir!IdIntTransp
'    End With
    'lst_DadosTransp_ItemClick
Else
    USMsgBox ("Não foi encontrado nenhuma transportadora com este número de pedido interno."), vbExclamation, "CAPRIND v5.0"
End If
TBAbrir.Close
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub lst_DadosTransp_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView lst_DadosTransp, ColumnHeader

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub lst_Duplicata_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

ProcOrdenaListView lst_Duplicata, ColumnHeader

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ListaProdutos_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
On Error GoTo tratar_erro

If ColumnHeader = "" Then
    With ListaProdutos
        For InitFor = 1 To .ListItems.Count
            If .ListItems.Item(InitFor).Checked = True Then
                .ListItems.Item(InitFor).Checked = False
            Else
                If Cmb_opcao_lista_Produtos = "Excluir" Then
                    If FunVerificaRegistroValidadoSemMsg("tbl_Dados_Nota_Fiscal", "ID = " & txtId, True) = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
    
                    ProcVerificaRegistroUtilizadoSemMsg "Faturamento_Relacionamento", "(Id_produto = " & .ListItems(InitFor) & " or ID_produto_relacionada = " & .ListItems(InitFor) & ")"
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    ProcVerificaRegistroUtilizadoSemMsg "tbl_Detalhes_Nota_NFe", "ID_item = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    Set TBAbrir = CreateObject("adodb.recordset")
                    TBAbrir.Open "Select * From tbl_ContasPagar where ID_nota = " & ListaNota.SelectedItem & " and Despesas_NF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBAbrir.EOF = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                    TBAbrir.Close
                    ProcVerificaRegistroUtilizadoSemMsg "Estoque_movimentacao", "ID_prod_NF = " & .ListItems(InitFor)
                    If Permitido = False Then
                        .ListItems.Item(InitFor).Checked = False
                        GoTo Proximo
                    End If
                ElseIf Cmb_opcao_lista_Produtos = "Empenhar" Then
                        If .ListItems(InitFor).ListSubItems(10) = "Sim" Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                            
                        Set TBCarteira = CreateObject("adodb.recordset")
                        TBCarteira.Open "Select ID_carteira from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBCarteira.EOF = True Then
                            .ListItems.Item(InitFor).Checked = False
                            TBCarteira.Close
                            GoTo Proximo
                        End If
                        TBCarteira.Close
                            
                        EstoqueAtual = FunVerificaQtdeEstoque(.ListItems(InitFor).ListSubItems(1), IDempresa, "")
                        'Verifica empenho de vendas
                        Valor1 = 0
                        Set TBFI = CreateObject("adodb.recordset")
                        TBFI.Open "Select Qtde_requisitar from Qtde_empenhada_produto_venda where Desenho = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_requisitar), 0, TBFI!Qtde_requisitar)
                        'Verifica empenho na produção
                        Valor1 = 0
                        Set TBFI = CreateObject("adodb.recordset")
                        TBFI.Open "Select Qtde_empenhar from Qtde_empenhada_produto where Codigo = '" & .ListItems(InitFor).ListSubItems(1) & "'", Conexao, adOpenKeyset, adLockOptimistic
                        If TBFI.EOF = False Then EstoqueAtual = EstoqueAtual - IIf(IsNull(TBFI!Qtde_empenhar), 0, TBFI!Qtde_empenhar)
                        TBFI.Close
                        If EstoqueAtual = 0 Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                    Else
                        If .ListItems(InitFor).ListSubItems(10) = "Não" Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                        
                        Set TBCarteira = CreateObject("adodb.recordset")
                        TBCarteira.Open "Select ID from Estoque_Controle_Empenho_Vendas where ID_faturamento = " & .ListItems.Item(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                        If TBCarteira.EOF = True Then
                            .ListItems.Item(InitFor).Checked = False
                            GoTo Proximo
                        End If
                        TBCarteira.Close
                End If
                .ListItems.Item(InitFor).Checked = True
Proximo:
            End If
        Next InitFor
    End With
Else
    ProcOrdenaListView ListaProdutos, ColumnHeader
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_BaseICMS_Change()
On Error GoTo tratar_erro

If txt_BaseICMS.Text <> "" Then
    VerifNumero = txt_BaseICMS.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_BaseICMS.Text = ""
        txt_BaseICMS.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_BaseICMS_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_BaseICMS

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_baseICMSs_Change()
On Error GoTo tratar_erro

If txt_baseICMSs.Text <> "" Then
    VerifNumero = txt_baseICMSs.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_baseICMSs.Text = ""
        txt_baseICMSs.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_baseICMSs_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_baseICMSs

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_CFOP_prod_Change()
On Error GoTo tratar_erro

ProcCarregaCSTICMS
If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_CFOP_serv_Change()
On Error GoTo tratar_erro

ProcCarregaCSTServ

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_CNPJ_CPF_Change()
On Error GoTo tratar_erro

Select Case Len(ReturnNumbersOnly(txt_CNPJ_CPF.Text))
Case 14: Label1(46).Caption = "CNPJ"
Case 11: Label1(46).Caption = "CPF"
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_ICMSs_Change()
On Error GoTo tratar_erro

If txt_ICMSs.Text <> "" Then
    VerifNumero = txt_ICMSs.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_ICMSs.Text = ""
        txt_ICMSs.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_ICMSs_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_ICMSs

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_ID_CF_change()
On Error GoTo tratar_erro

ProcCarregaDadosCF

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosCF()
On Error GoTo tratar_erro

Txt_CF = ""
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select * from tbl_ClassificacaoFiscal where Idclass = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF), Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then
    Txt_CF = IIf(IsNull(TBFI!IDIntClasse), "", TBFI!IDIntClasse)
    
    Set TBFI = CreateObject("adodb.recordset")
    TBFI.Open "Select CST.* FROM CST INNER JOIN Regioes ON CST.ID_UF = Regioes.ID where CST.ID_CF = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF) & " and Regioes.UF = '" & cbo_UF & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBFI.EOF = False Then
        If IsNull(TBFI!CST) = False And TBFI!CST <> "" Then txtCST_ICMS.Text = TBFI!CST
    End If
End If
1:
    If NF_enviada = False And NFe_liberada = False Then ProcVerificaCF False

Exit Sub
tratar_erro:
    If Err.Number = 383 Then GoTo 1
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub txt_OutrasDisp_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_OutrasDisp

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_OutrasDisp_prod_Change()
On Error GoTo tratar_erro

If txt_OutrasDisp_prod <> "" Then
    VerifNumero = txt_OutrasDisp_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_OutrasDisp_prod = ""
        txt_OutrasDisp_prod.SetFocus
        Exit Sub
    End If
End If
ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_OutrasDisp_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_OutrasDisp_prod

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_OutrasDisp_prod_LostFocus()
On Error GoTo tratar_erro

txt_OutrasDisp_prod = Format(txt_OutrasDisp_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_TotalIPI_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_TotalIPI

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc <> "" Then
    VerifNumero = Txt_valor_total_desc
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc = ""
        Txt_valor_total_desc.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc = Format(Txt_valor_total_desc, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_prod_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc_prod <> "" Then
    VerifNumero = Txt_valor_total_desc_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc_prod = ""
        Txt_valor_total_desc_prod.SetFocus
        Exit Sub
    Else
    Var1 = Txt_valor_total_desc_prod.Text
    Var2 = txtQtd.Text
    If Var1 > 0 And Var2 > 0 Then
    txtvDesc.Text = Var1 / Var2
    Else
    txtvDesc = Format(0, "###,##0.00")
    End If
    txtvDesc = Format(txtvDesc, "###,##0.00")
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc_prod

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_prod_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc_prod = Format(Txt_valor_total_desc_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_Change()
On Error GoTo tratar_erro

If Txt_valor_total_desc_SUFRAMA <> "" Then
    VerifNumero = Txt_valor_total_desc_SUFRAMA
    ProcVerificaNumero
    If VerifNumero = False Then
        Txt_valor_total_desc_SUFRAMA = ""
        Txt_valor_total_desc_SUFRAMA.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus Txt_valor_total_desc_SUFRAMA

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub Txt_valor_total_desc_SUFRAMA_LostFocus()
On Error GoTo tratar_erro

Txt_valor_total_desc_SUFRAMA.Text = Format(Txt_valor_total_desc_SUFRAMA.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub txt_ValorNota_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_ValorNota

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrFrete

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_prod_Change()
On Error GoTo tratar_erro

If txt_VlrFrete_prod <> "" Then
    VerifNumero = txt_VlrFrete_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrFrete_prod = ""
        txt_VlrFrete_prod.SetFocus
        Exit Sub
    End If
    ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrFrete_prod

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_prod_LostFocus()
On Error GoTo tratar_erro

txt_VlrFrete_prod = Format(txt_VlrFrete_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrICMS_Change()
On Error GoTo tratar_erro

If txt_VlrICMS.Text <> "" Then
    VerifNumero = txt_VlrICMS.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrICMS.Text = ""
        txt_VlrICMS.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrICMS_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrICMS

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_vlrSeguro

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_prod_Change()
On Error GoTo tratar_erro

If txt_vlrSeguro_prod <> "" Then
    VerifNumero = txt_vlrSeguro_prod
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_vlrSeguro_prod = ""
        txt_vlrSeguro_prod.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_prod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_vlrSeguro_prod

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_prod_LostFocus()
On Error GoTo tratar_erro

txt_vlrSeguro_prod = Format(txt_vlrSeguro_prod, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrtotalprod_Change()
On Error GoTo tratar_erro

If txt_VlrTotalProd.Text <> "" Then
    VerifNumero = txt_VlrTotalProd.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrTotalProd.Text = ""
        txt_VlrTotalProd.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrtotalprod_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txt_VlrTotalProd

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtCod_Produto_Change()
On Error GoTo tratar_erro

ProcLimpaCamposProd1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtcodServ_Change()
On Error GoTo tratar_erro

ProcLimpaCamposServicos1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtCST_ICMS_Click()
On Error GoTo tratar_erro

ProcCarregaCSTIPI

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtCST_IPI_Click()
On Error GoTo tratar_erro

ProcCarregaCSTPIS

If Txt_ID_CFOP_prod <> "" And txtCST_ICMS <> "" And txtCST_IPI <> "" Then
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select cEnq from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI.Text & "' group by cEnq", Conexao, adOpenKeyset, adLockOptimistic
 If TBCFOP.EOF = False Then
 Txt_codigo_enq_IPI.Text = IIf(IsNull(TBCFOP!cEnq), "", TBCFOP!cEnq)
 End If
 TBCFOP.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtCST_PIS_Click()
On Error GoTo tratar_erro

ProcCarregaCSTCofins

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtEmpresa_Change()
On Error GoTo tratar_erro

ProcLimpaCamposNota

'If Formulario = "Estoque/Ordem de faturamento" And txtEmpresa <> "" Then
'ProcMostraValoresOF
'End If

Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")

ProcVerificaRegime
ProcVerificaTPNFe
txtIDEmpresa.Text = IDempresa
txtserie.Text = NF_Serie

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtempresa_Click()
On Error GoTo tratar_erro

ProcLimpaCamposNota

If Formulario = "Estoque/Ordem de faturamento" And txtempresa <> "" Then
ProcMostraValoresOF
End If

Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")

txtIDEmpresa.Text = IDempresa
ProcVerificaTPNFe
ProcVerificaRegime

If Regime = 1 Then
Set TBControleNF = CreateObject("adodb.recordset")
TBControleNF.Open "Select * From tbl_Dados_Nota_Fiscal where id = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBControleNF.EOF = False Then
TabelaSN = IIf(IsNull(TBControleNF!TabelaSN), 0, TBControleNF!TabelaSN)
End If
TBControleNF.Close

ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
lblSN.Caption = "% SN: " & IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
lblSN.Visible = True
Else
lblSN.Visible = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtIcms_Change()
On Error GoTo tratar_erro

If txtICMS.Text <> "" Then
    VerifNumero = txtICMS.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtICMS.Text = ""
        txtICMS.SetFocus
        Exit Sub
    End If
End If

If txtICMS.Text <> "" And txtICMS.Text <> "0" Then
chkNaoArredondar.Enabled = True
Else
chkNaoArredondar.Enabled = False
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtIcms_LostFocus()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtICMSSN_Change()
On Error GoTo tratar_erro

If txtICMSSN.Text <> "" Then
    VerifNumero = txtICMSSN.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtICMSSN.Text = ""
        txtICMSSN.SetFocus
        Exit Sub
    End If
End If
ProcCalculaICMSSN

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCalculaICMSSN()
On Error GoTo tratar_erro

valor = IIf(txtVLRMPA = "", 0, txtVLRMPA)
Valor2 = IIf(txtICMSSN.Text = "", 0, txtICMSSN.Text)
If valor > 0 Then
    txtBCICMSSN = Format(valor, "###,##0.00")
    txtValorICMSSN = Format((valor * Valor2) / 100, "###,##0.00")
Else
    'Verifica valor total de produto com CFOP que tem ICMS
    Valor1 = 0
    Valor3 = 0
    Valor4 = 0
    Valor5 = 0
    Valor6 = 0
    Set TBItem = CreateObject("adodb.recordset")

    TBItem.Open "Select Sum(NFP.dbl_ValorTotal - ISNULL(NFP.Valor_desconto, 0)) as Valor1, Sum(ISNULL(NFP.Valor_frete, 0)) as Valor3, Sum(ISNULL(NFP.Valor_seguro, 0)) as Valor4, Sum(ISNULL(NFP.Valor_acessorias, 0)) as Valor5, Sum(ISNULL(CST.Valor_ICMS_ST, 0)) as Valor6 from tbl_Detalhes_Nota NFP INNER JOIN tbl_Detalhes_Nota_CST_ICMS CST ON CST.ID_item = NFP.Int_codigo where NFP.ID_nota = " & IIf(txtId = "", 0, txtId) & " and (txt_CST = '0101' or txt_CST = '0201')", Conexao, adOpenKeyset, adLockOptimistic
    If TBItem.EOF = False Then
        Valor1 = IIf(IsNull(TBItem!Valor1), 0, TBItem!Valor1)
        Valor3 = IIf(IsNull(TBItem!Valor3), 0, TBItem!Valor3)
        Valor4 = IIf(IsNull(TBItem!Valor4), 0, TBItem!Valor4)
        Valor5 = IIf(IsNull(TBItem!Valor5), 0, TBItem!Valor5)
        Valor6 = IIf(IsNull(TBItem!Valor6), 0, TBItem!Valor6)
    End If
    TBItem.Close
    
    txtBCICMSSN = Format(Valor1 + Valor3 + Valor4 + Valor5 + Valor6, "###,##0.00")
    txtValorICMSSN = Format(((Valor1 + Valor3 + Valor4 + Valor5 + Valor6) * Valor2) / 100, "###,##0.00")
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtICMSSN_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtICMSSN

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtICMSSN_LostFocus()
On Error GoTo tratar_erro

txtICMSSN = Format(txtICMSSN, "###,##0.0000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaCSTICMS()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
txtCST_ICMS.Clear
txtCST_IPI.Clear
txtCST_PIS.Clear
txtCST_Cofins.Clear
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod, Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    'CST de ICMS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_ICMS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " group by CST_ICMS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_ICMS) = False And TBCFOP!CST_ICMS <> "" Then
                txtCST_ICMS.AddItem TBCFOP!CST_ICMS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_ICMS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_ICMS = CSTTexto
    End If
Else
    ProcCarregaTodasCSTICMS
    ProcCarregaTodasCSTIPI
    ProcCarregaTodasCSTPIS
    ProcCarregaTodasCSTCofins
End If
'TBCFOP.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaCSTIPI()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_IPI.Clear
    txtCST_PIS.Clear
    txtCST_Cofins.Clear
        
    'CST de IPI
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_IPI from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' group by CST_IPI", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_IPI) = False And TBCFOP!CST_IPI <> "" Then
                txtCST_IPI.AddItem TBCFOP!CST_IPI
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_IPI
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_IPI = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaCSTPIS()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_PIS.Clear
    txtCST_Cofins.Clear
        
    'CST de PIS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_PIS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' group by CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_PIS) = False And TBCFOP!CST_PIS <> "" Then
                txtCST_PIS.AddItem TBCFOP!CST_PIS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_PIS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_PIS = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaCSTCofins()
On Error GoTo tratar_erro

If Txt_ID_CFOP_prod = "" Then Exit Sub
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' and CST_PIS = '" & txtCST_PIS & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    txtCST_Cofins.Clear
        
    'CST de Cofins
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_Cofins from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_prod & " and CST_ICMS = '" & txtCST_ICMS & "' and CST_IPI = '" & txtCST_IPI & "' and CST_PIS = '" & txtCST_PIS & "' group by CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_Cofins) = False And TBCFOP!CST_Cofins <> "" Then
                txtCST_Cofins.AddItem TBCFOP!CST_Cofins
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_Cofins
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then txtCST_Cofins = CSTTexto
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTodasCSTICMS()
On Error GoTo tratar_erro

With txtCST_ICMS
    .AddItem "000"
    .AddItem "010"
    .AddItem "0101"
    .AddItem "0102"
    .AddItem "0103"
    .AddItem "020"
    .AddItem "0201"
    .AddItem "0202"
    .AddItem "0203"
    .AddItem "0300"
    .AddItem "040"
    .AddItem "0400"
    .AddItem "041"
    .AddItem "050"
    .AddItem "0500"
    .AddItem "051"
    .AddItem "060"
    .AddItem "070"
    .AddItem "090"
    .AddItem "0900"
    
    .AddItem "100"
    .AddItem "110"
    .AddItem "1101"
    .AddItem "1102"
    .AddItem "1103"
    .AddItem "120"
    .AddItem "1201"
    .AddItem "1202"
    .AddItem "1203"
    .AddItem "1300"
    .AddItem "140"
    .AddItem "1400"
    .AddItem "141"
    .AddItem "150"
    .AddItem "1500"
    .AddItem "151"
    .AddItem "160"
    .AddItem "170"
    .AddItem "190"
    .AddItem "1900"
    
    .AddItem "200"
    .AddItem "210"
    .AddItem "2101"
    .AddItem "2102"
    .AddItem "2103"
    .AddItem "220"
    .AddItem "2201"
    .AddItem "2202"
    .AddItem "2203"
    .AddItem "2300"
    .AddItem "240"
    .AddItem "2400"
    .AddItem "241"
    .AddItem "250"
    .AddItem "2500"
    .AddItem "251"
    .AddItem "260"
    .AddItem "270"
    .AddItem "290"
    .AddItem "2900"
    
    .AddItem "300"
    .AddItem "310"
    .AddItem "3101"
    .AddItem "3102"
    .AddItem "3103"
    .AddItem "320"
    .AddItem "3201"
    .AddItem "3202"
    .AddItem "3203"
    .AddItem "3300"
    .AddItem "340"
    .AddItem "3400"
    .AddItem "341"
    .AddItem "350"
    .AddItem "3500"
    .AddItem "351"
    .AddItem "360"
    .AddItem "370"
    .AddItem "390"
    .AddItem "3900"
    
    .AddItem "400"
    .AddItem "410"
    .AddItem "4101"
    .AddItem "4102"
    .AddItem "4103"
    .AddItem "420"
    .AddItem "4201"
    .AddItem "4202"
    .AddItem "4203"
    .AddItem "4300"
    .AddItem "440"
    .AddItem "4400"
    .AddItem "441"
    .AddItem "450"
    .AddItem "4500"
    .AddItem "451"
    .AddItem "460"
    .AddItem "470"
    .AddItem "490"
    .AddItem "4900"
    
    .AddItem "500"
    .AddItem "510"
    .AddItem "5101"
    .AddItem "5102"
    .AddItem "5103"
    .AddItem "520"
    .AddItem "5201"
    .AddItem "5202"
    .AddItem "5203"
    .AddItem "5300"
    .AddItem "540"
    .AddItem "5400"
    .AddItem "541"
    .AddItem "550"
    .AddItem "5500"
    .AddItem "551"
    .AddItem "560"
    .AddItem "570"
    .AddItem "590"
    .AddItem "5900"
    
    .AddItem "600"
    .AddItem "610"
    .AddItem "6101"
    .AddItem "6102"
    .AddItem "6103"
    .AddItem "620"
    .AddItem "6201"
    .AddItem "6202"
    .AddItem "6203"
    .AddItem "6300"
    .AddItem "640"
    .AddItem "6400"
    .AddItem "641"
    .AddItem "650"
    .AddItem "6500"
    .AddItem "651"
    .AddItem "660"
    .AddItem "670"
    .AddItem "690"
    .AddItem "6900"
    
    .AddItem "700"
    .AddItem "710"
    .AddItem "7101"
    .AddItem "7102"
    .AddItem "7103"
    .AddItem "720"
    .AddItem "7201"
    .AddItem "7202"
    .AddItem "7203"
    .AddItem "7300"
    .AddItem "740"
    .AddItem "7400"
    .AddItem "741"
    .AddItem "750"
    .AddItem "7500"
    .AddItem "751"
    .AddItem "760"
    .AddItem "770"
    .AddItem "790"
    .AddItem "7900"
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTodasCSTIPI()
On Error GoTo tratar_erro

With txtCST_IPI
    .AddItem "00"
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "49"
    .AddItem "50"
    .AddItem "51"
    .AddItem "52"
    .AddItem "53"
    .AddItem "54"
    .AddItem "55"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTodasCSTPIS()
On Error GoTo tratar_erro

With txtCST_PIS
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "06"
    .AddItem "07"
    .AddItem "08"
    .AddItem "09"
    .AddItem "49"
    .AddItem "98"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTodasCSTCofins()
On Error GoTo tratar_erro

With txtCST_Cofins
    .AddItem "01"
    .AddItem "02"
    .AddItem "03"
    .AddItem "04"
    .AddItem "05"
    .AddItem "06"
    .AddItem "07"
    .AddItem "08"
    .AddItem "09"
    .AddItem "49"
    .AddItem "98"
    .AddItem "99"
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaCSTServ()
On Error GoTo tratar_erro

If Txt_ID_CFOP_serv = "" Then Exit Sub
Cmb_CST_PIS_Serv.Clear
Cmb_CST_Cofins_Serv.Clear
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv, Conexao, adOpenKeyset, adLockOptimistic
If TBCFOP.EOF = False Then
    'CST de PIS
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_PIS from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv & " group by CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_PIS) = False And TBCFOP!CST_PIS <> "" Then
                Cmb_CST_PIS_Serv.AddItem TBCFOP!CST_PIS
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_PIS
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then Cmb_CST_PIS_Serv = CSTTexto
    End If
    
    'CST de Cofins
    Contador = 0
    Set TBCFOP = CreateObject("adodb.recordset")
    TBCFOP.Open "Select CST_Cofins from tbl_NaturezaOperacao_CST where ID_CFOP = " & Txt_ID_CFOP_serv & " group by CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
    If TBCFOP.EOF = False Then
        Do While TBCFOP.EOF = False
            If IsNull(TBCFOP!CST_Cofins) = False And TBCFOP!CST_Cofins <> "" Then
                Cmb_CST_Cofins_Serv.AddItem TBCFOP!CST_Cofins
                Contador = Contador + 1
                CSTTexto = TBCFOP!CST_Cofins
            End If
            TBCFOP.MoveNext
        Loop
        If Contador = 1 Then Cmb_CST_Cofins_Serv = CSTTexto
    End If
Else
    With Cmb_CST_PIS_Serv
        .AddItem "01"
        .AddItem "02"
        .AddItem "03"
        .AddItem "04"
        .AddItem "06"
        .AddItem "07"
        .AddItem "08"
        .AddItem "09"
        .AddItem "49"
        .AddItem "98"
        .AddItem "99"
    End With
    
    With Cmb_CST_Cofins_Serv
        .AddItem "01"
        .AddItem "02"
        .AddItem "03"
        .AddItem "04"
        .AddItem "06"
        .AddItem "07"
        .AddItem "08"
        .AddItem "09"
        .AddItem "49"
        .AddItem "98"
        .AddItem "99"
    End With
End If
TBCFOP.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtIDcliente_Change()
On Error GoTo tratar_erro

ProcCarregaEntrega
'ProcCarregaCobranca

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaCobranca()
On Error GoTo tratar_erro

With Cmb_cobranca
    .Clear
    If txtIDCliente <> "" And txt_Razao <> "" Then
        'Verifica se é cliente ou fornecedor
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select * from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockReadOnly
        If TBFI.EOF = False Then Tipo = "C" Else Tipo = "F"
        TBFI.Close
        
        Permitido = True
        If txtId <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            If Tipo = "C" Then
                TextoID = ""
                TBFI.Open "Select VC.* from (vendas_comercial VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao) INNER JOIN tbl_proposta_nota PN ON PN.proposta = VP.Ncotacao and PN.Revisao = VP.Revisao where PN.ID_nota = " & txtId & " and VC.ID_Cobranca IS NOT NULL and VC.ID_Cobranca <> 0 order by VC.ID_Cobranca", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    Do While TBFI.EOF = False
                        If TextoID <> TBFI!ID_Cobranca Then
                            .AddItem TBFI!Local_Cobranca
                            .ItemData(cmbCobranca.NewIndex) = TBFI!ID_Cobranca
                            TextoID = TBFI!ID_Cobranca
                        End If
                        TBFI.MoveNext
                    Loop
                End If
                TBFI.Close
            Else
                TBFI.Open "Select CC.* from (Compras_comercial CC INNER JOIN Compras_pedido CP ON CP.IDpedido = CC.IDpedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.Revisao = 0 where PN.ID_nota = " & txtId & " and CC.ID_Cobranca IS NOT NULL and CC.ID_Cobranca <> 0 and CC.localCobranca IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    .AddItem TBFI!localCobranca
                    .ItemData(cmbCobranca.NewIndex) = TBFI!ID_Cobranca
                    .Text = TBFI!localCobranca
                End If
                TBFI.Close
            End If
        End If
        
        If Permitido = True Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from clientes_Cobranca where idcliente = " & txtIDCliente & " and Tipo = '" & Tipo & "'", Conexao, adOpenKeyset, adLockReadOnly
            If TBFI.EOF = False Then
                Do While TBFI.EOF = False
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_Cobranca), "", TBFI!endereco_Cobranca)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_Cobranca), "", TBFI!endereco_Cobranca)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_Cobranca), "", TBFI!bairro_Cobranca)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_Cobranca), "", TBFI!bairro_Cobranca)
                    End If
                    Endereco2 = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_Cobranca), "", TBFI!cidade_Cobranca) & " - " & IIf(IsNull(TBFI!uf_Cobranca), "", TBFI!uf_Cobranca) & " - " & IIf(IsNull(TBFI!cep_Cobranca), "", TBFI!cep_Cobranca)
                    .AddItem Endereco2
                    .ItemData(cmbCobranca.NewIndex) = TBFI!idCobranca
                    .Text = Endereco2
                    TBFI.MoveNext
                Loop
            End If
            TBFI.Close
        End If
        
        idCobranca = 0
        If txtId <> "" Then
            Set TBAcessos = CreateObject("adodb.recordset")
            TBAcessos.Open "Select ID_Cobranca from tbl_Dados_Nota_Fiscal_NFe NFE INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.id = NFE.ID_nota where NF.id = " & txtId & " and NF.ID_int_cliente = " & txtIDCliente & " and NF.txt_razao_nome = '" & txt_Razao & "' and NFE.ID_Cobranca IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
            If TBAcessos.EOF = False Then
                Set TBFI = CreateObject("adodb.recordset")
                TBFI.Open "Select * from clientes_Cobranca where idCobranca = " & TBAcessos!ID_Cobranca, Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    idCobranca = TBAcessos!ID_Cobranca
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_Cobranca), "", TBFI!endereco_Cobranca)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_Cobranca), "", TBFI!endereco_Cobranca)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_Cobranca), "", TBFI!bairro_Cobranca)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_Cobranca), "", TBFI!bairro_Cobranca)
                    End If
                    Endereco = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_Cobranca), "", TBFI!cidade_Cobranca) & " - " & IIf(IsNull(TBFI!uf_Cobranca), "", TBFI!uf_Cobranca) & " - " & IIf(IsNull(TBFI!cep_Cobranca), "", TBFI!cep_Cobranca)
                    .Text = Endereco
                End If
                TBFI.Close
            End If
            TBAcessos.Close
        End If
    End If
End With

Exit Sub
tratar_erro:
    If Err.Number = 383 Then
        With cmbCobranca
            .AddItem Endereco
            .ItemData(cmbCobranca.NewIndex) = idCobranca
            .Text = Endereco
        End With
        Exit Sub
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtidempresa_Change()
On Error GoTo tratar_erro

If IsNumeric(txtIDEmpresa.Text) Then
IDempresa = txtIDEmpresa

ProcVerificaTPNFe
ProcVerificaRegime
txtempresa = NomeEmpresa

If Regime = 1 Then
Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
lblSN.Caption = "% SN: " & IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
lblSN.Visible = True
Else
lblSN.Visible = False
End If
End If

txtserie.Text = NF_Serie

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtidempresa_Click()
On Error GoTo tratar_erro

If IsNumeric(txtIDEmpresa.Text) Then
IDempresa = txtIDEmpresa

ProcVerificaTPNFe
ProcVerificaRegime

If Regime = 1 Then
Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
ProcVerifImpostosSN IDempresa, TabelaSN, Lbl2.Caption
lblSN.Caption = "% SN: " & IIf(IsNull(ICMS_SN), 0, Format(ICMS_SN, "###,##0.0000"))
lblSN.Visible = True
Else
lblSN.Visible = False
End If
End If

txtserie.Text = NF_Serie

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtIPI_Change()
On Error GoTo tratar_erro

If txtIPI.Text <> "" Then
    VerifNumero = txtIPI.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtIPI.Text = ""
        txtIPI.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtipi_LostFocus()
On Error GoTo tratar_erro

ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtNFiscal_Change()
On Error GoTo tratar_erro

If txtNFiscal.Text <> "" Then
    VerifNumero = txtNFiscal.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtNFiscal.Text = ""
        txtNFiscal.SetFocus
        Exit Sub
    End If
End If
  
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtNreg_Change(index As Integer)
On Error GoTo tratar_erro

If txtNreg(index) <> "" Then
    VerifNumero = txtNreg(index)
    ProcVerificaNumero
    If VerifNumero = False Then
        txtNreg(index) = ""
        txtNreg(index).SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtOF_Change()
On Error GoTo tratar_erro

Txt_IDestoque = 0
If txtOF = "" Then Exit Sub

valor = txtQtd
If txtUN <> "" And Cmb_un_com <> "" Then valor = valor / FunVerificaTabelaConversaoUnidade(txtUN, Cmb_un_com)
NovoValor = Replace(valor, ",", ".")
Set TBEstoque = CreateObject("adodb.recordset")
TBEstoque.Open "Select EC.IDestoque from Estoque_Controle_Empenho_Vendas EE INNER JOIN estoque_controle EC ON EE.ID_estoque = EC.IDEstoque where EC.ID_empresa = " & IDempresa & " and EC.Desenho = '" & txtCod_Produto & "' and EC.Lote = '" & txtOF & "' and EE.Qtde_empenhada - EE.Qtde_saida > 0", Conexao, adOpenKeyset, adLockReadOnly
If TBEstoque.EOF = False Then
    Txt_IDestoque = TBEstoque!IDEstoque
Else
    Set TBEstoque = CreateObject("adodb.recordset")
    TBEstoque.Open "Select Idestoque from Estoque_controle where ID_empresa = " & IDempresa & " and Desenho = '" & txtCod_Produto & "' and Lote = '" & txtOF & "' and Estoque_real >= " & NovoValor, Conexao, adOpenKeyset, adLockOptimistic
    If TBEstoque.EOF = False Then Txt_IDestoque = TBEstoque!IDEstoque
End If
TBEstoque.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtPagIr_Change(index As Integer)
On Error GoTo tratar_erro

If txtPagIr(index) <> "" Then
    VerifNumero = txtPagIr(index)
    ProcVerificaNumero
    If VerifNumero = False Then
        txtPagIr(index) = ""
        txtPagIr(index).SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtQTD_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtQtd

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtqtdserv_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtqtdserv

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcVerificaTipoNF(CorrigeTab As Boolean)
On Error GoTo tratar_erro

With SSFaturamento
    If optProduto.Value = True Then
        If CorrigeTab = True Then
            .TabVisible(2) = True
            .TabVisible(3) = False
            If Right(Formulario, 20) = "Ordem de faturamento" Then
                Set TBFerramentas = CreateObject("adodb.recordset")
                TBFerramentas.Open "Select * from empresa where codigo = " & IDempresa & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                If TBFerramentas.EOF = False Then
                    .TabsPerRow = 5
                Else
                    .TabsPerRow = 5
                End If
                TBFerramentas.Close
            ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                    .TabsPerRow = 5
                Else
                    .TabsPerRow = 5
            End If
        End If
        TipoNF = "M1"
    ElseIf OptServico.Value = True Then
            If CorrigeTab = True Then
                .TabVisible(2) = False
                .TabVisible(3) = True
'                .TabVisible(4) = False
'                .TabVisible(5) = False
                
                If Right(Formulario, 20) = "Ordem de faturamento" Then
                    Set TBFerramentas = CreateObject("adodb.recordset")
                    TBFerramentas.Open "Select * from empresa where codigo = " & IDempresa & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFerramentas.EOF = False Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 6
                    End If
                    TBFerramentas.Close
                ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 6
                End If
            End If
            TipoNF = "SA"
        Else
            If CorrigeTab = True Then
                .TabVisible(2) = True
                .TabVisible(3) = True
                If Right(Formulario, 20) = "Ordem de faturamento" Then
                    Set TBFerramentas = CreateObject("adodb.recordset")
                    TBFerramentas.Open "Select * from empresa where codigo = " & IDempresa & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
                    If TBFerramentas.EOF = False Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 6
                    End If
                    TBFerramentas.Close
                ElseIf Right(Formulario, 9) = "Terceiros" Or Left(Formulario, 7) = "Estoque" Then
                        .TabsPerRow = 6
                    Else
                        .TabsPerRow = 6
                End If
            End If
            TipoNF = "M1SA"
    End If
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub txtTexto_Change()
On Error GoTo tratar_erro

Lista_carteira.ListItems.Clear


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub TxtTransp_nome_Change()
On Error GoTo tratar_erro

'ProcCarregaTransportadora

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaTransportadora()
On Error GoTo tratar_erro

txtTransp_endereco.Text = ""
txtTransp_numero.Text = ""
txtTransp_municipio.Text = ""
txtTransp_uf_Transportadora = ""
txtTransp_cnpj.Text = ""
With txtTransp_IE
    .Text = ""
    .Locked = False
    .TabStop = True
End With
'lst_DadosTransp.ListItems.Clear

TextoFiltro = " and DtValidacao IS NOT NULL and status <> 'Bloqueado'"
If Cmb_tipo_transp = "Cliente" Then
    NomeTabela = "Clientes"
    NomeCampo = "NomeRazao"
ElseIf Cmb_tipo_transp = "Fornecedor" Then
        NomeTabela = "Compras_fornecedores"
        NomeCampo = "Nome_Razao"
    Else
        NomeTabela = "Empresa"
        NomeCampo = "Empresa"
        TextoFiltro = ""
End If

'Set TBLISTA = CreateObject("adodb.recordset")
'TBLISTA.Open "Select * FROM " & NomeTabela & " where " & NomeCampo & " like '" & TxtTransp_nome & "%' " & TextoFiltro & " order by " & NomeCampo, Conexao, adOpenKeyset, adLockOptimistic
'If TBLISTA.EOF = False Then
'    With lst_DadosTransp.ListItems
'        Do While TBLISTA.EOF = False
'            Select Case Cmb_tipo_transp
'                Case "Cliente":
'                    .Add , , TBLISTA!NomeRazao
'                    .Item(.Count).SubItems(1) = TBLISTA!IDCliente
'                    .Item(.Count).SubItems(2) = "C"
'                Case "Fornecedor":
'                    .Add , , TBLISTA!Nome_Razao
'                    .Item(.Count).SubItems(1) = TBLISTA!IDCliente
'                    .Item(.Count).SubItems(2) = "F"
'                Case "Empresa":
'                    .Add , , TBLISTA!Empresa
'                    .Item(.Count).SubItems(1) = TBLISTA!CODIGO
'                    .Item(.Count).SubItems(2) = "E"
'            End Select
'            TBLISTA.MoveNext
'        Loop
'    End With
'End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaTransporteCliente()
On Error GoTo tratar_erro

Set TBVendas = CreateObject("adodb.recordset")
TBVendas.Open "Select * from clientes where idcliente = " & txtIDCliente.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBVendas.EOF = False Then
    If IsNull(TBVendas!txt_transportadora) = False Then
        Select Case TBVendas!Tipo_transp
            Case "C": Cmb_tipo_transp = "Cliente"
            Case "F": Cmb_tipo_transp = "Fornecedor"
            Case "E": Cmb_tipo_transp = "Empresa"
        End Select
        lst_DadosTransp.ListItems.Clear
        With lst_DadosTransp.ListItems
            .Add , , TBVendas!txt_transportadora
            .Item(.Count).SubItems(1) = TBVendas!idTransp
        End With
    Else
        USMsgBox ("Não foi encontrado nenhuma transportadora para este cliente."), vbExclamation, "CAPRIND v5.0"
    End If
End If
TBVendas.Close
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub lst_DadosTransp_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If lst_DadosTransp.ListItems.Count = 0 Then Exit Sub
txtidinttransp = lst_DadosTransp.SelectedItem.ListSubItems(1)
If Cmb_tipo_transp = "Empresa" Then
    NomeTabela = "Empresa"
    NomeCampo = "Codigo"
Else
    NomeCampo = "IDCliente"
    If Cmb_tipo_transp = "Cliente" Then NomeTabela = "Clientes" Else NomeTabela = "Compras_fornecedores"
End If
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * FROM " & NomeTabela & " WHERE " & NomeCampo & " = " & txtidinttransp, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    NomeCampoTransp = "o estado"
    If Cmb_tipo_transp = "Empresa" Then
        TranspTexto = "dessa empresa"
        TxtTransp_nome = IIf(IsNull(TBAbrir!Empresa), "", TBAbrir!Empresa)
        If IsNull(TBAbrir!CNPJ) = True Or TBAbrir!CNPJ = "__.___.___/____-__" Or TBAbrir!CNPJ = "" Then txtTransp_cnpj = "" Else txtTransp_cnpj = TBAbrir!CNPJ
        txtTransp_IE = IIf(IsNull(TBAbrir!IE), "", TBAbrir!IE)
        If IsNull(TBAbrir!UF) = False And TBAbrir!UF <> "" Then txtTransp_uf_Transportadora = TBAbrir!UF
    Else
        If Cmb_tipo_transp = "Cliente" Then
            TranspTexto = "desse cliente"
            TxtTransp_nome = IIf(IsNull(TBAbrir!NomeRazao), "", TBAbrir!NomeRazao)
            If IsNull(TBAbrir!UF) = False And TBAbrir!UF <> "" Then txtTransp_uf_Transportadora = TBAbrir!UF
            
            With txtTransp_IE
                If Left(TBAbrir!Tipo, 1) = "J" Then
                    .Text = IIf(IsNull(TBAbrir!RG_IE), "", TBAbrir!RG_IE)
                    .Locked = False
                    .TabStop = True
                Else
                    .Text = "ISENTO"
                    .Locked = True
                    .TabStop = False
                End If
            End With
        Else
           ' If TBAbrir!Sedex = True Then chkSedex.Value = 1 Else chkSedex.Value = 0
            
            TranspTexto = "desse fornecedor"
            TxtTransp_nome = IIf(IsNull(TBAbrir!Nome_Razao), "", TBAbrir!Nome_Razao)
            If IsNull(TBAbrir!Estado) = False And TBAbrir!Estado <> "" Then txtTransp_uf_Transportadora = TBAbrir!Estado
            With txtTransp_IE
                If Left(TBAbrir!Pessoa, 1) = "J" Then
                    .Text = IIf(IsNull(TBAbrir!RG_IE), "", TBAbrir!RG_IE)
                    .Locked = False
                    .TabStop = True
                Else
                    .Locked = True
                    .TabStop = False
                End If
                
                If Left(TBAbrir!Pessoa, 1) = "F" Then
                    .Text = "ISENTO"
                    .Locked = False
                    .TabStop = True
                Else
                    .Locked = True
                    .TabStop = False
                End If
                
            End With
        End If
        If TBAbrir!idTipoEmpresa = 1 Then
            If IsNull(TBAbrir!CPF_CNPJ) = True Or TBAbrir!CPF_CNPJ = "__.___.___/____-__" Or TBAbrir!CPF_CNPJ = "" Then txtTransp_cnpj = "" Else txtTransp_cnpj = TBAbrir!CPF_CNPJ
        End If
        
    End If
1:
    If IsNull(TBAbrir!Tipo_endereco) = False And TBAbrir!Tipo_endereco <> "" Then
        Endereco = TBAbrir!Tipo_endereco & ": " & IIf(IsNull(TBAbrir!Endereco), "", TBAbrir!Endereco)
    Else
        Endereco = IIf(IsNull(TBAbrir!Endereco), "", TBAbrir!Endereco)
    End If
    txtTransp_endereco = Endereco
    txtTransp_numero = IIf(IsNull(TBAbrir!Numero), "", TBAbrir!Numero)
    txtTransp_municipio = IIf(IsNull(TBAbrir!Cidade), "", TBAbrir!Cidade)
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        USMsgBox ("Não foi encontrado " & NomeCampoTransp & " " & TranspTexto & "."), vbExclamation, "CAPRIND v5.0"
        GoTo 1
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcTranspEmpresa()
On Error GoTo tratar_erro

Set TBEmpresa = CreateObject("adodb.recordset")
TBEmpresa.Open "Select * FROM  Empresa  WHERE  Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBEmpresa.EOF = False Then
        txtidinttransp.Text = TBEmpresa!CODIGO
        TxtTransp_nome = IIf(IsNull(TBEmpresa!Empresa), "", TBEmpresa!Empresa)
        txtTransp_cnpj = TBEmpresa!CNPJ
        txtTransp_IE = IIf(IsNull(TBEmpresa!IE), "", TBEmpresa!IE)
        txtTransp_uf_Transportadora = TBEmpresa!UF

    If IsNull(TBEmpresa!Tipo_endereco) = False And TBEmpresa!Empresa <> "" Then
        Endereco = TBEmpresa!Tipo_endereco & ": " & IIf(IsNull(TBEmpresa!Endereco), "", TBEmpresa!Endereco)
    Else
        Endereco = IIf(IsNull(TBEmpresa!Endereco), "", TBEmpresa!Endereco)
    End If
    txtTransp_endereco = Endereco
    txtTransp_numero = IIf(IsNull(TBEmpresa!Numero), "", TBEmpresa!Numero)
    txtTransp_municipio = IIf(IsNull(TBEmpresa!Cidade), "", TBEmpresa!Cidade)
End If
TBEmpresa.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        USMsgBox ("Não foi encontrado " & NomeCampoTransp & " " & TranspTexto & "."), vbExclamation, "CAPRIND v5.0"
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub lst_Duplicata_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

    
If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
'
Set TBLISTA = CreateObject("adodb.recordset")
TBLISTA.Open "Select * from tbl_Detalhes_Recebimento where ID = " & lst_Duplicata.SelectedItem.ListSubItems(3), Conexao, adOpenKeyset, adLockOptimistic
If TBLISTA.EOF = False Then
'
    Txt_ID_duplicata = TBLISTA!ID
    
    If TBLISTA!txt_tipopagto <> "" Then
    cmb_tipopagto.Text = IIf(TBLISTA!txt_tipopagto <> "", TBLISTA!txt_tipopagto, "")
    End If
    
    If TBLISTA!Tipo_doc <> "" Then
    cmbtipo_conta.Text = IIf(TBLISTA!Tipo_doc <> "", TBLISTA!Tipo_doc, "")
    End If
    
'    .txtVencimentoAntigo.Text = Format(TBLISTA!dt_Vencimento, "dd/mm/yyyy")
'    .txtValorDuplicata = Format(TBLISTA!dbl_Valor, "###,##0.00")
'    .txt_Duplicata.Text = TBLISTA!txt_Parcela
'    .txt_Vencimento.Value = Date
    TBLISTA.Close
'
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ListaProdutos_ItemClick(ByVal Item As MSComctlLib.ListItem)
On Error GoTo tratar_erro

If ListaProdutos.ListItems.Count = 0 Then Exit Sub
Novo_Nota1 = False
txtIDProduto = 0
ProcLimpaCamposProd
ProcBloqueiaNfe
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota where Int_codigo = " & ListaProdutos.SelectedItem, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    txtIDProduto.Text = TBProduto!Int_codigo
    txtCod_Produto = IIf(IsNull(TBProduto!int_Cod_Produto), "", TBProduto!int_Cod_Produto)
    
    ProcCarregaDadosCFOPProdServ IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP), True
    
    ID_CFOP = IIf(IsNull(TBProduto!ID_CFOP), 0, TBProduto!ID_CFOP)
    
   cmbreferencia.Text = TBProduto!N_referencia

    
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select Idclass, IDIntClasse from tbl_ClassificacaoFiscal where Idclass = " & IIf(IsNull(TBProduto!ID_CF), 0, TBProduto!ID_CF), Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Txt_ID_CF = TBCiclo!Idclass
        Txt_CF = IIf(IsNull(TBCiclo!IDIntClasse), "", TBCiclo!IDIntClasse)
    End If
    
    txtDescricao_Produto.Text = IIf(IsNull(TBProduto!Txt_descricao), "", TBProduto!Txt_descricao)
    If IsNull(TBProduto!txt_Unid) = False And TBProduto!txt_Unid <> "" Then txtUN = TBProduto!txt_Unid
    If IsNull(TBProduto!Unidade_com) = False And TBProduto!Unidade_com <> "" Then Cmb_un_com = TBProduto!Unidade_com
    txtQtd.Text = IIf(IsNull(TBProduto!int_Qtd), "", Format(TBProduto!int_Qtd, "###,##0.0000"))
    
    With txtVLUnit
        .Text = IIf(IsNull(TBProduto!dbl_ValorUnitario), "", Format(TBProduto!dbl_ValorUnitario, "###,##0.000000"))
        
        If cbo_UF = "EX" Then
            .Locked = False
            .TabStop = True
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select Valor_bloqueado from projproduto where Desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                If TBAbrir!Valor_bloqueado = True Then
                    '.Locked = True
                    '.TabStop = False
                Else
                    ProcVerificaNFPedInt TBProduto!Int_codigo
                End If
            End If
            TBAbrir.Close
        End If
    End With
    
    txtVLTotal.Text = Format(TBProduto!dbl_ValorTotal, "###,##0.0000")
    txtICMS.Text = IIf(IsNull(TBProduto!int_ICMS), "", TBProduto!int_ICMS)
    txtIPI.Text = IIf(IsNull(TBProduto!int_IPI), "", TBProduto!int_IPI)
    txtValor_IPI.Text = IIf(IsNull(TBProduto!dbl_valoripi), "", Format(TBProduto!dbl_valoripi, "###,##0.00"))
    If IsNull(TBProduto!Codigo_enquadramento_IPI) = False Then
        If Len(ReturnNumbersOnly(TBProduto!Codigo_enquadramento_IPI)) = 3 Then Txt_codigo_enq_IPI = TBProduto!Codigo_enquadramento_IPI
    End If
    txtOF.Text = IIf(IsNull(TBProduto!Ordem), "", TBProduto!Ordem)
    Txt_IDestoque = IIf(IsNull(TBProduto!IDEstoque), 0, TBProduto!IDEstoque)
    txt_VlrFrete_prod = IIf(IsNull(TBProduto!Valor_frete), "0,00", Format(TBProduto!Valor_frete, "###,##0.00"))
    If TBProduto!Tem_IPI_frete = True Then Chk_tem_IPI_frete_prod.Value = 1 Else Chk_tem_IPI_frete_prod.Value = 0
    txt_vlrSeguro_prod = IIf(IsNull(TBProduto!Valor_seguro), "0,00", Format(TBProduto!Valor_seguro, "###,##0.00"))
    txt_OutrasDisp_prod = IIf(IsNull(TBProduto!Valor_acessorias), "0,00", Format(TBProduto!Valor_acessorias, "###,##0.00"))
    '==================================================================================================================================
    If TBProduto!Valor_desconto > 0 And TBProduto!int_Qtd > 0 Then
    txtvDesc.Text = IIf(IsNull(TBProduto!Valor_desconto), "0,00", Format((TBProduto!Valor_desconto / TBProduto!int_Qtd), "###,##0.00"))
    Else
    txtvDesc.Text = Format(TBProduto!Valor_desconto, "###,##0.00")
    
    End If
    '==================================================================================================================================
    Txt_valor_total_desc_prod = IIf(IsNull(TBProduto!Valor_desconto), "0,00", Format(TBProduto!Valor_desconto, "###,##0.00"))
    Txt_n_item = IIf(IsNull(TBProduto!N_item), "", TBProduto!N_item)
    txt_pccliente.Text = IIf(IsNull(TBProduto!PCCliente), "", TBProduto!PCCliente)
    Txt_complemento_descricao = IIf(IsNull(TBProduto!Complemento_descricao), "", TBProduto!Complemento_descricao)
    Txt_GTIN = IIf(IsNull(TBProduto!GTIN), "", TBProduto!GTIN)
    Txt_inf_adicionais_prod = IIf(IsNull(TBProduto!Inf_adicionais_prod), "", TBProduto!Inf_adicionais_prod)
    If TBProduto!retorno = True Then chkRetorno.Value = 1 Else chkRetorno.Value = 0
    If TBProduto!Remessa = True Then chkRemessa.Value = 1 Else chkRemessa.Value = 0
    If TBProduto!NaoArredondar = True Then chkNaoArredondar.Value = 1 Else chkNaoArredondar.Value = 0
    
    ProcCarregaCSTICMS
    NomeCampo = "ICMS"
    If IsNull(TBProduto!txt_CST) = False And TBProduto!txt_CST <> "" Then txtCST_ICMS = TBProduto!txt_CST Else txtCST_ICMS.ListIndex = -1
    
    Set TBAliquota = CreateObject("adodb.recordset")
    TBAliquota.Open "Select * from tbl_Detalhes_Nota_CST_ICMS where ID_item = " & ListaProdutos.SelectedItem, Conexao, adOpenKeyset, adLockOptimistic
    If TBAliquota.EOF = False Then
    TxtVlrIcms.Text = Format(TBAliquota!Valor_ICMS, "###,##0.0000")
    End If
    TBAliquota.Close
    txtICMS.Text = IIf(IsNull(TBProduto!int_ICMS), "", TBProduto!int_ICMS)
    
    NomeCampo = "IPI"
    If IsNull(TBProduto!CST_IPI) = False And TBProduto!CST_IPI <> "" Then txtCST_IPI = TBProduto!CST_IPI Else txtCST_IPI.ListIndex = -1
    NomeCampo = "PIS"
    If IsNull(TBProduto!CST_PIS) = False And TBProduto!CST_PIS <> "" Then txtCST_PIS = TBProduto!CST_PIS Else txtCST_PIS.ListIndex = -1
    NomeCampo = "Cofins"
    If IsNull(TBProduto!CST_Cofins) = False And TBProduto!CST_Cofins <> "" Then txtCST_Cofins = TBProduto!CST_Cofins Else txtCST_Cofins.ListIndex = -1
End If
1:
    TBProduto.Close
    CodigoLista1 = ListaProdutos.SelectedItem.index
    Frame1(9).Enabled = True
    
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Codproduto from projproduto where Desenho = '" & txtCod_Produto & "'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        ProcBloqueiaCamposProd False
    Else
        If FunVerifNFProdServSemCad(txtIDEmpresa.Text) = False Then ProcLiberaCamposProd Else ProcBloqueiaCamposProd False
    End If
    TBAbrir.Close

Exit Sub
tratar_erro:
    If Err.Number = "383" Then
        If Txt_ID_CFOP_prod <> "" Then
            USMsgBox ("Favor revisar as CST de " & NomeCampo & "."), vbExclamation, "CAPRIND v5.0"
            frmFaturamento_Prod_Serv_RevisarCST.Show 1
        End If
        GoTo 1
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosCFOPProdServ(ID_CFOP As Long, Prod As Boolean)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select IDCountCfop, ID_CFOP, Txt_descricao, Remessa, Retorno from tbl_NaturezaOperacao where IDCountCfop = " & ID_CFOP, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    If Prod = True Then
        Txt_ID_CFOP_prod = TBAbrir!IDCountCfop
        Txt_CFOP_prod = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
        Txt_natureza_operacao_prod = IIf(IsNull(TBAbrir!Txt_descricao), "", TBAbrir!Txt_descricao)
        If TBAbrir!Remessa = True Then chkRemessa.Value = 1 Else chkRemessa.Value = 0
        If TBAbrir!retorno = True Then chkRetorno.Value = 1 Else chkRetorno.Value = 0
    Else
        Txt_ID_CFOP_serv = TBAbrir!IDCountCfop
        Txt_CFOP_serv = IIf(IsNull(TBAbrir!ID_CFOP), "", TBAbrir!ID_CFOP)
        Txt_natureza_operacao_serv = IIf(IsNull(TBAbrir!Txt_descricao), "", TBAbrir!Txt_descricao)
    End If
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCarregaDadosCSTProd()
On Error GoTo tratar_erro

Valido = False
If Txt_ID_CF <> "" And cbo_UF <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from Empresa where Codigo = " & IDempresa & " and Carregar_CFOP_ST = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        ProcVerifCFOPST Txt_ID_CF, cbo_UF
        If Valido = True Then
            Txt_ID_CFOP_prod = IDAntigo
            Txt_CFOP_prod = FamiliaAntiga
            Txt_natureza_operacao_prod = Familiatext
            txtCST_ICMS = Letra
        End If
    End If
    
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_NaturezaOperacao_CST where ID_CFOP = " & IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If Valido = False Then
            If IsNull(TBFIltro!CST_ICMS) = False And TBFIltro!CST_ICMS <> "" Then txtCST_ICMS.Text = TBFIltro!CST_ICMS
        End If
1:
        If IsNull(TBFIltro!CST_IPI) = False And TBFIltro!CST_IPI <> "" Then txtCST_IPI.Text = TBFIltro!CST_IPI
        If IsNull(TBFIltro!CST_PIS) = False And TBFIltro!CST_PIS <> "" Then txtCST_PIS.Text = TBFIltro!CST_PIS
        If IsNull(TBFIltro!CST_Cofins) = False And TBFIltro!CST_Cofins <> "" Then txtCST_Cofins.Text = TBFIltro!CST_Cofins
    End If
    TBFIltro.Close
End If

Exit Sub
tratar_erro:
    If Err.Number = 383 Then GoTo 1
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub opt_Ativa_Click()
On Error GoTo tratar_erro

Status_nota = 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub opt_Cancelada_Click()
On Error GoTo tratar_erro
IDnota = txtId.Text

If opt_Cancelada.Value = True Then
Status_nota = 2
Conexao.Execute "Update tbl_dados_nota_fiscal Set int_status = '" & Status_nota & "' where id = " & IDnota
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub SSFaturamento_Click(PreviousTab As Integer)
On Error GoTo tratar_erro

Select Case SSFaturamento.Tab
    Case 0: 'Carteira
    


        'ProcCarregaListaCarteira (1)

    Case 1: 'Dados da nota


        If ListaNota.Visible = True Then ListaNota.SetFocus
        If txtIDEmpresa <> "" Then
            If txtIDEmpresa.Text <> 0 Then
            Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
            End If
        End If
        
    Case 2: 'Lista de produtos
        If txtIDEmpresa.Text <> 0 Then
        Lbl2.Caption = Format(FunVerifVlrTotalFat12UltMesesSomado(txtIDEmpresa.Text), "###,##0.00")
        End If

        
        If RegimeEmpresa = 1 Then
         lblCST.Caption = "CSOSN"
        Else
         lblCST.Caption = "CST"
        End If

        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcCarregaLista
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        
    Case 3: 'Lista de servicos

        Listaservicos.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcCarregaListaServicos
        ProcCarregaTotaisNota IIf(txtId = "", 0, txtId)
        txt_ValorNota.Text = 0
        
    Case 4: 'Dados de Transportadora

        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        ProcLimpaCamposTransp
        ProcCarregaQuantidadePesos
        ProcCarregaDadosTransporte
        
    Case 5: 'Dados de duplicatas

        
        If Opt_saida.Value = True Then
            ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'R'"
        Else
            ProcCarregaComboTipoDocto cmbtipo_conta, "Tipo = 'P'"
        End If
        
        ProcCarregaComboForma
        lst_Duplicata.SetFocus
        ProcVerificaProsseguir
        If Permitido = False Then Exit Sub
        
        'Carrega dados comerciais do pedido interno
        Set TBVendas = CreateObject("adodb.recordset")
        TBVendas.Open "Select VC.condicoes from (vendas_comercial VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao) INNER JOIN tbl_proposta_nota PN ON PN.Proposta = VP.NCotacao and PN.Revisao = VP.Revisao where PN.ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
        If TBVendas.EOF = False Then
            txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes) = False, TBVendas!condicoes, "")
        Else
            'Carrega dados comerciais do cliente
            If Len(txttipocliente) = 2 Then
                Set TBVendas = CreateObject("adodb.recordset")
                TBVendas.Open "Select * from Clientes_DadosComerciais where IDCliente = " & txtIDCliente & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
                If TBVendas.EOF = False Then
                    txt_Cond_Recebimento.Text = IIf(IsNull(TBVendas!condicoes) = False, TBVendas!condicoes, 0)
                End If
            End If
        End If
        TBVendas.Close

        ProcCarregaDuplicatas
        ProcVerificaValorFatura
End Select

    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcVerificaValorFatura()
On Error GoTo tratar_erro
Dim vlrTotalRemessa As Double

With frmEstoque_Ordem_Faturamento
'=========================================================================
' Verifica os totais da nota e de retenções
'=========================================================================
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Totais_Nota where id_nota = " & .txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
  Valor_Retencao_PIS = IIf(IsNull(TBTotaisnota!Total_retencao_PIS), 0, TBTotaisnota!Total_retencao_PIS)
  Valor_Retencao_Cofins = IIf(IsNull(TBTotaisnota!Total_retencao_Cofins), 0, TBTotaisnota!Total_retencao_Cofins)
  .txt_ValorNota = IIf(IsNull(TBTotaisnota!dbl_Valor_Total_Nota), 0, TBTotaisnota!dbl_Valor_Total_Nota)
End If
TBTotaisnota.Close
'=========================================================================
'Verifica os totais de remessa
'=========================================================================
vlrTotalRemessa = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select Sum(dbl_ValorTotal) as vlrTotalRemessa from tbl_Detalhes_Nota where id_nota = " & .txtId.Text & " and Remessa = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
  vlrTotalRemessa = IIf(IsNull(TBProduto!vlrTotalRemessa), 0, TBProduto!vlrTotalRemessa)
End If
'=================================================================
'Verifica produtos de retorno que somam o valor no total da nota
'=================================================================
VlrTotalRetorno = 0
Set TBProduto = CreateObject("adodb.recordset")
StrSql = "Select Sum(dbl_ValorTotal) as VlrTotalRetorno from tbl_Detalhes_Nota where id_nota = " & .txtId.Text & " and Retorno = 'True'"
'Debug.print StrSql
TBProduto.Open StrSql, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
  VlrTotalRetorno = IIf(IsNull(TBProduto!VlrTotalRetorno), 0, TBProduto!VlrTotalRetorno)
End If
TBProduto.Close

'================================================================
' Verifica tipo da NFe pra calculo
'================================================================
.ProcVerificaTipoNF False

If TipoNF = "M1" Then 'Nota de produtos
  valor = IIf(.txt_ValorNota = "", 0, .txt_ValorNota) - Valor_Retencao_PIS - Valor_Retencao_Cofins - VlrTotalRetorno - vlrTotalRemessa
End If

If TipoNF = "SA" Then ' Nota de serviços
ProcSomaRetencaoServicos
  valor = IIf(.txt_ValorNota = "", 0, .txt_ValorNota) - Valor_Retencao_Servico
End If

'====================================================
' Coloca o valor encontrado no valor total da fatura
'====================================================
 txtValorFatura = Format(valor, "###,##0.00")
'====================================================
End With

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcVerificaProsseguir()
On Error GoTo tratar_erro

Permitido = True
If txtId = "" Or txtId = "0" Then
    SSFaturamento.Tab = 1
    Permitido = False
    Exit Sub
End If
If Novo_Nota = True Then
    If txtNFiscal = "" Then NomeCampo = "ordem de faturamento" Else NomeCampo = "nota fiscal"
    USMsgBox ("Salve a " & NomeCampo & " antes de prosseguir."), vbExclamation, "CAPRIND v5.0"
    Permitido = False
    SSFaturamento.Tab = 1
    Exit Sub
End If
If Formulario <> "Estoque/Ordem de faturamento" Then
    If txtNFiscal <> "" And txtserie = "" Then
        USMsgBox ("Informe a série e salve antes de prosseguir."), vbExclamation, "CAPRIND v5.0"
        Permitido = False
        SSFaturamento.Tab = 1
        With txtserie
            .Locked = False
            .SetFocus
        End With
        Exit Sub
    End If
End If
If Faturamento_NF_Saida = True And txtDtValidacao = "" Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select Finalidade_emissao, Consumidor_final from tbl_Dados_Nota_Fiscal_NFe where ID_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If IsNull(TBFIltro!Finalidade_emissao) = True Or TBFIltro!Finalidade_emissao = "" Then
            USMsgBox ("Informe a finalidade de emissão antes de prosseguir."), vbExclamation, "CAPRIND v5.0"
            Permitido = False
            SSFaturamento.Tab = 1
            cmbFinalidade_emissao.SetFocus
            Exit Sub
        End If
        If IsNull(TBFIltro!Consumidor_final) = True Or TBFIltro!Consumidor_final = "" Then
            USMsgBox ("Informe o consumidor final antes de prosseguir."), vbExclamation, "CAPRIND v5.0"
            Permitido = False
            SSFaturamento.Tab = 1
            Cmb_consumidor.SetFocus
            Exit Sub
        End If
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcVerifDupEnviadaFinanceiro(ID_nota As Long)
On Error GoTo tratar_erro

Permitido = True
If ID_nota <> 0 Then
    If Opt_saida.Value = True Then
        NomeTabela = "tbl_contas_receber"
        TextoFiltro = "ID_Nota = " & ID_nota
    Else
        NomeTabela = "tbl_ContasPagar"
        TextoFiltro = "ID_Nota = " & ID_nota & " and Despesas_NF = 'False'"
    End If
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select * from " & NomeTabela & " where " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then Permitido = False
    TBContas.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCarregaQuantidadePesos()
On Error GoTo tratar_erro

quantidade = 0
PesoBruto = 0
PesoLiquido = 0
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select P.PBruto, P.PLiquido, P.Qtde_embalagem, P.Desenho, P.Unidade, NFP.int_Qtd, NFP.txt_Unid, NFP.Unidade_com, NFP.Remessa FROM projproduto P INNER JOIN tbl_Detalhes_Nota NFP ON P.desenho = NFP.int_Cod_Produto where NFP.id_nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        If IsNull(TBProduto!Qtde_embalagem) = False And TBProduto!Qtde_embalagem <> "" And TBProduto!Qtde_embalagem <> "0" Then
            Qtde = TBProduto!int_Qtd / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)
            If Qtde < TBProduto!Qtde_embalagem Then
                quantidade = quantidade + 1
            Else
                Qtd = Qtde / TBProduto!Qtde_embalagem
                If Int(Qtd) <> CDbl(Qtd) Then Qtd = Int(Qtd) + 1
                quantidade = quantidade + Qtd
            End If
        Else
            quantidade = quantidade + TBProduto!int_Qtd
        End If
        
        If TBProduto!Unidade <> TBProduto!txt_Unid And TBProduto!Remessa = True Then
            PesoBruto = PesoBruto + TBProduto!int_Qtd
            PesoLiquido = PesoLiquido + TBProduto!int_Qtd
        Else
            PesoBruto = PesoBruto + ((IIf(IsNull(TBProduto!PBruto), 0, TBProduto!PBruto) / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)) * TBProduto!int_Qtd)
            PesoLiquido = PesoLiquido + ((IIf(IsNull(TBProduto!PLiquido), 0, TBProduto!PLiquido) / FunVerificaTabelaConversaoUnidade(TBProduto!txt_Unid, TBProduto!Unidade_com)) * TBProduto!int_Qtd)
        End If
        
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close
'txtTransp_qtd.Text = Format(quantidade, "###,##0.0000")
txtTransp_pesoBruto = Format(PesoBruto, "###,##0.000000")
txtTransp_pesoliquido = Format(PesoLiquido, "###,##0.000000")
            
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_BaseICMS_LostFocus()
On Error GoTo tratar_erro

txt_BaseICMS.Text = Format(txt_BaseICMS.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_baseICMSs_LostFocus()
On Error GoTo tratar_erro

txt_baseICMSs.Text = Format(txt_baseICMSs.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_Conta_LostFocus()
On Error GoTo tratar_erro

If txt_conta.Text <> "" Then
    VerifNumero = txt_conta.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_conta.Text = ""
        txt_conta.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_EntSai_LostFocus()
On Error GoTo tratar_erro

If txt_EntSai.Text <> "__/__/____" Then
    VerifData = txt_EntSai.Text
    ProcVerificaData
    If VerifData = False Then
        txt_EntSai.Text = "__/__/____"
        txt_EntSai.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_ICMSs_LostFocus()
On Error GoTo tratar_erro

txt_ICMSs.Text = Format(txt_ICMSs.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_OutrasDisp_Change()
On Error GoTo tratar_erro

If txt_OutrasDisp.Text <> "" Then
    VerifNumero = txt_OutrasDisp.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_OutrasDisp.Text = ""
        txt_OutrasDisp.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_OutrasDisp_LostFocus()
On Error GoTo tratar_erro

txt_OutrasDisp.Text = Format(txt_OutrasDisp.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_proposta_Click()
On Error GoTo tratar_erro

Set TBProposta = CreateObject("adodb.recordset")
TBProposta.Open "Select * from tbl_proposta_nota where proposta = '" & Txt_proposta.Text & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBProposta.EOF = False Then
    Txt_rev.Text = IIf(IsNull(TBProposta!Revisao), "", TBProposta!Revisao)
    ComPedido = True
End If
TBProposta.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_TotalIPI_Change()
On Error GoTo tratar_erro

If txt_TotalIPI.Text <> "" Then
    VerifNumero = txt_TotalIPI.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_TotalIPI.Text = ""
        txt_TotalIPI.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_TotalIPI_LostFocus()
On Error GoTo tratar_erro

txt_TotalIPI = Format(txt_TotalIPI, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_ValorNota_Change()
On Error GoTo tratar_erro

If txt_ValorNota.Text <> "" Then
    VerifNumero = txt_ValorNota.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_ValorNota.Text = ""
        txt_ValorNota.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_ValorNota_LostFocus()
On Error GoTo tratar_erro

txt_ValorNota = Format(txt_ValorNota.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_Change()
On Error GoTo tratar_erro

If txt_VlrFrete.Text <> "" Then
    VerifNumero = txt_VlrFrete.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_VlrFrete.Text = ""
        txt_VlrFrete.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrFrete_LostFocus()
On Error GoTo tratar_erro

txt_VlrFrete.Text = Format(txt_VlrFrete.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrICMS_LostFocus()
On Error GoTo tratar_erro

txt_VlrICMS.Text = Format(txt_VlrICMS.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_Change()
On Error GoTo tratar_erro

If txt_vlrSeguro.Text <> "" Then
    VerifNumero = txt_vlrSeguro.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txt_vlrSeguro.Text = ""
        txt_vlrSeguro.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_vlrSeguro_LostFocus()
On Error GoTo tratar_erro

txt_vlrSeguro.Text = Format(txt_vlrSeguro.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txt_VlrTotalProd_LostFocus()
On Error GoTo tratar_erro

txt_VlrTotalProd = Format(txt_VlrTotalProd.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcVerificaCF(CalculaICMS_IPI As Boolean)
On Error GoTo tratar_erro
Dim UFCF As String

If Txt_ID_CF <> "" Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from tbl_ClassificacaoFiscal where Idclass = " & Txt_ID_CF, Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False Then
        If Faturamento_NF_Saida = True Then
            txtIPI = 0
            txtICMS = 0
            
            UFCF = cbo_UF
            If Txt_CFOP_prod = "6.118" And cmbEntrega <> "" Then
                'Nota fiscal de triangulação pegar uf do local de entrega para aliquota de ICMS
                Set TBFIltro = CreateObject("adodb.recordset")
                TBFIltro.Open "Select UF_entrega from clientes_entrega where identrega = " & cmbEntrega.ItemData(cmbEntrega.ListIndex) & " and UF_entrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
                If TBFIltro.EOF = False Then
                    UFCF = TBFIltro!uf_entrega
                End If
                TBFIltro.Close
            End If
            ProcValorImposto txtId, IIf(Txt_ID_CF = "", 0, Txt_ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, UFCF, IDempresa, False, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), RegimeEmpresa
        Else
            ProcValorImposto txtId, IIf(Txt_ID_CF = "", 0, Txt_ID_CF), IIf(txtIDCliente = "", 0, txtIDCliente), txt_Razao, cbo_UF, IDempresa, True, IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), 0
        End If
    Else
        Set TBFIltro = CreateObject("adodb.recordset")
        TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where ID = " & txtId & " and Aplicacao = 'P'", Conexao, adOpenKeyset, adLockReadOnly
        If TBFIltro.EOF = False Then
            USMsgBox ("Não é permitido utilizar esta classificação fiscal."), vbExclamation, "CAPRIND v5.0"
            Txt_ID_CF = ""
            Txt_CF = ""
            Exit Sub
        End If
        TBFIltro.Close
        IntIPI = IIf(txtIPI = "", 0, txtIPI)
        IntICMS = IIf(txtICMS = "", 0, txtICMS)
    End If
    
    ProcControleImposto IIf(Txt_ID_CFOP_prod = "", 0, Txt_ID_CFOP_prod), IIf(txtIDCliente = "", 0, txtIDCliente)

    If Faturamento_NF_Saida = False Then
        If TemICMS = "SIM" Then
            With txtICMS
                .Locked = False
                .TabStop = True
            End With
        Else
            With txtICMS
                .Locked = True
                .TabStop = False
            End With
        End If
        
        If TemIPI = "SIM" Then
            With txtIPI
                .Locked = False
                .TabStop = True
            End With
        Else
            With txtIPI
                '.Locked = True
                '.TabStop = False
            End With
        End If
    End If

    If CalculaICMS_IPI = False Then
        If TemICMS = "SIM" Then
            txtICMS = IntICMS
        Else
            IntICMS = 0
            txtICMS = 0
        End If
        
        If TemIPI = "SIM" Then
            txtIPI = IntIPI
        Else
            IntIPI = 0
            txtIPI.Text = 0
            txtValor_IPI = "0,00"
        End If
    Else
        IntICMS = IIf(txtICMS = "", 0, txtICMS)
        IntIPI = IIf(txtIPI = "", 0, txtIPI)
    End If
End If
Call ProcCalculaValores

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunVerificaNumeroNF() As Boolean
On Error GoTo tratar_erro

If optProduto.Value = True Then
    TipoNF = "M1"
ElseIf OptServico.Value = True Then
        TipoNF = "SA"
    Else
        TipoNF = "M1SA"
End If
FunVerificaNumeroNF = True
If Faturamento_NF_Saida = True Then
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtserie & "' and Aplicacao = 'P' and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
Else
    Set TBFIltro = CreateObject("adodb.recordset")
    If txttipocliente = "E" Then
        TextoFiltro = "txt_tipocliente = 'E'"
    ElseIf txttipocliente = "JR" Or txttipocliente = "JP" Or txttipocliente = "FR" Or txttipocliente = "FP" Then
            TextoFiltro = "(txt_tipocliente = 'JP' or txt_tipocliente = 'JR' or txt_tipocliente = 'FP' or txt_tipocliente = 'FR')"
        Else
            TextoFiltro = "(txt_tipocliente = 'J' or txt_tipocliente = 'F')"
    End If
    TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtserie & "' and Aplicacao = 'T' and Id_Int_Cliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_empresa = " & IDempresa & " and " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
End If
If TBFIltro.EOF = False Then
    USMsgBox ("Não é permitido utilizar este número de nota fiscal, pois o mesmo está sendo utilizado."), vbExclamation, "CAPRIND v5.0"
    FunVerificaNumeroNF = False
    TBFIltro.Close
    Exit Function
End If
TBFIltro.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Function FunVerificaNumeroNFAlterar() As Boolean
On Error GoTo tratar_erro
IDempresa = txtIDEmpresa

ProcVerificaTipoNF False
FunVerificaNumeroNFAlterar = True
Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from tbl_Dados_Nota_Fiscal where id = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    If Faturamento_NF_Saida = True Then
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtserie & "' and Aplicacao = 'P' and ID <> " & txtId & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    Else
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where int_NotaFiscal = '" & txtNFiscal.Text & "' and TipoNF = '" & TipoNF & "' and serie = '" & txtserie & "' and Aplicacao = 'T'  and Id_Int_Cliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and txt_tipocliente = '" & txttipocliente & "' and ID <> " & txtId & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    End If
    If TBAbrir.EOF = False Then
        USMsgBox ("Não é permitido utilizar este número de nota fiscal, pois o mesmo está sendo utilizado."), vbExclamation, "CAPRIND v5.0"
        FunVerificaNumeroNFAlterar = False
        TBAbrir.Close
        Exit Function
    End If
    TBAbrir.Close
    If TBFIltro!int_NotaFiscal <> txtNFiscal Then
        'Altera número da nota fiscal nos pedidos
        Conexao.Execute "Update tbl_proposta_nota Set NF = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
        'Altera número da nota fiscal no produto
        Conexao.Execute "Update tbl_Detalhes_Nota Set Int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
        'Altera número da nota fiscal nas contas
        Conexao.Execute "Update tbl_Detalhes_Recebimento Set int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
        
        Set TBContas = CreateObject("adodb.recordset")
        If Opt_saida.Value = True Then
            Conexao.Execute "Update tbl_contas_receber Set NFiscal = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
            TBContas.Open "Select * from tbl_contas_receber where ID_Nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then
                Do While TBContas.EOF = False
                    
                    'Fluxo de Caixa
                    Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                    
                    TBContas.MoveNext
                Loop
            End If
            TBContas.Close
        Else
            Conexao.Execute "Update tbl_ContasPagar Set txt_NDocumento = '" & txtNFiscal & "' where id_nota = " & txtId.Text
            TBContas.Open "Select * from tbl_ContasPagar where ID_Nota = " & txtId, Conexao, adOpenKeyset, adLockOptimistic
            If TBContas.EOF = False Then
                Do While TBContas.EOF = False
                    
                    'Fluxo de Caixa
                    Conexao.Execute "Update tbl_Fluxo_de_caixa Set int_NotaFiscal = '" & txtNFiscal & "' where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
                    
                    TBContas.MoveNext
                Loop
            End If
            TBContas.Close
        End If
        'Altera número da nota fiscal na transportadora
        Conexao.Execute "Update tbl_Dados_Transp Set Int_NotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
        'Altera número da nota fiscal nos dados adicionais e corpo da nota
        Conexao.Execute "Update tbl_DadosAdicionais Set IDNotaFiscal = '" & txtNFiscal.Text & "' where id_nota = " & txtId.Text
    End If
End If
TBFIltro.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Private Sub txtNFiscal_LostFocus()
On Error GoTo tratar_erro

If txtNFiscal <> "" Then txtNFiscal = FunTamanhoTextoZeroEsq(ReturnNumbersOnly(txtNFiscal), 9)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtQtd_Change()
On Error GoTo tratar_erro

If txtQtd.Text <> "" Then
    VerifNumero = txtQtd.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtQtd.Text = ""
        txtQtd.SetFocus
        Exit Sub
    End If

'================================================
' Acerta Desconto
'================================================
If IsNumeric(txtvDesc) And IsNumeric(txtQtd) = True Then
    TotalDesconto = txtvDesc * txtQtd
    Txt_valor_total_desc_prod = Format(TotalDesconto, "###,##0.0000000000")
End If

End If



ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
txtVLTotal = Format(IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd), "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCalculaValores()
On Error GoTo tratar_erro
    
SumTotProdutos = (IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd)) + IIf(txt_OutrasDisp_prod = "", 0, txt_OutrasDisp_prod)
'If Chk_tem_IPI_frete_prod.Value = 1 Then SumTotProdutos = SumTotProdutos + IIf(txt_VlrFrete_prod = "", 0, txt_VlrFrete_prod)
If Chk_tem_IPI_frete_prod.Value = 1 Then SumTotProdutos = SumTotProdutos

'Se tem IPI
VlrIPI = 0
If TemIPI = "SIM" Then
    txtIPI.Text = IntIPI
    Set TBFIltro = CreateObject("adodb.recordset")
    TBFIltro.Open "Select * from Clientes_Impostos where IDCliente = " & IIf(txtIDCliente = "", 0, txtIDCliente) & " and ID_CF = " & IIf(Txt_ID_CF = "", 0, Txt_ID_CF), Conexao, adOpenKeyset, adLockOptimistic
    If TBFIltro.EOF = False Then
        If TBFIltro!PorcentagemIPI <> 0 Then VlrIPI = IIf(txtVLUnit = "", 0, txtVLUnit) / TBFIltro!PorcentagemIPI
        VlrIPI = (VlrIPI - IIf(txtVLUnit = "", 0, txtVLUnit)) * IIf(txtQtd = "", 0, txtQtd)
    Else
        VlrIPI = (SumTotProdutos * IntIPI) / 100
    End If
    TBFIltro.Close
    txtValor_IPI = Format(VlrIPI, "###,##0.00")
Else
    txtIPI = 0
    txtValor_IPI = "0,00"
End If

'Se tem icms
If TemICMS = "SIM" Then txtICMS.Text = IntICMS Else txtICMS.Text = 0

'Atribui valores

'======================================================================================================================
'txtVLTotal = Format(IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd) + IIf(txt_VlrFrete_prod.Text = "", 0, txt_VlrFrete_prod), "###,##0.00")
'txtVLTotal = Format(IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd), "###,##0.00")
'======================================================================================================================
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub txtQtd_LostFocus()
On Error GoTo tratar_erro

txtQtd.Text = Format(txtQtd.Text, "###,##0.0000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub


Private Sub txtqtdserv_Change()
On Error GoTo tratar_erro

If txtqtdserv.Text <> "" Then
    VerifNumero = txtqtdserv.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtqtdserv.Text = ""
        txtqtdserv.SetFocus
        Exit Sub
    End If
End If
ProcCalculaTotalServ

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtqtdserv_LostFocus()
On Error GoTo tratar_erro

txtqtdserv.Text = Format(txtqtdserv.Text, "###,##0.0000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_pesoBruto_Change()
On Error GoTo tratar_erro

If txtTransp_pesoBruto.Text <> "" Then
    VerifNumero = txtTransp_pesoBruto.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtTransp_pesoBruto.Text = ""
        txtTransp_pesoBruto.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_pesoBruto_LostFocus()
On Error GoTo tratar_erro

txtTransp_pesoBruto.Text = Format(txtTransp_pesoBruto.Text, "###,##0.000000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_pesoliquido_Change()
On Error GoTo tratar_erro

If txtTransp_pesoliquido.Text <> "" Then
    VerifNumero = txtTransp_pesoliquido.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtTransp_pesoliquido.Text = ""
        txtTransp_pesoliquido.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_pesoliquido_LostFocus()
On Error GoTo tratar_erro

txtTransp_pesoliquido.Text = Format(txtTransp_pesoliquido.Text, "###,##0.000000")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_qtd_Change()
On Error GoTo tratar_erro

If txtTransp_qtd.Text <> "" Then
txtTransp_qtd = ReturnNumbersOnly(txtTransp_qtd.Text)
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtTransp_qtd_KeyPress(KeyAscii As Integer)
On Error GoTo tratar_erro

If (KeyAscii < 48 Or KeyAscii > 57) And KeyAscii <> 8 Then
        KeyAscii = 0
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtUN_Click()
On Error GoTo tratar_erro

If txtUN <> "" Then ProcLibera_UN_Com txtUN, Cmb_un_com

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtunserv_Click()
On Error GoTo tratar_erro

If txtunserv <> "" Then ProcLibera_UN_Com txtunserv, Cmb_un_com_serv

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtValorDuplicata_Change()
On Error GoTo tratar_erro

If txtValorDuplicata.Text <> "" Then
    VerifNumero = txtValorDuplicata.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtValorDuplicata.Text = ""
        txtValorDuplicata.SetFocus
        Exit Sub
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtValorDuplicata_LostFocus()
On Error GoTo tratar_erro

txtValorDuplicata.Text = Format(txtValorDuplicata.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMOA_Change()
On Error GoTo tratar_erro

If txtVLRMOA.Text <> "" Then
    VerifNumero = txtVLRMOA.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLRMOA.Text = ""
        txtVLRMOA.SetFocus
        Exit Sub
    End If
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMOA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLRMOA

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMOA_LostFocus()
On Error GoTo tratar_erro

txtVLRMOA.Text = Format(txtVLRMOA.Text, "###,##0.00")
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMPA_Change()
On Error GoTo tratar_erro

If txtVLRMPA.Text <> "" Then
    VerifNumero = txtVLRMPA.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLRMPA.Text = ""
        txtVLRMPA.SetFocus
        Exit Sub
    End If
End If
ProcCalculaICMSSN

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMPA_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLRMPA

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLRMPA_LostFocus()
On Error GoTo tratar_erro

txtVLRMPA = Format(txtVLRMPA, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub txtvlrtotalserv_LostFocus()
On Error GoTo tratar_erro

txtVlrtotalserv.Text = Format(txtVlrtotalserv.Text, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtvlrunitserv_Change()
On Error GoTo tratar_erro

If txtVlrunitserv.Text <> "" Then
    VerifNumero = txtVlrunitserv.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVlrunitserv.Text = ""
        txtVlrunitserv.SetFocus
        Exit Sub
    End If
End If
ProcCalculaTotalServ

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Sub
End Sub

Private Sub txtvlrunitserv_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVlrunitserv

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtvlrunitserv_LostFocus()
On Error GoTo tratar_erro

txtVlrunitserv.Text = Format(txtVlrunitserv.Text, "###,##0.0000000000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCalculaTotalServ()
On Error GoTo tratar_erro

If txtqtdserv <> "" And txtVlrunitserv <> "" Then
    quantidade = txtqtdserv
    valor = txtVlrunitserv
    ValorTotal = valor * quantidade
Else
    ValorTotal = 0
End If

txtVlrtotalserv = Format(ValorTotal, "###,##0.00")
txt_ValorNota2 = Format(ValorTotal, "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLTotal_Change()
On Error GoTo tratar_erro

txtVLTotal.Text = Format(txtVLTotal.Text, "###,##0.0000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLUnit_Change()
On Error GoTo tratar_erro

If txtVLUnit.Text <> "" Then
    VerifNumero = txtVLUnit.Text
    ProcVerificaNumero
    If VerifNumero = False Then
        txtVLUnit.Text = ""
        txtVLUnit.SetFocus
        Exit Sub
    End If
End If
ProcVerificaCF IIf(Faturamento_NF_Saida = False, True, False)
txtVLTotal = Format(IIf(txtVLUnit = "", 0, txtVLUnit) * IIf(txtQtd = "", 0, txtQtd), "###,##0.00")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcGravarQtdeFaturadaProdServ(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

'Qtde liberada p/ faturar
qt = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as qt from tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    qt = IIf(IsNull(TBCiclo!qt), 0, TBCiclo!qt)
End If
'Qtde faturada
Qtd = 0
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select Sum(NFPP.Quantidade) as Qtd from tbl_dados_nota_fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "' and NF.int_NotaFiscal IS NOT NULL", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Qtd = IIf(IsNull(TBCiclo!Qtd), 0, TBCiclo!Qtd)
End If
TBCiclo.Close
NovoValor = Replace(qt, ",", ".")
NovoValor1 = Replace(Qtd, ",", ".")
Conexao.Execute "Update vendas_carteira Set qtdeliberada = " & NovoValor & ", qtdefaturada = " & NovoValor1 & " where Codigo = " & ID_carteira & " and Desenho = '" & Codinterno & "'"

ProcGravarStatusProdServ ID_carteira, Codinterno

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcGravarStatusProdServ(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from vendas_carteira where Codigo = " & ID_carteira & " and Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    'Verifica data de emissão da última NF
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select NF.dt_DataEmissao from tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Detalhes_Nota_pedidos NFPP ON NFPP.ID_nota = NF.ID where NF.Pedido_interno = 'True' and NF.int_status = 1 and NFPP.ID_carteira = " & ID_carteira & " and NFPP.Codinterno = '" & Codinterno & "' order by NF.dt_DataEmissao desc", Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = False Then
        Dataini = TBCiclo!dt_DataEmissao
    End If
    TBCiclo.Close
    
    If TBAbrir!QtdeFaturada >= TBAbrir!quantidade Then
        TBAbrir!Liberacao = "FATURADO"
        TBAbrir!DataFaturamento = Dataini
    ElseIf TBAbrir!QtdeFaturada > 0 Then
            TBAbrir!Liberacao = "FATURADO PARCIAL"
            TBAbrir!DataFaturamento = Dataini
        Else
            TBAbrir!DataFaturamento = Null
            If TBAbrir!qtdeliberada > 0 Then
                If TBAbrir!quantidade <= TBAbrir!qtdeliberada Then TBAbrir!Liberacao = "FATURAR" Else TBAbrir!Liberacao = "FATURAR PARCIAL"
            Else
                TBAbrir!Liberacao = "VENDIDA"
            End If
    End If
    TBAbrir.Update
End If

'Programação
Set TBProgramas = CreateObject("adodb.recordset")
TBProgramas.Open "Select VP.*, VC.qtdefaturada as QtdeFaturadaVC from Vendas_programacao VP INNER JOIN vendas_carteira VC ON VP.ID_prog = VC.ID_programacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBProgramas.EOF = False Then
    TBProgramas!QtdeFaturada = TBProgramas!QtdeFaturadaVC
    If TBProgramas!QtdeFaturada >= TBProgramas!quantidade Then
        TBProgramas!Status_prog = "FATURADO"
        TBProgramas!Ordenar = 4
    ElseIf TBProgramas!QtdeFaturada > 0 Then
            TBProgramas!Status_prog = "PARCIAL"
            TBProgramas!Ordenar = 1
        Else
            TBProgramas!Status_prog = "ABERTO"
            TBProgramas!Ordenar = 2
    End If
    TBProgramas.Update
End If

'Produto (Programação)
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select VPI.* from (vendas_programacao VP INNER JOIN vendas_carteira VC ON VP.ID_prog = VC.ID_programacao) INNER JOIN vendas_programa_item VPI ON VPI.ID_item = VP.Id_item where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'PREVISÃO FUTURA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        TBCiclo!Status_Item = "PREVISÃO FUTURA"
    Else
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = True Then
            TBCiclo!Status_Item = "ABERTO"
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from vendas_programacao where id_item = " & TBCiclo!Id_Item & " and status_prog <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                TBCiclo!Status_Item = "FATURADO"
            Else
                TBCiclo!Status_Item = "PARCIAL"
            End If
        End If
    End If
    TBAbrir.Close
    TBCiclo.Update
End If
ProcStatusPedido ID_carteira, Codinterno

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcStatusPedido(ID_carteira As Long, Codinterno As String)
On Error GoTo tratar_erro

'Verifica status do pedido
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select VP.Cotacao, VP.Status from vendas_proposta VP INNER JOIN vendas_carteira VC ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBCiclo = CreateObject("adodb.recordset")
    TBCiclo.Open "Select * from vendas_carteira where cotacao = " & TBAbrir!Cotacao & " and Liberacao <> 'FATURAR' and Liberacao <> 'FATURAR PARCIAL' and Liberacao <> 'VENDIDA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBCiclo.EOF = True Then
        TBAbrir!status = "VENDIDA"
    Else
        Set TBCiclo = CreateObject("adodb.recordset")
        TBCiclo.Open "Select * from vendas_carteira where cotacao = " & TBAbrir!Cotacao & " and Liberacao <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBCiclo.EOF = True Then
            TBAbrir!status = "FATURADA"
        Else
            TBAbrir!status = "FATURADA PARCIAL"
        End If
    End If
    TBCiclo.Close
    TBAbrir.Update
End If
TBAbrir.Close

'Programa
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "Select VPR.ID, VPR.Status from (vendas_programa VPR INNER JOIN vendas_proposta VP ON VPR.ID = VP.ID_programa) INNER JOIN vendas_carteira VC ON VP.Cotacao = VC.Cotacao where VC.Codigo = " & ID_carteira & " and VC.Desenho = '" & Codinterno & "'", Conexao, adOpenKeyset, adLockOptimistic
If TBCiclo.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'PREVISÃO FUTURA'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        TBCiclo!status = "PREVISÃO FUTURA"
    Else
        Set TBAbrir = CreateObject("adodb.recordset")
        TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'ABERTO'", Conexao, adOpenKeyset, adLockOptimistic
        If TBAbrir.EOF = True Then
            TBCiclo!status = "ABERTO"
        Else
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from vendas_programa_item where id = " & TBCiclo!ID & " and Status_Item <> 'FATURADO'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = True Then
                TBCiclo!status = "FATURADO"
            Else
                TBCiclo!status = "PARCIAL"
            End If
        End If
    End If
    TBAbrir.Close
    TBCiclo.Update
End If
TBCiclo.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcAtualizaDadosPedido(ID_nota As Long, Excluir As Boolean)
On Error GoTo tratar_erro

Set TBCarteira = CreateObject("adodb.recordset")
TBCarteira.Open "Select NFPP.* FROM tbl_Detalhes_Nota_pedidos NFPP INNER JOIN vendas_carteira VC ON VC.Codigo = NFPP.ID_carteira and VC.Desenho = NFPP.Codinterno where NFPP.ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBCarteira.EOF = False Then
    Do While TBCarteira.EOF = False
        IDlista = TBCarteira!ID_carteira
        Desenho = TBCarteira!Codinterno
        If Excluir = True Then Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID = " & TBCarteira!ID
        
        ProcGravarQtdeFaturadaProdServ IDlista, Desenho
        TBCarteira.MoveNext
    Loop
Else
    If Excluir = True Then Conexao.Execute "DELETE from tbl_Detalhes_Nota_pedidos where ID_nota = " & ID_nota
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcStatusnota()
On Error GoTo tratar_erro

If txtId <> "" Then
    If Status_nota = 2 Then
        ProcExcluirArquivosRemessa txtId
        ProcExcluirContas txtId, Opt_saida, txttipocliente

        Conexao.Execute "DELETE from ECEV from Estoque_Controle_Empenho_Vendas ECEV INNER JOIN tbl_Detalhes_Nota NFP ON NFP.Int_codigo = ECEV.ID_faturamento where NFP.ID_nota = " & txtId
        
        If OptServico.Value = False Then
            Set TBCST = CreateObject("adodb.recordset")
            TBCST.Open "Select * from tbl_dados_nota_fiscal_nfe where id_nota = " & txtId & " and (Status = 0 or Status = 100)", Conexao, adOpenKeyset, adLockOptimistic
            If TBCST.EOF = False Then
                TBCST!status = "-1"
                TBCST.Update
            End If
        End If
    Else
        If txtNFiscal <> "" And txtserie <> "" And OptServico.Value = False Then
            'NFe
            Set TBAbrir = CreateObject("adodb.recordset")
            TBAbrir.Open "Select * from Empresa where codigo = " & IDempresa & " and GNFe = 'True'", Conexao, adOpenKeyset, adLockOptimistic
            If TBAbrir.EOF = False Then
                OF = txtNFiscal
                Serie = txtserie
                status = "C"
                Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
                If GerArqPastas.FileExists(TBAbrir!Caminho_Nfe & "\Empresa " & TBAbrir!CODIGO & " - Serie " & Serie & " - Nota " & OF & " - Status " & status & ".bat") = True Then Kill (TBAbrir!Caminho_Nfe & "\Empresa " & TBAbrir!CODIGO & " - Serie " & Serie & " - Nota " & OF & " - Status " & status & ".bat")
            End If
            TBAbrir.Close

            'NFp
            OF = TBproducao!int_NotaFiscal
            Serie = TBproducao!Serie
            status = "C"
            Set GerArqPastas = CreateObject("Scripting.FileSystemObject")
            If GerArqPastas.FileExists(Localrel & "\NFp Enviar\Serie " & Serie & " - Nota " & OF & " - Status " & status & ".txt") = True Then Kill (Localrel & "\NFp Enviar\Serie " & Serie & " - Nota " & OF & " - Status " & status & ".txt")
        End If
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLUnit_GotFocus()
On Error GoTo tratar_erro
  
FunGotFocus txtVLUnit

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub txtVLUnit_LostFocus()
On Error GoTo tratar_erro

txtVLUnit.Text = Format(txtVLUnit.Text, "###,##0.0000000000")

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcVerificaNota()
On Error GoTo tratar_erro

With txtserie
    .Locked = False
    .TabStop = True
    Set TBAbrir = CreateObject("adodb.recordset")
    If Faturamento_NF_Saida = True Then
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = 'P' and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    Else
        TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal where tipoNF = '" & TipoNF & "' and Aplicacao = 'T' and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    End If
    If TBAbrir.EOF = False Then
        TBAbrir.MoveLast
        If Faturamento_NF_Saida = True And TBAbrir!ID <> txtId And .Text <> "" Then
            .Locked = True
            .TabStop = False
        End If
    End If
    TBAbrir.Close
End With
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCopiarNFe()
On Error GoTo tratar_erro

Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select * from tbl_Dados_Nota_Fiscal_NFe where Id_nota = " & IDAntigo, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBGravar = CreateObject("adodb.recordset")
    TBGravar.Open "Select * from tbl_Dados_Nota_Fiscal_NFe", Conexao, adOpenKeyset, adLockOptimistic
    TBGravar.AddNew
    TBGravar!ID_nota = txtId
    TBGravar!Forma_pagamento = TBAbrir!Forma_pagamento
    TBGravar!Finalidade_emissao = TBAbrir!Finalidade_emissao
    TBGravar!ID_entrega = TBAbrir!ID_entrega
    TBGravar!Forma_emissao = TBAbrir!Forma_emissao
    TBGravar!Enviar_Email = TBAbrir!Enviar_Email
    TBGravar!Titulo_canhoto_DANFE = TBAbrir!Titulo_canhoto_DANFE
    TBGravar!Texto_canhoto_DANFE = TBAbrir!Texto_canhoto_DANFE
    TBGravar!Enviar_DANFE_email = TBAbrir!Enviar_DANFE_email
    TBGravar!ID_Cobranca = TBAbrir!ID_Cobranca
    TBGravar!DA_entrega = TBAbrir!DA_entrega
    TBGravar!DA_cobranca = TBAbrir!DA_cobranca
    TBGravar!Consumidor_final = TBAbrir!Consumidor_final
    TBGravar!Presenca_comprador = TBAbrir!Presenca_comprador
    TBGravar!CodRef = TBAbrir!CodRef
    TBGravar!FormaPagto = TBAbrir!FormaPagto

    TBGravar!RegimeEspecialTributacao = TBAbrir!RegimeEspecialTributacao
    TBGravar!NaturezaTributacao = TBAbrir!NaturezaTributacao
    TBGravar!TipoTributacao = TBAbrir!TipoTributacao
    TBGravar!RespRetencao = TBAbrir!RespRetencao
    TBGravar!ExigibilidadeISS = TBAbrir!ExigibilidadeISS
    TBGravar!Operacao = TBAbrir!Operacao
    TBGravar!CodTributacaoMun = TBAbrir!CodTributacaoMun
    TBGravar!CodigoAtividade = TBAbrir!CodigoAtividade
    TBGravar.Update
    TBGravar.Close
End If
TBAbrir.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCopiarProdutosNFe()
On Error GoTo tratar_erro

Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select * from tbl_Detalhes_Nota_NFe where Id_nota = " & IDAntigo & " order by ID", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Set TBplano = CreateObject("adodb.recordset")
    TBplano.Open "Select * from tbl_Detalhes_Nota_NFe", Conexao, adOpenKeyset, adLockOptimistic
    TBplano.AddNew
    TBplano!ID_nota = txtId
    TBplano!Id_Item = TBGravar!Int_codigo
    TBplano!Documento_importacao = TBProduto!Documento_importacao
    TBplano!Data_registro = TBProduto!Data_registro
    TBplano!Local_desembaraco = TBProduto!Local_desembaraco
    TBplano!UF_desembaraco = TBProduto!UF_desembaraco
    TBplano!Data_desembaraco = TBProduto!Data_desembaraco
    TBplano!Codigo_exportador = TBProduto!Codigo_exportador
    TBplano!Numero_adicao = TBProduto!Numero_adicao
    TBplano!Numero_sequencial = TBProduto!Numero_sequencial
    TBplano!Codigo_fabricante = TBProduto!Codigo_fabricante
    TBplano!Valor_BC_importacao = TBProduto!Valor_BC_importacao
    TBplano!Valor_despesas = TBProduto!Valor_despesas
    TBplano!Valor_imposto_importacao = TBProduto!Valor_imposto_importacao
    TBplano!Valor_imposto_OperacoesFinanceiras = TBProduto!Valor_imposto_OperacoesFinanceiras
    TBplano!Data = Date
    TBplano!Responsavel = pubUsuario
    TBplano!NCM = TBProduto!NCM
    TBplano!Valor_FOB = TBProduto!Valor_FOB
    TBplano!Valor_frete_int = TBProduto!Valor_frete_int
    TBplano!Valor_seguro = TBProduto!Valor_seguro
    TBplano!Valor_sixcomex = TBProduto!Valor_sixcomex
    TBplano!Valor_bc_PIS_Cofins = TBProduto!Valor_bc_PIS_Cofins
    TBplano!valor_pis = TBProduto!valor_pis
    TBplano!valor_cofins = TBProduto!valor_cofins
    TBplano!Valor_bc_ICMS = TBProduto!Valor_bc_ICMS
    TBplano!Valor_bc_ICMS_fator = TBProduto!Valor_bc_ICMS_fator
    TBplano!Valor_ICMS = TBProduto!Valor_ICMS
    TBplano!Opt_valor_bc_ICMS = TBProduto!Opt_valor_bc_ICMS
    TBplano!Soma_siscomex = TBProduto!Soma_siscomex
    TBplano!Soma_PIS = TBProduto!Soma_PIS
    TBplano!Soma_Cofins = TBProduto!Soma_Cofins
    TBplano!Codigo_ANP = TBProduto!Codigo_ANP
    TBplano!UF_consumo = TBProduto!UF_consumo
    TBplano!Tipo_Produto = TBProduto!Tipo_Produto
    TBplano!Valor_IPI = TBProduto!Valor_IPI
    TBplano.Update
    TBplano.Close
End If
TBProduto.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCopiarCST()
On Error GoTo tratar_erro

'ICMS
If TBGravar!txt_CST <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_ICMS where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_ICMS", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Origem_mercadoria = TBCST!Origem_mercadoria
        TBProduto!Tributacao_ICMS = TBCST!Tributacao_ICMS
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto!Valor_ICMS = TBCST!Valor_ICMS
        TBProduto!Modalidade_determinacao = TBCST!Modalidade_determinacao
        TBProduto!Percentual_reducao_BC = TBCST!Percentual_reducao_BC
        TBProduto!Modalidade_determinacao_ST = TBCST!Modalidade_determinacao_ST
        TBProduto!Percentual_margem_ICMS_ST = TBCST!Percentual_margem_ICMS_ST
        TBProduto!Percentual_reducao_BC_ST = TBCST!Percentual_reducao_BC_ST
        TBProduto!Aliquota_imposto_ST = TBCST!Aliquota_imposto_ST
        TBProduto!Valor_BC_ST = TBCST!Valor_BC_ST
        TBProduto!Valor_ICMS_ST = TBCST!Valor_ICMS_ST
        TBProduto!ICMS_SN = TBCST!ICMS_SN
        TBProduto!Valor_ICMS_SN = TBCST!Valor_ICMS_SN
        TBProduto!Valor_ICMS_desonerado = TBCST!Valor_ICMS_desonerado
        TBProduto!Motivo_ICMS_desonerado = TBCST!Motivo_ICMS_desonerado
        TBProduto!Percentual_ICMS_DIF = TBCST!Percentual_ICMS_DIF
        TBProduto!Valor_ICMS_DIF = TBCST!Valor_ICMS_DIF
        TBProduto!Valor_BC_ICMS_UF_dest = TBCST!Valor_BC_ICMS_UF_dest
        TBProduto!Percentual_provisorio = TBCST!Percentual_provisorio
        TBProduto!Valor_ICMS_INT_UF_dest = TBCST!Valor_ICMS_INT_UF_dest
        TBProduto!Valor_ICMS_INT_UF_rem = TBCST!Valor_ICMS_INT_UF_rem
        TBProduto!Percentual_FCP = TBCST!Percentual_FCP
        TBProduto!Valor_ICMS_FCP = TBCST!Valor_ICMS_FCP
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'IPI
If TBGravar!CST_IPI <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_IPI where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_IPI", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'PIS
If TBGravar!CST_PIS <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_PIS where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_PIS", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If

'Cofins
If TBGravar!CST_Cofins <> "" Then
    Set TBCST = CreateObject("adodb.recordset")
    TBCST.Open "select * from tbl_Detalhes_Nota_CST_Cofins where id_item = " & TBAbrir!Int_codigo, Conexao, adOpenKeyset, adLockOptimistic
    If TBCST.EOF = False Then
        Set TBProduto = CreateObject("adodb.recordset")
        TBProduto.Open "select * from tbl_Detalhes_Nota_CST_Cofins", Conexao, adOpenKeyset, adLockOptimistic
        TBProduto.AddNew
        TBProduto!Id_Item = TBGravar!Int_codigo
        TBProduto!Codigo_situacaoTributaria = TBCST!Codigo_situacaoTributaria
        TBProduto!Valor_BC = TBCST!Valor_BC
        TBProduto.Update
        TBProduto.Close
    End If
    TBCST.Close
End If
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcExcluirCST(ID_nota As Long)
On Error GoTo tratar_erro

Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_ICMS CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_IPI CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_PIS CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
Conexao.Execute "DELETE FROM CST from tbl_Detalhes_Nota_CST_Cofins CST INNER JOIN tbl_detalhes_nota NFP ON NFP.Int_codigo = CST.id_item where NFP.ID_Nota = " & ID_nota
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcBloqueiaNfe()
On Error GoTo tratar_erro

If NFe_liberada = True Then
    With txtCod_Produto
        .Locked = True
'        .TabStop = False
    End With

    Cmd_localizar_CFOP_prod.Enabled = False
    cmdCF.Enabled = False
    With txtCST_ICMS
        .Locked = True
'        .TabStop = False
    End With
    With txtCST_IPI
        .Locked = True
'        .TabStop = False
    End With
    With txtCST_PIS
        .Locked = True
'        .TabStop = False
    End With
    With txtCST_Cofins
        .Locked = True
'        .TabStop = False
    End With
    With txtQtd
        .Locked = True
'        .TabStop = False
    End With
    With txtVLUnit
        .Locked = True
'        .TabStop = False
    End With
    With txt_VlrFrete_prod
        .Locked = True
'        .TabStop = False
    End With
    Chk_tem_IPI_frete_prod.Enabled = False
    With txt_vlrSeguro_prod
        .Locked = True
'        .TabStop = False
    End With
    With txt_OutrasDisp_prod
        .Locked = True
'        .TabStop = False
    End With
    With Txt_valor_total_desc_prod
        .Locked = True
'        .TabStop = False
    End With
    With Txt_n_item
        .Locked = True
'        .TabStop = False
    End With
    With txt_pccliente
        .Locked = True
'        .TabStop = False
    End With
    With Txt_complemento_descricao
        .Locked = True
'        .TabStop = False
    End With
Else
    With txtCod_Produto
        .Locked = False
        .TabStop = True
    End With

    Cmd_localizar_CFOP_prod.Enabled = True
    cmdCF.Enabled = True
    With txtCST_ICMS
        .Locked = False
        .TabStop = True
    End With
    With txtCST_IPI
        .Locked = False
        .TabStop = True
    End With
    With txtCST_PIS
        .Locked = False
        .TabStop = True
    End With
    With txtCST_Cofins
        .Locked = False
        .TabStop = True
    End With
    With txtQtd
        .Locked = False
        .TabStop = True
    End With
    With txtVLUnit
        .Locked = False
        .TabStop = True
    End With
    With txt_VlrFrete_prod
        .Locked = False
        .TabStop = True
    End With
    Chk_tem_IPI_frete_prod.Enabled = True
    With txt_vlrSeguro_prod
        .Locked = False
        .TabStop = True
    End With
    With txt_OutrasDisp_prod
        .Locked = False
        .TabStop = True
    End With
    With Txt_valor_total_desc_prod
        .Locked = False
        .TabStop = True
    End With
    With Txt_n_item
        .Locked = False
        .TabStop = True
    End With
    With txt_pccliente
        .Locked = False
        .TabStop = True
    End With
    With Txt_complemento_descricao
        .Locked = False
        .TabStop = True
    End With
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar1_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro
ID_nota = IIf(txtId.Text <> "", txtId.Text, 0)

Select Case ButtonIndex
    Case 1: ProcNovo
    Case 2: ProcLocalizar
    Case 3: ProcGravar
    Case 4: ProcImprimir
    Case 5: ProcExcluir
    Case 6:
        ProcVerifiFormulario
    '=============================================================
    ' Verifica se é uma nota de venda e se tem duplicatas geradas
    '=============================================================
       If txt_Cond_Recebimento <> "" And Formulario = "Faturamento/Nota fiscal/Própria" And cmbFinalidade_emissao.Text = "1 - Normal" Then
       Set TBLISTA = CreateObject("adodb.recordset")
          TBLISTA.Open "Select ID_Nota from tbl_Detalhes_Recebimento where ID_Nota = " & txtId.Text & " order by dt_Vencimento, txt_parcela", Conexao, adOpenKeyset, adLockOptimistic
          If TBLISTA.EOF = True Then
           USMsgBox "Duplicatas não geradas, favor verificar antes de validar!", vbCritical, "CAPRIND v5.0"
           Exit Sub
          End If
        TBLISTA.Close
       End If
    '=============================================================
        ProcValidarRegistros ListaNota, Formulario
    Case 7: ProcAjuda
    Case 8: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar2_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcNovoProduto
    Case 2: ProcSalvarProduto
    Case 3: ProcExcluirProduto
    Case 4: ProcEmpenho
    Case 6: ProcAjuda
    Case 7: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar3_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: Procnovoservico
    Case 2: ProcSalvarServico
    Case 3: ProcExcluirServico
    Case 4: ProcImprimir
    Case 5: ProcAnterior
    Case 6: ProcProximo
    Case 7: procImpostos_servico
    Case 9: ProcAjuda
    Case 10: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar4_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcSalvarTransp
    Case 2: ProcExcluirTransp
    Case 3: ProcCarregaTransporteProposta
    Case 4: ProcCarregaTransporteCliente
    Case 6: ProcAjuda
    Case 7: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar6_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcGerarDuplicatas
    Case 2: ProcExcluirDuplicatas
    Case 3: ProcAjuda
    Case 5: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub USToolBar7_ButtonClick(ByVal ButtonIndex As Integer, ByVal key As String, ByVal Left As Integer, ByVal Top As Integer, ByVal Width As Integer, ByVal Height As Integer, ByVal Visible As Boolean)
On Error GoTo tratar_erro

Select Case ButtonIndex
    Case 1: ProcFiltrarCarteira
    Case 2: ProcGerarOF
    Case 3: ProcImprimirCartFat
    Case 5: ProcAjuda
    Case 6: ProcSair
End Select

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub procImpostos_servico()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If Novo_Nota2 = True Then
    USMsgBox ("Salve o serviço antes de informar os impostos."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If txtidservico = 0 Or txtidservico = "" Then
    USMsgBox ("Informe o serviço antes de informar os impostos."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
frmFaturamento_Prod_Serv_Impostos_Serv.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub procEnviarImpostoFinanceiro()
On Error GoTo tratar_erro
Dim Valor_retencao_serv_PIS As Double
Dim Valor_retencao_serv_Cofins As Double
Dim Valor_retencao_serv_CSLL As Double
Dim Valor_retencao_serv_INSS As Double
Dim Valor_retencao_serv_ISSQN As Double
Dim Valor_retencao_serv_IRRF As Double

'Soma total de rentenção de serviços
Valor_retencao_serv_PIS = 0
Valor_retencao_serv_Cofins = 0
Valor_retencao_serv_CSLL = 0
Valor_retencao_serv_INSS = 0
Valor_retencao_serv_ISSQN = 0
Valor_retencao_serv_IRRF = 0
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & txtId & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
Do While TBTotaisnota.EOF = False
    If TBTotaisnota!Retencao_PIS = True Then Valor_retencao_serv_PIS = Valor_retencao_serv_PIS + IIf(IsNull(TBTotaisnota!Total_PIS_serv), 0, TBTotaisnota!Total_PIS_serv)
    If TBTotaisnota!Retencao_Cofins = True Then Valor_retencao_serv_Cofins = Valor_retencao_serv_Cofins + IIf(IsNull(TBTotaisnota!Total_Cofins_serv), 0, TBTotaisnota!Total_Cofins_serv)
    If TBTotaisnota!Retencao_CSLL = True Then Valor_retencao_serv_CSLL = Valor_retencao_serv_CSLL + IIf(IsNull(TBTotaisnota!Total_CSLL_serv), 0, TBTotaisnota!Total_CSLL_serv)
    If TBTotaisnota!Retencao_INSS = True Then Valor_retencao_serv_INSS = Valor_retencao_serv_INSS + IIf(IsNull(TBTotaisnota!Total_INSS_serv), 0, TBTotaisnota!Total_INSS_serv)
    If TBTotaisnota!Retencao_ISSQN = True Then Valor_retencao_serv_ISSQN = Valor_retencao_serv_ISSQN + IIf(IsNull(TBTotaisnota!VlrISS), 0, TBTotaisnota!VlrISS)
    If TBTotaisnota!Retencao_IRRF = True Then Valor_retencao_serv_IRRF = Valor_retencao_serv_IRRF + IIf(IsNull(TBTotaisnota!Total_IRRF_serv), 0, TBTotaisnota!Total_IRRF_serv)
    TBTotaisnota.MoveNext
Loop
TBTotaisnota.Close

Set TBFIltro = CreateObject("adodb.recordset")
TBFIltro.Open "Select * from Empresa where Codigo = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBFIltro.EOF = False Then
    If TBFIltro!Simples = True Then Regime = 1
    If TBFIltro!Presumido = True Then Regime = 2
    If TBFIltro!Real = True Then Regime = 3
    If TBFIltro!Simples1 = True Then Regime = 4
    Set TBAfericao = CreateObject("adodb.recordset")
    TBAfericao.Open "Select * from Impostos where Regime = " & Regime & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
    If TBAfericao.EOF = False Then
        If Valor_retencao_serv_PIS <> 0 And IsNull(TBAfericao!IDForn_PIS) = False Then procEnviarImpostoPagar TBAfericao!IDForn_PIS, TBAfericao!Dia_PIS, Valor_retencao_serv_PIS, TBAfericao!ID_PC_PIS
        If Valor_retencao_serv_Cofins <> 0 And IsNull(TBAfericao!IDForn_Cofins) = False Then procEnviarImpostoPagar TBAfericao!IDForn_Cofins, TBAfericao!Dia_Cofins, Valor_retencao_serv_Cofins, TBAfericao!ID_PC_Cofins
        If Valor_retencao_serv_CSLL <> 0 And IsNull(TBAfericao!IDForn_CSLL) = False Then procEnviarImpostoPagar TBAfericao!IDForn_CSLL, TBAfericao!Dia_CSLL, Valor_retencao_serv_CSLL, TBAfericao!ID_PC_CSLL
        If Valor_retencao_serv_INSS <> 0 And IsNull(TBAfericao!IDForn_INSS) = False Then procEnviarImpostoPagar TBAfericao!IDForn_INSS, TBAfericao!Dia_INSS, Valor_retencao_serv_INSS, TBAfericao!ID_PC_INSS
        If Valor_retencao_serv_ISSQN <> 0 And IsNull(TBAfericao!IDForn_ISSQN) = False Then procEnviarImpostoPagar TBAfericao!IDForn_ISSQN, TBAfericao!Dia_ISSQN, Valor_retencao_serv_ISSQN, TBAfericao!ID_PC_ISSQN
        If Valor_retencao_serv_IRRF <> 0 And IsNull(TBAfericao!IDForn_IRRF) = False Then procEnviarImpostoPagar TBAfericao!IDForn_IRRF, TBAfericao!Dia_IRRF, Valor_retencao_serv_IRRF, TBAfericao!ID_PC_IRRF
    End If
    TBAfericao.Close
End If
TBFIltro.Close
    
Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub procEnviarImpostoPagar(IDforn_servico_imposto As Integer, DiaVenc_servico_imposto As Integer, Valor_servico_imposto As Double, IDPC_servico_imposto)
On Error GoTo tratar_erro

'Insere dados na tabela contas a pagar
Set TBReceber = CreateObject("adodb.recordset")
TBReceber.Open "Select * from tbl_contaspagar", Conexao, adOpenKeyset, adLockOptimistic
TBReceber.AddNew
TBReceber!Parcial = False
TBReceber!impresso = False
TBReceber!Bloqueado = False
TBReceber!Logsit = "N"
TBReceber!Despesas_NF = False
TBReceber!Antecipacao = False
TBReceber!Devolucao = False
TBReceber!status = "TÍTULO EM ABERTO"
TBReceber!Responsavel = pubUsuario
'If cbo_PortBanco.Text <> "" Then TBReceber!Banco = cbo_PortBanco.Text
'If cmb_tipopagto <> "" Then TBReceber!FormaBaixa = cmb_tipopagto
'If cmbtipo_conta <> "" Then TBReceber!Class_conta = cmbtipo_conta
TBReceber!txt_ndocumento = IIf(txtNFiscal = "", Null, txtNFiscal)
TBReceber!ID_nota = txtId
TBReceber!Data_transacao = Date
TBReceber!Dt_emissao = txt_DtEmissao.Text
TBReceber!Competencia = IIf(Month(txt_DtEmissao.Text) < 10, "0" & Month(txt_DtEmissao.Text), Month(txt_DtEmissao.Text)) & "/" & Year(txt_DtEmissao.Text)

If Month(Date) = 12 Then
TBReceber!dt_Pagamento = DiaVenc_servico_imposto & "/" & Month(Date) - 11 & "/" & Year(Date) + 1
Else
TBReceber!dt_Pagamento = DiaVenc_servico_imposto & "/" & Month(Date) + 1 & "/" & Year(Date)
End If

TBReceber!int_codforn = IDforn_servico_imposto
TBReceber!txt_condpag = ""
TBReceber!dbl_valorpagto = Valor_servico_imposto
TBReceber!txt_Parcela = "001/001"
Set TBFornecedor = CreateObject("adodb.recordset")
TBFornecedor.Open "Select * from compras_fornecedores where idcliente = " & IDforn_servico_imposto, Conexao, adOpenKeyset, adLockOptimistic
If TBFornecedor.EOF = False Then TBReceber!Txt_fornecedor = IIf(IsNull(TBFornecedor!Nome_Razao), "", TBFornecedor!Nome_Razao)
TBFornecedor.Close
TBReceber!ID_empresa = IDempresa
TBReceber!Tipo = "FO"
TBReceber.Update

'Fluxo de Caixa
Set TBFluxo = CreateObject("adodb.recordset")
TBFluxo.Open "Select * from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBReceber!IDFluxo), 0, TBReceber!IDFluxo) & " and ID_empresa = " & IDempresa, Conexao, adOpenKeyset, adLockOptimistic
If TBFluxo.EOF = True Then TBFluxo.AddNew
TBFluxo!IDintconta = TBReceber!IDintconta
TBFluxo!Operacao = "À Debitar"
TBFluxo!Data = TBReceber!dt_Pagamento
TBFluxo!valor = TBReceber!dbl_valorpagto
TBFluxo!Descricao = TBReceber!Txt_fornecedor
TBFluxo!status = "N"
TBFluxo!int_NotaFiscal = TBReceber!txt_ndocumento
TBFluxo!Instituicao = Null
TBFluxo!ID_empresa = IDempresa
TBFluxo!Bloqueado = False
TBFluxo.Update
Conexao.Execute "Update tbl_contaspagar Set IDFluxo = " & TBFluxo!IDFluxo & " where IdIntConta = " & TBReceber!IDintconta
TBFluxo.Close

'Conta contábil
Set TBCiclo = CreateObject("adodb.recordset")
TBCiclo.Open "select * from familia_financeiro", Conexao, adOpenKeyset, adLockOptimistic
TBCiclo.AddNew
TBCiclo!ID_PC = IDPC_servico_imposto
TBCiclo!IDConta = TBReceber!IDintconta
TBCiclo!IDnota = txtId
TBCiclo!valor = Valor_servico_imposto
TBCiclo!TipoConta = "P"
TBCiclo.Update
TBCiclo.Close

TBReceber.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExcluirImpostoPagar()
On Error GoTo tratar_erro

Permitido2 = False
Set TBTotaisnota = CreateObject("adodb.recordset")
TBTotaisnota.Open "Select * from tbl_Detalhes_Nota where id_nota = " & txtId & " and Tipo = 'S' and (Retencao_PIS = 'True' or Retencao_Cofins = 'True' or Retencao_CSLL = 'True' or Retencao_INSS = 'True' or Retencao_IRRF = 'True' or Retencao_ISSQN = 'True')", Conexao, adOpenKeyset, adLockOptimistic
If TBTotaisnota.EOF = False Then
    Permitido2 = True
End If
TBTotaisnota.Close

If Permitido2 = False Then Exit Sub
Set TBContas = CreateObject("adodb.recordset")
If Opt_saida.Value = True Then
    TBContas.Open "Select * from tbl_ContasPagar where id_nota = " & txtId & " and LogSit = 'N' and Bloqueado = 'False'", Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        Do While TBContas.EOF = False
            
            'Contas contabeis
            Conexao.Execute "DELETE FROM Familia_financeiro WHERE IDConta = " & TBContas!IDintconta & " and Tipoconta = 'P' and Deposito_transf = 'False'"
            
            'Fluxo de Caixa
            Conexao.Execute "DELETE from tbl_Fluxo_de_caixa where IDFluxo = " & IIf(IsNull(TBContas!IDFluxo), 0, TBContas!IDFluxo)
            TBContas.Delete
            
            TBContas.MoveNext
        Loop
    End If
    TBContas.Close
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcImportacao()
On Error GoTo tratar_erro

If Opt_entrada.Value = True And cbo_UF = "EX" Then
    frmFaturamento_Prod_Serv_DI.Show 1
Else
    USMsgBox ("Só é permitido adicionar dados de importação para notas de 'Entrada' com a UF 'EX'."), vbExclamation, "CAPRIND v5.0"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcFiltrarCarteira()
On Error GoTo tratar_erro


frmFaturamento_FiltrarCarteira.Show 1


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCarregaListaCarteira(Pagina As Integer)
On Error GoTo tratar_erro

IDclienteNF = 0
ClienteNF = ""
MoedaNF = ""
OutraMoeda = False
'Debug.print StrSQL_OF
lblRegistros(0).Caption = "Nº de registros: 0"
lblPaginas(0).Caption = "Página: 0 de: 0"


Lista_carteira.ListItems.Clear

If StrSQL_OF = "" Then
    Exit Sub
Else
    If Left(StrSQL_OF, 15) = "Select * from C" And Formulario <> "Estoque/Ordem de faturamento" Then Exit Sub
End If

Set TBLISTA_Faturamento_NF = CreateObject("adodb.recordset")
TBLISTA_Faturamento_NF.Open StrSQL_OF, Conexao, adOpenKeyset, adLockReadOnly
'Debug.print StrSQL_OF

If TBLISTA_Faturamento_NF.EOF = False Then ProcExibePagina (Pagina)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcExibePagina(Pagina)
On Error GoTo tratar_erro

IDclienteNF = 0
ClienteNF = ""
MoedaNF = ""
OutraMoeda = False

Lista_carteira.ListItems.Clear

TBLISTA_Faturamento_NF.PageSize = IIf(txtNreg(0) = "", 30, txtNreg(0))
TBLISTA_Faturamento_NF.AbsolutePage = Pagina
TamanhoPagina = TBLISTA_Faturamento_NF.PageSize
ContadorReg = 1

Contador = 0
Do While TBLISTA_Faturamento_NF.EOF = False And (ContadorReg <= TamanhoPagina)

        With Lista_carteira.ListItems
            If Faturamento_PI = True Then
                .Add , , TBLISTA_Faturamento_NF!CODIGO
                .Item(.Count).SubItems(1) = TBLISTA_Faturamento_NF!Cotacao
                '.Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Empresa), "", TBLISTA_Faturamento_NF!Empresa)
                .Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Desenho), "", TBLISTA_Faturamento_NF!Desenho)
                '.Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!Rev_codinterno), "", TBLISTA_Faturamento_NF!Rev_codinterno)
                .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!N_referencia), "", TBLISTA_Faturamento_NF!N_referencia)
                .Item(.Count).SubItems(4) = IIf(IsNull(TBLISTA_Faturamento_NF!descricao_tecnica), "", TBLISTA_Faturamento_NF!descricao_tecnica)
                .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF!Unidade_com), "", TBLISTA_Faturamento_NF!Unidade_com)
                .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF!PCCliente), "", TBLISTA_Faturamento_NF!PCCliente)
                '.Item(.Count).SubItems(8) = IIf(IsNull(TBLISTA_Faturamento_NF!N_item), "", TBLISTA_Faturamento_NF!N_item)
                .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF!PrazoFinal), "", (Format(TBLISTA_Faturamento_NF!PrazoFinal, "dd/mm/yy")))
                '.Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!preco_lote), "", Format(TBLISTA_Faturamento_NF!preco_lote, "###,##0.00"))
                .Item(.Count).SubItems(8) = IIf(IsNull(TBLISTA_Faturamento_NF!Ncotacao), "", TBLISTA_Faturamento_NF!Ncotacao)
                '.Item(.Count).SubItems(13) = IIf(IsNull(TBLISTA_Faturamento_NF!Revisao), "", TBLISTA_Faturamento_NF!Revisao)
                .Item(.Count).SubItems(9) = IIf(IsNull(TBLISTA_Faturamento_NF!programatexto), "", TBLISTA_Faturamento_NF!programatexto)
                '.Item(.Count).SubItems(15) = IIf(IsNull(TBLISTA_Faturamento_NF!Rev), "", TBLISTA_Faturamento_NF!Rev)
                .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF!IDCliente), "", TBLISTA_Faturamento_NF!IDCliente)
                .Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!Cliente), "", TBLISTA_Faturamento_NF!Cliente)
                .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF!UF), "", TBLISTA_Faturamento_NF!UF)
                '.Item(.Count).SubItems(19) = IIf(TBLISTA_Faturamento_NF!Antecipacao_fat = True, "SIM", "NÃO")
                '.Item(.Count).SubItems(20) = IIf(TBLISTA_Faturamento_NF!Faturamento_parcial = True, "SIM", "NÃO")
'                .Item(.Count).SubItems(22) = IIf(IsNull(TBLISTA_Faturamento_NF!Moeda), "", TBLISTA_Faturamento_NF!Moeda)
                
                Set TBTransporte = CreateObject("adodb.recordset")
                TBTransporte.Open "Select * From vendas_comercial where cotacao = " & TBLISTA_Faturamento_NF!Cotacao, Conexao, adOpenKeyset, adLockOptimistic
                If TBTransporte.EOF = False Then
                .Item(.Count).SubItems(13) = IIf(IsNull(TBTransporte!Transportadora), "", TBTransporte!Transportadora)
                End If
                TBTransporte.Close
                
                .Item(.Count).SubItems(14) = IIf(IsNull(TBLISTA_Faturamento_NF!quantidade), "", Format(TBLISTA_Faturamento_NF!quantidade, "###,##0.0000"))
                .Item(.Count).SubItems(15) = IIf(IsNull(TBLISTA_Faturamento_NF!qtdeliberada), "", Format(TBLISTA_Faturamento_NF!qtdeliberada, "###,##0.0000"))
                .Item(.Count).SubItems(16) = IIf(IsNull(TBLISTA_Faturamento_NF!QtdeFaturada), "", Format(TBLISTA_Faturamento_NF!QtdeFaturada, "###,##0.0000"))
                .Item(.Count).SubItems(17) = IIf(IsNull(TBLISTA_Faturamento_NF!Saldo), "", Format(TBLISTA_Faturamento_NF!Saldo, "###,##0.0000"))
                .Item(.Count).SubItems(18) = IIf(IsNull(TBLISTA_Faturamento_NF!Qtde_empenhada_est), "", Format(TBLISTA_Faturamento_NF!Qtde_empenhada_est, "###,##0.0000"))
                .Item(.Count).SubItems(19) = IIf(IsNull(TBLISTA_Faturamento_NF!Qtde_empenhada_prod), "", Format(TBLISTA_Faturamento_NF!Qtde_empenhada_prod, "###,##0.0000"))
                .Item(.Count).SubItems(20) = IIf(IsNull(TBLISTA_Faturamento_NF!SaldoEstoque), "", Format(TBLISTA_Faturamento_NF!SaldoEstoque, "###,##0.0000"))
                '.Item(.Count).SubItems(30) = IIf(IsNull(TBLISTA_Faturamento_NF!TabelaSN), "0", TBLISTA_Faturamento_NF!TabelaSN)
                .Item(.Count).SubItems(21) = IIf(IsNull(TBLISTA_Faturamento_NF!Obs_faturamento), "", TBLISTA_Faturamento_NF!Obs_faturamento)
                .Item(.Count).SubItems(22) = IIf(IsNull(TBLISTA_Faturamento_NF!Moeda), "", TBLISTA_Faturamento_NF!Moeda)
            Else
                .Add , , TBLISTA_Faturamento_NF!IDlista
                .Item(.Count).SubItems(1) = TBLISTA_Faturamento_NF!IDpedido
                '.Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Empresa), "", TBLISTA_Faturamento_NF!Empresa)
                .Item(.Count).SubItems(2) = IIf(IsNull(TBLISTA_Faturamento_NF!Desenho), "", TBLISTA_Faturamento_NF!Desenho)
                .Item(.Count).SubItems(3) = IIf(IsNull(TBLISTA_Faturamento_NF!N_referencia), "", TBLISTA_Faturamento_NF!N_referencia)
                .Item(.Count).SubItems(4) = IIf(IsNull(TBLISTA_Faturamento_NF!Descricao), "", TBLISTA_Faturamento_NF!Descricao)
                .Item(.Count).SubItems(5) = IIf(IsNull(TBLISTA_Faturamento_NF!Unidade_com), "", TBLISTA_Faturamento_NF!Unidade_com)
                .Item(.Count).SubItems(7) = IIf(IsNull(TBLISTA_Faturamento_NF!Prazo), "", (Format(TBLISTA_Faturamento_NF!Prazo, "dd/mm/yy")))
                .Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!preco_total), "", Format(TBLISTA_Faturamento_NF!preco_total, "###,##0.00"))
                .Item(.Count).SubItems(6) = IIf(IsNull(TBLISTA_Faturamento_NF!Pedido), "", TBLISTA_Faturamento_NF!Pedido)
                .Item(.Count).SubItems(10) = IIf(IsNull(TBLISTA_Faturamento_NF!IDFornecedor), "", TBLISTA_Faturamento_NF!IDFornecedor)
                .Item(.Count).SubItems(11) = IIf(IsNull(TBLISTA_Faturamento_NF!Fornecedor), "", TBLISTA_Faturamento_NF!Fornecedor)
                .Item(.Count).SubItems(12) = IIf(IsNull(TBLISTA_Faturamento_NF!Estado), "", TBLISTA_Faturamento_NF!Estado)
                .Item(.Count).SubItems(22) = IIf(IsNull(TBLISTA_Faturamento_NF!Moeda), "", TBLISTA_Faturamento_NF!Moeda)
                .Item(.Count).SubItems(13) = IIf(IsNull(TBLISTA_Faturamento_NF!transporte), "", TBLISTA_Faturamento_NF!transporte)
                .Item(.Count).SubItems(18) = IIf(IsNull(TBLISTA_Faturamento_NF!Quant_Comp), "", Format(TBLISTA_Faturamento_NF!Quant_Comp, "###,##0.0000"))
                .Item(.Count).SubItems(19) = IIf(IsNull(TBLISTA_Faturamento_NF!QtdeFaturada), "", Format(TBLISTA_Faturamento_NF!QtdeFaturada, "###,##0.0000"))
                .Item(.Count).SubItems(20) = IIf(IsNull(TBLISTA_Faturamento_NF!Saldo), "", Format(TBLISTA_Faturamento_NF!Saldo, "###,##0.0000"))
                .Item(.Count).SubItems(21) = IIf(IsNull(TBLISTA_Faturamento_NF!Obs_pedido), "", TBLISTA_Faturamento_NF!Obs_pedido)
           
            End If
        End With
 
    TBLISTA_Faturamento_NF.MoveNext
    ContadorReg = ContadorReg + 1
    Contador = Contador + 1
Loop
lblRegistros(0).Caption = "Nº de registros: " & TBLISTA_Faturamento_NF.RecordCount
If TBLISTA_Faturamento_NF.AbsolutePage = adPosBOF Then
   lblPaginas(0).Caption = "Página: 1 de: " & TBLISTA_Faturamento_NF.PageCount
ElseIf TBLISTA_Faturamento_NF.AbsolutePage = adPosEOF Then
        lblPaginas(0).Caption = "Página: " & TBLISTA_Faturamento_NF.PageCount & " de: " & TBLISTA_Faturamento_NF.PageCount
    Else
        lblPaginas(0).Caption = "Página: " & TBLISTA_Faturamento_NF.AbsolutePage - 1 & " de: " & TBLISTA_Faturamento_NF.PageCount
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcSalvarTransporte()
On Error GoTo tratar_erro
If TipoNF = "SA" Then Exit Sub


Set TBPedido = CreateObject("adodb.recordset")
TBPedido.Open "Select * From vendas_comercial where cotacao = " & Var, Conexao, adOpenKeyset, adLockOptimistic
If TBPedido.EOF = False Then
Set TBTransporte = CreateObject("adodb.recordset")
TBTransporte.Open "Select * From tbl_Dados_transp where ID_Nota = " & txtId.Text, Conexao, adOpenKeyset, adLockOptimistic
If TBTransporte.EOF = True Then
TBTransporte.AddNew
End If
TBTransporte!ID_nota = txtId.Text
'========================================
' Se a transportadora 1 for cliente
'========================================
If TBPedido!Tipo_transp = "C" Then
Set TBClientes = CreateObject("adodb.recordset")
TBClientes.Open "Select * From clientes where IDCliente = " & TBPedido!IdIntTransp, Conexao, adOpenKeyset, adLockOptimistic
If TBClientes.EOF = False Then
TBTransporte!IdIntTransp = TBPedido!IdIntTransp
TBTransporte!txt_Frete_Conta = IIf(TBPedido!Tipo_Frete = "EMITENTE (CIF)", "0", "1")
TBTransporte!txt_Razao = TBPedido!Transportadora
TBTransporte!txt_CNPJ = TBClientes!CPF_CNPJ
TBTransporte!txt_IE = TBClientes!RG_IE
TBTransporte!txt_Endereco = TBClientes!Endereco
TBTransporte!txt_Municipio = TBClientes!Cidade
TBTransporte!txt_UF = TBClientes!UF
TBTransporte!int_numero = TBClientes!Numero
TBTransporte!Tipo_transp = TBPedido!Tipo_transp
TBTransporte.Update
'TBTransporte.Close
End If
End If

'========================================
' Se a transportadora 1 for Fornecedor
'========================================
If TBPedido!Tipo_transp = "F" Then
Set TBClientes = CreateObject("adodb.recordset")
TBClientes.Open "Select * From Compras_fornecedores where IDCliente = " & TBPedido!IdIntTransp, Conexao, adOpenKeyset, adLockOptimistic
If TBClientes.EOF = False Then
TBTransporte!IdIntTransp = TBPedido!IdIntTransp
TBTransporte!txt_Frete_Conta = IIf(TBPedido!Tipo_Frete = "EMITENTE (CIF)", "0", "1")
TBTransporte!txt_Razao = TBPedido!Transportadora
TBTransporte!txt_CNPJ = TBClientes!CPF_CNPJ
TBTransporte!txt_IE = TBClientes!RG_IE
TBTransporte!txt_Endereco = TBClientes!Endereco
TBTransporte!txt_Municipio = TBClientes!Cidade
TBTransporte!txt_UF = TBClientes!Estado
TBTransporte!int_numero = TBClientes!Numero
TBTransporte!Tipo_transp = TBPedido!Tipo_transp
TBTransporte.Update
'TBTransporte.Close
End If

End If
'========================================
' Se a transportadora 1 for Empresa
'========================================
If TBPedido!Tipo_transp = "E" Then
Set TBClientes = CreateObject("adodb.recordset")
TBClientes.Open "Select * From EMPRESA where CODIGO = " & TBPedido!IdIntTransp, Conexao, adOpenKeyset, adLockOptimistic
If TBClientes.EOF = False Then
TBTransporte!IdIntTransp = TBPedido!IdIntTransp
TBTransporte!txt_Frete_Conta = IIf(TBPedido!Tipo_Frete = "EMITENTE (CIF)", "0", "1")
TBTransporte!txt_Razao = TBPedido!Transportadora
TBTransporte!txt_CNPJ = TBClientes!CNPJ
TBTransporte!txt_CNPJ = TBClientes!CNPJ
TBTransporte!txt_IE = TBClientes!IE
TBTransporte!txt_Endereco = TBClientes!Endereco
TBTransporte!txt_Municipio = TBClientes!Cidade
TBTransporte!txt_UF = TBClientes!UF
TBTransporte!UF_embarque = TBClientes!UF
TBTransporte!Local_embarque = TBClientes!Cidade
TBTransporte!int_numero = TBClientes!Numero
TBTransporte!Tipo_transp = TBPedido!Tipo_transp
TBTransporte.Update
'TBTransporte.Close
End If
End If
End If



Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcGerarOF()
On Error GoTo tratar_erro

NotaFiscalPronta = False

If Incluir = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " você não tem acesso a este recurso."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If FunVerifRegimeEmpresa(txtIDEmpresa.Text) = 1 Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select Tabela FROM Impostos_TabelaDAS where ID_empresa = " & IDempresa & " and Ativado = 1 group by Tabela", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = True Then
        USMsgBox ("Não é permitido criar nota fiscal, pois não existe nenhuma tabela do simples nacional ativa."), vbExclamation, "CAPRIND v5.0"
        TBAbrir.Close
        Exit Sub
    End If
    TBAbrir.Close
End If

If Faturamento_PI = True Then
    If Faturamento_Produtos = True Then
     NomeCampo = "produto"
    Else
     NomeCampo = "serviço"
    End If
Else
    NomeCampo = "produto"
End If

Permitido = False
Cont = 0
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If USMsgBox("Deseja realmente gerar ordem de faturamento deste(s) " & NomeCampo & "(s)?", vbYesNo, "CAPRIND v5.0") = vbYes Then
                ProcLimpaCamposNota
                Else
                Exit Sub
                End If
            End If
            Permitido = True
            RegimeEmpresa = FunVerifRegimeEmpresa(txtIDEmpresa.Text)
'=======================================================
'Começa a carregar dados do pedido na Ordem de faturamento
'=======================================================
            ProcNovoPedido .ListItems.Item(InitFor).ListSubItems(1), Faturamento_PI
            Var = .ListItems.Item(InitFor).ListSubItems(1)
            Moeda = .ListItems.Item(InitFor).ListSubItems(22)
            OutraMoeda = IIf(.ListItems.Item(InitFor).ListSubItems(22) <> "REAL", True, False)
            Cont = Cont + 1
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe o(s) " & NomeCampo & "(s) antes de gerar a ordem de faturamento."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If

If OutraMoeda = True Then
    If Moeda <> "REAL" Then
Mensagem:
        Dolar = InputBox("Favor informar o valor do " & Moeda & ".")
        If Dolar = "" Then Exit Sub
        If IsNumeric(Dolar) = False Then
            USMsgBox ("Só é permitido número neste campo."), vbExclamation, "CAPRIND v5.0"
            GoTo Mensagem
        End If
        ValorMoeda = Dolar
    End If
End If

GerarOF = True
Novo_Nota = True
Cmb_modelo = "55 - Nota Fiscal Eletrônica"
If Faturamento_PI = True Then
    If Faturamento_Produtos = True Then TipoNF = "M1" Else TipoNF = "SA"
Else
    TipoNF = "M1"
End If
'=======================================================
' Gravar os dados da Nota fiscal
'=======================================================

ProcSalvar TipoNF, 1, txtIDEmpresa.Text

Permitido = False
'=======================================================
' Inicio do cadastro de produtos e serviços
'=======================================================
Agrupar_Produtos = False
With Lista_carteira
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            ProcEnviaDadosPedido .ListItems.Item(InitFor).ListSubItems(1), Faturamento_Vendas_PI
            If Faturamento_Vendas_PI = True Then
                If Faturamento_Produtos = True Then
                    If Permitido = False And Cont > 1 Then
                        If USMsgBox("Deseja agrupar o(s) produto(s) com o mesmo código interno, pedido do cliente e número do item?", vbYesNo, "CAPRIND v5.0") = vbYes Then
                        Permitido1 = True
                        Agrupar_Produtos = True
                        Else
                        Permitido1 = False
                        Agrupar_Produtos = False
                        End If
                       Else
                       Agrupar_Produtos = False
                    End If
                    Permitido = True
                    Procenviadadoslista .ListItems.Item(InitFor), True, Permitido1, Faturamento_PI, .ListItems.Item(InitFor).ListSubItems(17)
                Else
                    ProcEnviadadosListaServicos .ListItems.Item(InitFor), True, .ListItems.Item(InitFor).ListSubItems(14)
                End If
            Else
                Permitido = True
                Procenviadadoslista .ListItems.Item(InitFor), Faturamento_Comercial, False, Faturamento_PI, .ListItems.Item(InitFor).ListSubItems(18)
            End If
        End If
    Next InitFor
End With
ProcCarregaLista
ProcCarregaListaServicos

If NotaFiscalPronta = False Then
ProcGravarTotaisNota
ComPedido = True

If Formulario <> "Estoque/Ordem de faturamento" Then
ProcAtualizarDadosAdicionais
End If

ProcCarregaListaNota (1)
End If

USMsgBox ("Nova ordem de faturamento cadastrada com sucesso."), vbInformation, "CAPRIND v5.0"
With txtserie
    .Locked = False
    .TabStop = True
End With
Frame1(6).Enabled = True
Novo_Nota = False
ProcCarregaListaCarteira (1)

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function VerificaContaBaixada(ID_nota As Long, Acao As String, MostrarMsg As Boolean) As Boolean
On Error GoTo tratar_erro

VerificaContaBaixada = False
Set TBAbrir = CreateObject("adodb.recordset")
TBAbrir.Open "Select Id from tbl_Detalhes_Recebimento where ID_nota = " & ID_nota, Conexao, adOpenKeyset, adLockOptimistic
If TBAbrir.EOF = False Then
    Set TBAbrir = CreateObject("adodb.recordset")
    TBAbrir.Open "Select CFOP.IDCountCfop from tbl_Detalhes_Nota NFP INNER JOIN tbl_NaturezaOperacao CFOP ON CFOP.IDCountCfop = NFP.ID_CFOP where NFP.ID_nota = " & ID_nota & " and CFOP.Devolucao = 'True'", Conexao, adOpenKeyset, adLockOptimistic
    If TBAbrir.EOF = False And (Opt_saida.Value = True And Len(txttipocliente) = 1 Or Opt_entrada.Value = True And Len(txttipocliente) = 2) Then
        'Fornecedor
        If Opt_saida.Value = True And Len(txttipocliente) = 1 Then TextoFiltro = "tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (txt_pedido IS NULL or txt_pedido = N'')"
        'Cliente
        If Opt_entrada.Value = True And Len(txttipocliente) = 2 Then TextoFiltro = "tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')"
    Else
        If Opt_saida.Value = True Then
            TextoFiltro = "tbl_contas_receber where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and (Proposta IS NULL or Proposta = N'')"
        Else
            TextoFiltro = "tbl_ContasPagar where ID_nota = " & ID_nota & " and Status <> 'TÍTULO EM ABERTO' and Despesas_NF = 'False' and (txt_pedido IS NULL or txt_pedido = N'')"
        End If
    End If
    
    Set TBContas = CreateObject("adodb.recordset")
    TBContas.Open "Select IdIntConta from " & TextoFiltro, Conexao, adOpenKeyset, adLockOptimistic
    If TBContas.EOF = False Then
        VerificaContaBaixada = True
        If MostrarMsg = True Then USMsgBox ("Não é permitido " & Acao & ", pois existe(m) duplicata(s) na nota que já foi(ram) baixada(s) no financeiro."), vbExclamation, "CAPRIND v5.0"
        TBContas.Close
        Exit Function
    End If
    TBContas.Close
End If
TBAbrir.Close
    
Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Function FunCalulaArredondaICMS(ICMS_Arredondar As Double, BC_Arredondar As Double, NaoArredondar As Boolean) As Double
On Error GoTo tratar_erro

If NaoArredondar = True Then
    'Calculo sem arredondamento
    FunCalulaArredondaICMS = (BC_Arredondar * ICMS_Arredondar) / 100
    If FunCalulaArredondaICMS <> Int(FunCalulaArredondaICMS) Then
        NumeroInteiro() = Split(FunCalulaArredondaICMS, ",")
        FunCalulaArredondaICMS = NumeroInteiro(0) & "," & Left(NumeroInteiro(1), 2)
    End If
Else
    'Calculo com arredondamento
    FunCalulaArredondaICMS = (BC_Arredondar * ICMS_Arredondar) / 100
End If

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
    Exit Function
End Function

Public Sub ProcMostraValoresOF()
On Error GoTo tratar_erro

Set TBFerramentas = CreateObject("adodb.recordset")
TBFerramentas.Open "Select * from empresa where codigo = " & txtIDEmpresa.Text & " and Esconder_ValorOF = 'True'", Conexao, adOpenKeyset, adLockOptimistic
If TBFerramentas.EOF = False Then
    With SSFaturamento
        .TabVisible(6) = False
        .TabsPerRow = 6
    End With
    
    'Aba principal
    Frame1(8).Visible = False
    'Frame1(28).Visible = False
    With ListaNota
        .ColumnHeaders(7).Width = 0
        .ColumnHeaders(8).Width = 7605
        .Height = Frame1(29).Top - (Frame1(7).Top + Frame1(7).Height)
    End With
    
    'Aba de produtos
    With ListaProdutos
        .ColumnHeaders(5).Width = 4705
        .ColumnHeaders(9).Width = 0
        .ColumnHeaders(10).Width = 0
        .ColumnHeaders(11).Width = 0
        .ColumnHeaders(12).Width = 0
        .ColumnHeaders(13).Width = 0
        .ColumnHeaders(14).Width = 0
        .ColumnHeaders(17).Width = 0
        .ColumnHeaders(18).Width = 0
        .ColumnHeaders(19).Width = 0
        .ColumnHeaders(20).Width = 0
        .ColumnHeaders(21).Width = 0
        .ColumnHeaders(22).Width = 0
        .ColumnHeaders(23).Width = 0
    End With
    txtnaovisualizarvalor.Visible = True
    txtnaovisualizarvalor1.Visible = True
    txtVLUnit.Visible = False
    txtVLTotal.Visible = False
    txtICMS.Visible = False
    txtIPI.Visible = False
    txtValor_IPI.Visible = False
    txt_VlrFrete_prod.Visible = False
    Chk_tem_IPI_frete_prod.Visible = False
    txt_vlrSeguro_prod.Visible = False
    txt_OutrasDisp_prod.Visible = False
    Txt_valor_total_desc_prod.Visible = False
    chkNaoArredondar.Visible = False
    
'    Frame1(30).Top = (Frame1(11).Top - Frame1(30).Height) + Frame1(11).Height
    Frame1(10).Visible = False
    Frame1(11).Visible = False
'    listaProdutos.Height = Frame1(30).Top - (Frame1(9).Top + Frame1(9).Height)
    
    'Aba de serviços
    With Listaservicos
        .ColumnHeaders(4).Width = 7105
        .ColumnHeaders(8).Width = 0
        .ColumnHeaders(9).Width = 0
        .ColumnHeaders(10).Width = 0
        .ColumnHeaders(11).Width = 0
    End With
    txtnaovisualizarvalor2.Visible = True
    txtVlrunitserv.Visible = False
    txtVlrtotalserv.Visible = False
    
    Frame1(14).Visible = False
Else
     With SSFaturamento
'        .TabVisible(6) = True
'        .TabsPerRow = 7
    End With
    
    'Aba principal
    Frame1(8).Visible = True
   ' Frame1(28).Visible = True
    Frame1(29).Top = Frame1(8).Top - Frame1(29).Height
    With ListaNota
        .ColumnHeaders(7).Width = 1200
        .ColumnHeaders(8).Width = 6405
        .Height = Frame1(29).Top - (Frame1(7).Top + Frame1(7).Height)
    End With
    
    'Aba de produtos
    With ListaProdutos
        .ColumnHeaders(5).Width = 3105
        .ColumnHeaders(9).Width = 1200
        .ColumnHeaders(10).Width = 1200
        .ColumnHeaders(11).Width = 700
        .ColumnHeaders(12).Width = 1099
        .ColumnHeaders(13).Width = 700
        .ColumnHeaders(14).Width = 1099
        .ColumnHeaders(17).Width = 1200
        .ColumnHeaders(18).Width = 1200
        .ColumnHeaders(19).Width = 1399
        .ColumnHeaders(20).Width = 1200
        .ColumnHeaders(21).Width = 1400
        .ColumnHeaders(22).Width = 1400
        .ColumnHeaders(23).Width = 1200
    End With
        
    txtnaovisualizarvalor.Visible = False
    txtnaovisualizarvalor1.Visible = False
    txtVLUnit.Visible = True
    txtVLTotal.Visible = True
    txtICMS.Visible = True
    txtIPI.Visible = True
    txtValor_IPI.Visible = True
    txt_VlrFrete_prod.Visible = True
    Chk_tem_IPI_frete_prod.Visible = True
    txt_vlrSeguro_prod.Visible = True
    txt_OutrasDisp_prod.Visible = True
    Txt_valor_total_desc_prod.Visible = True
    chkNaoArredondar.Visible = True
    
    Frame1(10).Visible = True
    Frame1(11).Visible = True
    
    'Aba de serviços
    With Listaservicos
        .ColumnHeaders(4).Width = 4054
        .ColumnHeaders(8).Width = 1200
        .ColumnHeaders(9).Width = 1200
        .ColumnHeaders(10).Width = 1000
        .ColumnHeaders(11).Width = 1099
    End With
    txtnaovisualizarvalor2.Visible = False
    txtVlrunitserv.Visible = True
    txtVlrtotalserv.Visible = True
    
    Frame1(14).Visible = True
End If
TBFerramentas.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcCentroCusto()
On Error GoTo tratar_erro

If lst_Duplicata.ListItems.Count = 0 Then Exit Sub
If Txt_ID_duplicata = "" Or Txt_ID_duplicata = "0" Then
    USMsgBox ("Informe a duplicata antes de cadastrar/visualizar o(s) centro(s) de custo."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
Financeiro_Contas_Pagar = False
Financeiro_Contas_Pagas = False
Faturamento = True
frmContas_CC.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcVerifiFormulario()
On Error GoTo tratar_erro

If Faturamento_NF_Saida = False Then
    If Left(Caption, 7) = "Estoque" Then Formulario = "Estoque/Nota fiscal" Else Formulario = "Faturamento/Nota fiscal/Terceiros"
Else
    If Left(Caption, 7) = "Estoque" Then Formulario = "Estoque/Ordem de faturamento" Else Formulario = "Faturamento/Nota fiscal/Própria"
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcImprimirCartFat()
On Error GoTo tratar_erro

If Lista_carteira.ListItems.Count = 0 Then Exit Sub
If Faturamento_PI = True Then NomeRel = "Estoque_ordemfaturamento_carteiraPI.rpt" Else NomeRel = "Estoque_ordemfaturamento_carteiraPC.rpt"
ProcImprimirRel FormulaRelOF, ""

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Private Sub ProcEmpenho()
On Error GoTo tratar_erro

If Alterar = False Then
    USMsgBox ("Atenção usuário " & pubUsuario & " voce não tem acesso a este recurso.")
    Exit Sub
End If

Permitido = False
With ListaProdutos
    For InitFor = 1 To .ListItems.Count
        If .ListItems.Item(InitFor).Checked = True Then
            If Permitido = False Then
                If Cmb_opcao_lista_Produtos = "Empenhar" Then
                    MsgTexto = "empenhar este"
                    MsgTexto1 = "Empenho"
                Else
                    MsgTexto = "cancelar o empenho deste"
                    MsgTexto1 = "Cancelamento do empenho"
                End If
                If USMsgBox("Deseja realmente " & MsgTexto & " produto do estoque?", vbYesNo, "CAPRIND v5.0") = vbNo Then Exit Sub
            End If
                                                                                   
            Permitido = True
            If Cmb_opcao_lista_Produtos = "Cancelar empenho" Then
                Evento = "Cancelar empenho"
                Conexao.Execute "DELETE from Estoque_controle_empenho_vendas where ID_Faturamento = " & .ListItems(InitFor)
            Else
                Evento = "Empenhar"
                
                valor = .ListItems(InitFor).ListSubItems(7)
                'Verifica qtde. dos pedidos
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select SUM(ISNULL(Quantidade, 0)) as Qtd from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Qtd = IIf(IsNull(TBProduto!Qtd), 0, TBProduto!Qtd)
                End If
                valor = valor - Qtd 'Saldo da NF = (qtde. da NF - qtde. dos pedidos)
                                
                Set TBProduto = CreateObject("adodb.recordset")
                TBProduto.Open "Select * from tbl_Detalhes_Nota_pedidos where ID_prod_NF = " & .ListItems(InitFor), Conexao, adOpenKeyset, adLockOptimistic
                If TBProduto.EOF = False Then
                    Do While TBProduto.EOF = False
                        Valor2 = IIf(IsNull(TBProduto!quantidade), 0, TBProduto!quantidade) 'Quantidade do pedido
                        Valor2 = Valor2 - FunVerifQtdeEmpenhada("ECEV.ID_carteira = " & TBProduto!ID_carteira)
                        ProcEmpenhaEstoque TBProduto!Codinterno, True, .ListItems(InitFor)
                        TBProduto.MoveNext
                    Loop
                End If
                TBProduto.Close
                          
                If valor > 0 Then
                    valor = valor - FunVerifQtdeEmpenhada("NFPP.ID_prod_NF = " & .ListItems.Item(InitFor) & " and EC.Desenho = '" & .ListItems.Item(InitFor).ListSubItems(1) & "'")
                    ProcEmpenhaEstoque .ListItems(InitFor).ListSubItems(1), False, .ListItems(InitFor)
                End If
                '==================================
                Modulo = Formulario
                ID_documento = .ListItems(InitFor)
                If txtNFiscal = "" Then NomeCampo = "N° ordem: " & txtId Else NomeCampo = "N° nota: " & txtNFiscal
                Documento = NomeCampo & " - Tipo: " & TipoNF & " - Série: " & txtserie
                Documento1 = "Cód. interno: " & .ListItems.Item(InitFor).ListSubItems(1)
                ProcGravaEvento
                '==================================
            End If
        End If
    Next InitFor
End With
If Permitido = False Then
    USMsgBox ("Informe o(s) produto(s) antes de empenhar/cancelar."), vbExclamation, "CAPRIND v5.0"
Else
    USMsgBox (MsgTexto1 & " efetuado com sucesso."), vbInformation, "CAPRIND v5.0"
    ProcCarregaLista
    If CodigoLista1 <> 0 And ListaProdutos.ListItems.Count <> 0 Then
        ListaProdutos.SelectedItem = ListaProdutos.ListItems(CodigoLista1)
        ListaProdutos.SetFocus
    End If
End If

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Function FunVerifQtdeEmpenhada(TextoFiltro As String) As Double
On Error GoTo tratar_erro

FunVerifQtdeEmpenhada = 0
Set TBFI = CreateObject("adodb.recordset")
TBFI.Open "Select ISNULL(SUM(Qtde_empenhada), 0) as Valor1 from (tbl_Detalhes_Nota_pedidos NFPP INNER JOIN Estoque_Controle_Empenho_Vendas ECEV ON ECEV.ID_carteira = NFPP.ID_carteira) INNER JOIN Estoque_controle EC ON EC.IDestoque = ECEV.ID_estoque where " & TextoFiltro & " and ECEV.Qtde_empenhada - ISNULL(ECEV.Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
If TBFI.EOF = False Then FunVerifQtdeEmpenhada = TBFI!Valor1
TBFI.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Function

Private Sub ProcEmpenhaEstoque(Codinterno As String, ProdPed As Boolean, ID_Faturamento As Long)
On Error GoTo tratar_erro

Set TBEstoque = CreateObject("adodb.recordset")
TBEstoque.Open "Select * from Estoque_produtos where desenho = '" & Codinterno & "' and estoque_real > 0 and Liberado = 'SIM' order by Data, IdEstoque", Conexao, adOpenKeyset, adLockOptimistic
If TBEstoque.EOF = False Then
    Do While TBEstoque.EOF = False And IIf(ProdPed = True, Valor2 > 0, valor > 0)

        Qtde = TBEstoque!estoque_real 'Quantidade da RE
        
        'Verifica empenho de vendas
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select Sum(Qtde_empenhada - ISNULL(Qtde_saida, 0)) as Valor from Estoque_Controle_Empenho_Vendas where ID_estoque = " & TBEstoque!IDEstoque & " and Qtde_empenhada - ISNULL(Qtde_saida, 0) > 0", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then Estoquereal = IIf(IsNull(TBFI!valor), 0, TBFI!valor)
        
        'Verifica empenho na produção
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select Sum(PNFC.Quantidade - PNFC.Qtde_saida) as Valor from (Producao_NF_Consignada PNFC INNER JOIN Producaomaterial PM ON PM.Ordem = PNFC.Ordem and PM.Codigo = PNFC.Codinterno) INNER JOIN Producao P ON P.Ordem = PNFC.Ordem where PNFC.IDestoque = " & TBEstoque!IDEstoque & " and PNFC.Quantidade - PNFC.Qtde_saida > 0 and P.Status <> 'Cancelada' and P.Concluida = 0 and (PM.Saida = 'NÃO' OR PM.Saida = 'PARCIAL')", Conexao, adOpenKeyset, adLockOptimistic
        If TBFI.EOF = False Then Estoquereal = Estoquereal + IIf(IsNull(TBFI!valor), 0, TBFI!valor)
        TBFI.Close
        Qtde = Qtde - Estoquereal
        
        Set TBGravar = CreateObject("adodb.recordset")
        TBGravar.Open "Select * from estoque_controle_empenho_vendas", Conexao, adOpenKeyset, adLockOptimistic
        TBGravar.AddNew
        TBGravar!Data = Date
        TBGravar!Responsavel = pubUsuario
        TBGravar!ID_estoque = TBEstoque!IDEstoque
        If ProdPed = True Then TBGravar!ID_carteira = TBProduto!ID_carteira
        TBGravar!ID_Faturamento = ID_Faturamento
        If Qtde >= IIf(ProdPed = True, Valor2, valor) Then TBGravar!Qtde_empenhada = IIf(ProdPed = True, Valor2, valor) Else TBGravar!Qtde_empenhada = Qtde
        
        If ProdPed = True Then Valor2 = Valor2 - TBGravar!Qtde_empenhada Else valor = valor - TBGravar!Qtde_empenhada
        
        TBGravar.Update
        TBGravar.Close
        
        TBEstoque.MoveNext
    Loop
End If
TBEstoque.Close

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Sub ProcCheckList()
On Error GoTo tratar_erro

If txtId = "" Then
    USMsgBox "Informe a nota fiscal antes de visualizar check-list de importação.", vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
If Novo_Nota = True Then
    USMsgBox ("Salve a nota fiscal antes de visualizar check-list de importação."), vbExclamation, "CAPRIND v5.0"
    Exit Sub
End If
frmFaturamento_Prod_Serv_Checklist.Show 1

Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Sub ProcCorrigeValorImpostosSN(IDnota As Long)
On Error GoTo tratar_erro

AtualizaImpSN = True
Set TBProduto = CreateObject("adodb.recordset")
TBProduto.Open "Select NF.ID_empresa, NF.Id_Int_Cliente, NF.txt_Razao_Nome, NF.TabelaSN, NF.txt_UF, NFE.Consumidor_final, NFE.Finalidade_emissao, NFP.* from ((tbl_Dados_Nota_Fiscal NF INNER JOIN tbl_Detalhes_Nota NFP ON NFP.ID_nota = NF.ID) INNER JOIN tbl_Dados_Nota_Fiscal_NFe NFE ON NFE.ID_nota = NF.ID) INNER JOIN Impostos I ON I.ID_empresa = NF.ID_empresa where NF.ID = " & IDnota & " and NF.Alterar = 'False' and I.Regime = 1", Conexao, adOpenKeyset, adLockOptimistic
If TBProduto.EOF = False Then
    Do While TBProduto.EOF = False
        Valor_total = IIf(IsNull(TBProduto!dbl_ValorTotal), 0, TBProduto!dbl_ValorTotal) + IIf(IsNull(TBProduto!Valor_frete), 0, TBProduto!Valor_frete) + IIf(IsNull(TBProduto!Valor_seguro), 0, TBProduto!Valor_seguro) + IIf(IsNull(TBProduto!Valor_acessorias), 0, TBProduto!Valor_acessorias) - IIf(IsNull(TBProduto!Valor_desconto), 0, TBProduto!Valor_desconto)
        If IsNull(TBProduto!ID_CFOP) = False And TBProduto!ID_CFOP <> "" Then ProcControleImposto TBProduto!ID_CFOP, IIf(IsNull(TBProduto!Id_Int_Cliente), 0, TBProduto!Id_Int_Cliente)
        If TBProduto!Tipo = "P" Then
            ProcVerifImpostosEmpresa TBProduto!ID_empresa, TBProduto!retorno, "", False, 0, False, TBProduto!TabelaSN, Lbl2.Caption
            'Novo cálculo simples nacional 2018
            If DAS <> 0 Then
                NovoValor = Replace(DAS, ",", ".")
                Conexao.Execute "UPDATE tbl_Totais_Nota Set DAS = " & NovoValor & " where ID_nota = " & IDnota
            End If
            If TBProduto!CST_PIS = "01" Or TBProduto!CST_PIS = "03" Or TBProduto!CST_PIS = "49" Or TBProduto!CST_PIS = "98" Or TBProduto!CST_PIS = "99" Then
                TBProduto!PIS_Prod = PIS_Prod
                If PIS_Prod <> 0 Then TBProduto!Total_PIS_prod = Format((Valor_total * PIS_Prod) / 100, "###,##0.00") Else TBProduto!Total_PIS_prod = 0
            Else
                TBProduto!PIS_Prod = 0
                TBProduto!Total_PIS_prod = 0
            End If
            If TBProduto!CST_Cofins = "01" Or TBProduto!CST_Cofins = "02" Or TBProduto!CST_Cofins = "03" Or TBProduto!CST_Cofins = "49" Or TBProduto!CST_Cofins = "98" Or TBProduto!CST_Cofins = "99" Then
                TBProduto!Cofins_Prod = Cofins_Prod
                If Cofins_Prod <> 0 Then TBProduto!Total_Cofins_prod = Format((Valor_total * Cofins_Prod) / 100, "###,##0.00") Else TBProduto!Total_Cofins_prod = 0
            Else
                TBProduto!Cofins_Prod = 0
                TBProduto!Total_Cofins_prod = 0
            End If
            TBProduto!CSLL_Prod = CSLL_Prod
            If CSLL_Prod <> 0 Then TBProduto!Total_CSLL_prod = Format((Valor_total * CSLL_Prod) / 100, "###,##0.00") Else TBProduto!Total_CSLL_prod = 0
            TBProduto!IRPJ_Prod = IRPJ_Prod
            If IRPJ_Prod <> 0 Then TBProduto!Total_IRPJ_prod = Format((Valor_total * IRPJ_Prod) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_prod = 0
            TBProduto!cpp = CPP_Prod
            If CPP_Prod <> 0 Then TBProduto!Total_CPP = Format((Valor_total * CPP_Prod) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
            TBProduto!ICMS_SN = ICMS_SN
            ProcAtualizaCST TBProduto!ID_empresa, TBProduto!Id_Int_Cliente, TBProduto!txt_Razao_Nome, TBProduto!txt_UF, IIf(IsNull(TBProduto!Consumidor_final), 1, TBProduto!Consumidor_final), IIf(IsNull(TBProduto!Finalidade_emissao), 1, TBProduto!Finalidade_emissao)
        Else
            ProcVerifImpostosEmpresa TBProduto!ID_empresa, False, TBProduto!int_Cod_Produto, IIf(IsNull(TBProduto!Servico_cliente), False, TBProduto!Servico_cliente), Valor_total, True, TBProduto!TabelaSN, Lbl2.Caption
            If TBProduto!Imposto_manual_serv <> True Then
                TBProduto!PIS_Serv = PIS_Serv
                TBProduto!Cofins_Serv = Cofins_Serv
                TBProduto!CSLL_Serv = CSLL_Serv
                TBProduto!ISS = ISS_Serv
                TBProduto!INSS_Serv = INSS_Serv
                TBProduto!IRRF_Serv = IRRF_Serv
                TBProduto!cpp = CPP_Serv
            End If
            If TBProduto!PIS_Serv <> 0 Then TBProduto!Total_PIS_serv = Format((Valor_total * TBProduto!PIS_Serv) / 100, "###,##0.00") Else TBProduto!Total_PIS_serv = 0
            If TBProduto!Cofins_Serv <> 0 Then TBProduto!Total_Cofins_serv = Format((Valor_total * TBProduto!Cofins_Serv) / 100, "###,##0.00") Else TBProduto!Total_Cofins_serv = 0
            If TBProduto!CSLL_Serv <> 0 Then TBProduto!Total_CSLL_serv = Format((Valor_total * TBProduto!CSLL_Serv) / 100, "###,##0.00") Else TBProduto!Total_CSLL_serv = 0
            If TBProduto!ISS <> 0 Then TBProduto!VlrISS = Format((Valor_total * TBProduto!ISS) / 100, "###,##0.00") Else TBProduto!VlrISS = 0
            If TBProduto!INSS_Serv <> 0 Then TBProduto!Total_INSS_serv = Format((Valor_total * TBProduto!INSS_Serv) / 100, "###,##0.00") Else TBProduto!Total_INSS_serv = 0
            If TBProduto!IRRF_Serv <> 0 Then TBProduto!Total_IRRF_serv = Format((Valor_total * TBProduto!IRRF_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRRF_serv = 0
            If TBProduto!cpp <> 0 Then TBProduto!Total_CPP = Format((Valor_total * TBProduto!cpp) / 100, "###,##0.00") Else TBProduto!Total_CPP = 0
            
            TBProduto!IRPJ_Serv = IRPJ_Serv
            If TBProduto!IRPJ_Serv <> 0 Then TBProduto!Total_IRPJ_serv = Format((Valor_total * TBProduto!IRPJ_Serv) / 100, "###,##0.00") Else TBProduto!Total_IRPJ_serv = 0
        End If
        TBProduto.Update
        TBProduto.MoveNext
    Loop
End If
TBProduto.Close
ProcCarregaLista
ProcCarregaListaServicos

If NF_alterada = True And Opt_entrada.Value = True Then
ProcCarregaTotaisNota IDnota
Else
ProcGravarTotaisNota
AtualizaImpSN = False
End If


Exit Sub
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub

Public Function VerificaDigVerifNF(ByVal strNumero As String) As String
On Error GoTo tratar_erro
Dim i As Integer: Dim IntCont As Integer: Dim Vlr As Integer
Dim Resto As Integer

IntCont = 2
Vlr = 0
For i = Len(strNumero) To 1 Step -1
    Vlr = Vlr + (Val(Mid(strNumero, i, 1) * IntCont))
    IntCont = IIf(IntCont >= 9, 2, IntCont + 1)
Next
Resto = Vlr Mod 11
Select Case Resto
    Case 0: Resto = 0
    Case 1: Resto = 0
    Case Is > 1: Resto = str(Val(11 - Resto))
End Select
VerificaDigVerifNF = Resto
    
Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Function

Public Function FunCalcularAproxTrib(SomaPisCOFINS As Double, CST_Aprox As String, IDCFOP_Aprox As Integer, Serv_Aprox As Boolean) As Double
On Error GoTo tratar_erro

'Verifica valor aproximado dos impostos LEI 12741
FunCalcularAproxTrib = 0
Set TBCFOP = CreateObject("adodb.recordset")
TBCFOP.Open "SELECT IDCountCfop FROM tbl_NaturezaOperacao WHERE IDCountCfop = " & IDCFOP_Aprox & " AND (Vendas = 'True' OR MaoObra = 'True')", Conexao, adOpenKeyset, adLockReadOnly
If TBCFOP.EOF = False Then
    Set TBHistProc = CreateObject("adodb.recordset")
    TBHistProc.Open "SELECT E.Simples, TN.DAS FROM (Empresa E INNER JOIN tbl_Dados_Nota_Fiscal N ON E.Codigo = N.ID_empresa) LEFT JOIN tbl_Totais_Nota TN ON N.id = TN.ID_Nota WHERE N.ID = " & txtId, Conexao, adOpenKeyset, adLockReadOnly
    If TBHistProc.EOF = False Then
        If TBHistProc!Simples = True Then
            FunCalcularAproxTrib = IIf(IsNull(TBHistProc!DAS), 0, TBHistProc!DAS)
        Else
            If Serv_Aprox = True Then
                FunCalcularAproxTrib = SomaPisCOFINS
            ElseIf CST_Aprox <> "" Then
                If Left(CST_Aprox, 1) = 0 Or Left(CST_Aprox, 1) = 3 Or Left(CST_Aprox, 1) = 4 Or Left(CST_Aprox, 1) = 5 Then FunCalcularAproxTrib = IIf(IsNull(TBFI!Aliq_nacional), 0, TBFI!Aliq_nacional) Else FunCalcularAproxTrib = IIf(IsNull(TBFI!Aliq_importacao), 0, TBFI!Aliq_importacao)
            End If
        End If
    End If
    TBHistProc.Close
End If
TBCFOP.Close

Exit Function
tratar_erro:
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Function

Sub ProcCarregaEntrega()
On Error GoTo tratar_erro

With cmbEntrega
    .Clear
    If txtIDCliente <> "" And txt_Razao <> "" Then
        'Verifica se é cliente ou fornecedor
        Set TBFI = CreateObject("adodb.recordset")
        TBFI.Open "Select * from Clientes where IDCliente = " & txtIDCliente & " and NomeRazao = '" & txt_Razao & "'", Conexao, adOpenKeyset, adLockReadOnly
        If TBFI.EOF = False Then Tipo = "C" Else Tipo = "F"
        TBFI.Close
        
        Permitido = True
        If txtId <> "" Then
            Set TBFI = CreateObject("adodb.recordset")
            If Tipo = "C" Then
                TextoID = ""
                TBFI.Open "Select VC.* from (vendas_comercial VC INNER JOIN vendas_proposta VP ON VP.Cotacao = VC.Cotacao) INNER JOIN tbl_proposta_nota PN ON PN.proposta = VP.Ncotacao and PN.Revisao = VP.Revisao where PN.ID_nota = " & txtId & " and VC.ID_entrega IS NOT NULL and VC.ID_entrega <> 0 order by VC.ID_entrega", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    Do While TBFI.EOF = False
                        If TextoID <> TBFI!ID_entrega Then
                            .AddItem TBFI!Local_entrega
                            .ItemData(cmbEntrega.NewIndex) = TBFI!ID_entrega
                            TextoID = TBFI!ID_entrega
                        End If
                        TBFI.MoveNext
                    Loop
                End If
                TBFI.Close
            Else
                TBFI.Open "Select CC.* from (Compras_comercial CC INNER JOIN Compras_pedido CP ON CP.IDpedido = CC.IDpedido) INNER JOIN tbl_proposta_nota PN ON PN.proposta = CP.Pedido and PN.Revisao = 0 where PN.ID_nota = " & txtId & " and CC.ID_entrega IS NOT NULL and CC.ID_entrega <> 0 and CC.localentrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    Permitido = False
                    .AddItem TBFI!localentrega
                    .ItemData(cmbEntrega.NewIndex) = TBFI!ID_entrega
                    .Text = TBFI!localentrega
                End If
                TBFI.Close
            End If
        End If
        
        If Permitido = True Then
            Set TBFI = CreateObject("adodb.recordset")
            TBFI.Open "Select * from clientes_entrega where idcliente = " & txtIDCliente & " and Tipo = '" & Tipo & "'", Conexao, adOpenKeyset, adLockReadOnly
            If TBFI.EOF = False Then
                Do While TBFI.EOF = False
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    End If
                    Endereco2 = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_entrega), "", TBFI!cidade_entrega) & " - " & IIf(IsNull(TBFI!uf_entrega), "", TBFI!uf_entrega) & " - " & IIf(IsNull(TBFI!cep_entrega), "", TBFI!cep_entrega)
                    .AddItem Endereco2
                    .ItemData(cmbEntrega.NewIndex) = TBFI!identrega
                    .Text = Endereco2
                    TBFI.MoveNext
                Loop
            End If
            TBFI.Close
        End If
        
        identrega = 0
        If txtId <> "" Then
            Set TBAcessos = CreateObject("adodb.recordset")
            TBAcessos.Open "Select ID_entrega from tbl_Dados_Nota_Fiscal_NFe NFE INNER JOIN tbl_Dados_Nota_Fiscal NF ON NF.id = NFE.ID_nota where NF.id = " & txtId & " and NF.ID_int_cliente = " & txtIDCliente & " and NF.txt_razao_nome = '" & txt_Razao & "' and NFE.ID_entrega IS NOT NULL", Conexao, adOpenKeyset, adLockReadOnly
            If TBAcessos.EOF = False Then
                Set TBFI = CreateObject("adodb.recordset")
                TBFI.Open "Select * from clientes_entrega where identrega = " & TBAcessos!ID_entrega, Conexao, adOpenKeyset, adLockReadOnly
                If TBFI.EOF = False Then
                    identrega = TBAcessos!ID_entrega
                    If IsNull(TBFI!Tipo_endereco) = False And TBFI!Tipo_endereco <> "" Then
                        Endereco = TBFI!Tipo_endereco & ": " & IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    Else
                        Endereco = IIf(IsNull(TBFI!endereco_entrega), "", TBFI!endereco_entrega)
                    End If
                    If IsNull(TBFI!Tipo_bairro) = False And TBFI!Tipo_bairro <> "" Then
                        Bairro = TBFI!Tipo_bairro & ": " & IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    Else
                        Bairro = IIf(IsNull(TBFI!bairro_entrega), "", TBFI!bairro_entrega)
                    End If
                    Endereco = Endereco & " - " & IIf(IsNull(TBFI!Numero), "", TBFI!Numero) & " - " & Bairro & " - " & IIf(IsNull(TBFI!cidade_entrega), "", TBFI!cidade_entrega) & " - " & IIf(IsNull(TBFI!uf_entrega), "", TBFI!uf_entrega) & " - " & IIf(IsNull(TBFI!cep_entrega), "", TBFI!cep_entrega)
                    .Text = Endereco
                End If
                TBFI.Close
            End If
            TBAcessos.Close
        End If
    End If
End With

Exit Sub
tratar_erro:
    If Err.Number = 383 Then
        With cmbEntrega
            .AddItem Endereco
            .ItemData(cmbEntrega.NewIndex) = identrega
            .Text = Endereco
        End With
        Exit Sub
    End If
    USMsgBox ("Descrição do erro : " + Error()), vbCritical, "CAPRIND v5.0"
End Sub
